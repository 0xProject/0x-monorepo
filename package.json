{
    "private": true,
    "name": "0x-monorepo",
    "engines": {
        "node" : ">=6.12"
    },
    "workspaces": [
        "packages/*"
    ],
    "scripts": {
        "ganache": "ganache-cli -p 8545 --networkId 50 -m \"${npm_package_config_mnemonic}\"",
        "prettier": "prettier --write '**/*.{ts,tsx,json,md}' --config .prettierrc",
        "prettier:ci": "prettier --list-different '**/*.{ts,tsx,json,md}' --config .prettierrc",
        "report_coverage": "lcov-result-merger 'packages/*/coverage/lcov.info' | coveralls",
        "test:installation": "node ./packages/monorepo-scripts/lib/test_installation.js",
        "run:publish": "run-s install:all build:monorepo_scripts script:prepublish_checks rebuild script:publish",
        "run:publish:dry": "run-s install:all build:monorepo_scripts script:prepublish_checks rebuild script:publish:dry",
        "script:prepublish_checks": "node ./packages/monorepo-scripts/lib/prepublish_checks.js",
        "script:publish": "node ./packages/monorepo-scripts/lib/publish.js",
        "script:publish:dry": "IS_DRY_RUN=true yarn script:publish",
        "install:all": "yarn install",
        "wsrun": "wsrun",
        "lerna:run": "lerna run",
        "watch": "wsrun watch_without_deps $PKG --fast-exit -r --stages --done-criteria='complete|successfully'",
        "build": "wsrun build $PKG --fast-exit -r --stages",
        "build:monorepo_scripts": "PKG=@0xproject/monorepo-scripts yarn build",
        "clean": "wsrun clean $PKG --fast-exit -r --parallel",
        "rebuild": "run-s clean build",
        "test": "wsrun test $PKG --fast-exit --serial --exclude-missing",
        "stage_docs": "wsrun docs:stage $PKG --fast-exit --parallel --exclude-missing",
        "lint": "wsrun lint $PKG --fast-exit --parallel --exclude-missing",
        "comment:postinstall": "HACK: For some reason `yarn` is not setting up symlinks properly for order-utils. We temporarily set them manually. Remove this after V2 refactor is complete.",
        "postinstall": "rm -rf `pwd`/packages/order-utils/node_modules/@0xproject; mkdir `pwd`/packages/order-utils/node_modules/@0xproject; ln -s `pwd`/packages/json-schemas `pwd`/packages/order-utils/node_modules/@0xproject/json-schemas; ln -s `pwd`/packages/types `pwd`/packages/order-utils/node_modules/@0xproject/types; rm -f `pwd`/packages/contracts/node_modules/@0xproject/types; ln -s `pwd`/packages/types `pwd`/packages/contracts/node_modules/@0xproject/types; mkdir -p `pwd`/packages/fill-scenarios/node_modules/@0xproject; ln -s `pwd`/packages/types `pwd`/packages/fill-scenarios/node_modules/@0xproject/types; ln -s `pwd`/packages/order-utils `pwd`/packages/fill-scenarios/node_modules/@0xproject/order-utils"
    },
    "config": {
        "mnemonic": "concert load couple harbor equip island argue ramp clarify fence smart topic"
    },
    "devDependencies": {
        "async-child-process": "^1.1.1",
        "coveralls": "^3.0.0",
        "ganache-cli": "^6.1.0",
        "lcov-result-merger": "^3.0.0",
        "lerna": "^2.5.1",
        "npm-run-all": "^4.1.2",
        "prettier": "^1.11.1",
        "wsrun": "^2.2.0",
        "source-map-support": "^0.5.6"
    },
    "resolutions": {
        "ethereumjs-tx": "0xProject/ethereumjs-tx#fake-tx-include-signature-by-default",
        "ethers": "0xproject/ethers.js#eip-838-reasons"
    }
}
