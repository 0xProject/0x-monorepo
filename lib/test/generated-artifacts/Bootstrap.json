{
    "schemaVersion": "2.0.0",
    "contractName": "Bootstrap",
    "compilerOutput": {
        "abi": [
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "bootstrapCaller",
                        "type": "address"
                    }
                ],
                "stateMutability": "nonpayable",
                "type": "constructor"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "target",
                        "type": "address"
                    },
                    {
                        "internalType": "bytes",
                        "name": "callData",
                        "type": "bytes"
                    }
                ],
                "name": "bootstrap",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "die",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            }
        ],
        "devdoc": {
            "details": "Detachable `bootstrap()` feature.",
            "methods": {
                "bootstrap(address,bytes)": {
                    "details": "Bootstrap the initial feature set of this contract by delegatecalling      into `target`. Before exiting the `bootstrap()` function will      deregister itself from the proxy to prevent being called again.",
                    "params": {
                        "callData": "The call data to execute on `target`.",
                        "target": "The bootstrapper contract address."
                    }
                },
                "constructor": {
                    "details": "Construct this contract and set the bootstrap migration contract.      After constructing this contract, `bootstrap()` should be called      to seed the initial feature set.",
                    "params": {
                        "bootstrapCaller": "The allowed caller of `bootstrap()`."
                    }
                },
                "die()": {
                    "details": "Self-destructs this contract.      Can only be called by the deployer."
                }
            },
            "stateVariables": {
                "_bootstrapCaller": {
                    "details": "The deployer.      This has to be immutable to persist across delegatecalls."
                },
                "_deployer": {
                    "details": "The ZeroEx contract.      This has to be immutable to persist across delegatecalls."
                },
                "_implementation": {
                    "details": "The implementation address of this contract.      This has to be immutable to persist across delegatecalls."
                }
            }
        },
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object": "0x60e060405234801561001057600080fd5b5060405161082538038061082583398101604081905261002f91610051565b33606090811b60805230811b60a0521b6001600160601b03191660c05261007f565b600060208284031215610062578081fd5b81516001600160a01b0381168114610078578182fd5b9392505050565b60805160601c60a05160601c60c05160601c61076a6100bb6000398060e252806101105250806101d752508060705280609e525061076a6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806335f469941461003b57806373f208d514610045575b600080fd5b610043610058565b005b61004361005336600461048d565b6100ca565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146100c7576100c76100c2337f000000000000000000000000000000000000000000000000000000000000000061027b565b610329565b33ff5b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610134576101346100c2337f0000000000000000000000000000000000000000000000000000000000000000610331565b600061013e61033f565b7f73f208d5000000000000000000000000000000000000000000000000000000006000908152602091909152604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff94851617905580517f35f4699400000000000000000000000000000000000000000000000000000000815290517f0000000000000000000000000000000000000000000000000000000000000000909316926335f469949260048084019391929182900301818387803b15801561021e57600080fd5b505af1158015610232573d6000803e3d6000fd5b505050506102768383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061035292505050565b505050565b606060405161028990610586565b604051809103902083836040516024016102a4929190610673565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152905092915050565b805160208201fd5b6060604051610289906105d5565b60008061034c6000610449565b92915050565b600060608373ffffffffffffffffffffffffffffffffffffffff168360405161037b919061056a565b600060405180830381855af49150503d80600081146103b6576040519150601f19603f3d011682016040523d82523d6000602084013e6103bb565b606091505b50915091508115806103cf57508051602014155b80610431575080517fd150751b000000000000000000000000000000000000000000000000000000009061040c9083016020908101908401610523565b7fffffffff000000000000000000000000000000000000000000000000000000001614155b15610443576104436100c28583610464565b50505050565b6000608082600481111561045957fe5b600101901b92915050565b606060405161047290610624565b604051809103902083836040516024016102a492919061069a565b6000806000604084860312156104a1578283fd5b833573ffffffffffffffffffffffffffffffffffffffff811681146104c4578384fd5b9250602084013567ffffffffffffffff808211156104e0578384fd5b81860187601f8201126104f1578485fd5b8035925081831115610501578485fd5b876020848301011115610512578485fd5b949760209095019650909450505050565b600060208284031215610534578081fd5b81517fffffffff0000000000000000000000000000000000000000000000000000000081168114610563578182fd5b9392505050565b6000825161057c818460208701610708565b9190910192915050565b7f496e76616c696444696543616c6c65724572726f7228616464726573732c616481527f6472657373290000000000000000000000000000000000000000000000000000602082015260260190565b7f496e76616c6964426f6f74737472617043616c6c65724572726f72286164647281527f6573732c616464726573732900000000000000000000000000000000000000006020820152602c0190565b7f426f6f74737472617043616c6c4661696c65644572726f72286164647265737381527f2c62797465732900000000000000000000000000000000000000000000000000602082015260270190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b600073ffffffffffffffffffffffffffffffffffffffff841682526040602083015282518060408401526106d5816060850160208701610708565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016060019392505050565b60005b8381101561072357818101518382015260200161070b565b83811115610443575050600091015256fea26469706673582212201a61151226d6d9a933688cc4b3cb691c3dae899a5e985b7065b9ef15b7b22d8e64736f6c634300060a0033",
                "opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x825 CODESIZE SUB DUP1 PUSH2 0x825 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x51 JUMP JUMPDEST CALLER PUSH1 0x60 SWAP1 DUP2 SHL PUSH1 0x80 MSTORE ADDRESS DUP2 SHL PUSH1 0xA0 MSTORE SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0xC0 MSTORE PUSH2 0x7F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x78 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH2 0x76A PUSH2 0xBB PUSH1 0x0 CODECOPY DUP1 PUSH1 0xE2 MSTORE DUP1 PUSH2 0x110 MSTORE POP DUP1 PUSH2 0x1D7 MSTORE POP DUP1 PUSH1 0x70 MSTORE DUP1 PUSH1 0x9E MSTORE POP PUSH2 0x76A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x35F46994 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x73F208D5 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43 PUSH2 0x53 CALLDATASIZE PUSH1 0x4 PUSH2 0x48D JUMP JUMPDEST PUSH2 0xCA JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xC7 JUMPI PUSH2 0xC7 PUSH2 0xC2 CALLER PUSH32 0x0 PUSH2 0x27B JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST CALLER SELFDESTRUCT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x134 JUMPI PUSH2 0x134 PUSH2 0xC2 CALLER PUSH32 0x0 PUSH2 0x331 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E PUSH2 0x33F JUMP JUMPDEST PUSH32 0x73F208D500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND OR SWAP1 SSTORE DUP1 MLOAD PUSH32 0x35F4699400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH32 0x0 SWAP1 SWAP4 AND SWAP3 PUSH4 0x35F46994 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x232 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x276 DUP4 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x352 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0x289 SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A4 SWAP3 SWAP2 SWAP1 PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0x289 SWAP1 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x34C PUSH1 0x0 PUSH2 0x449 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3B6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO DUP1 PUSH2 0x3CF JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ ISZERO JUMPDEST DUP1 PUSH2 0x431 JUMPI POP DUP1 MLOAD PUSH32 0xD150751B00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH2 0x40C SWAP1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0x523 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x443 JUMPI PUSH2 0x443 PUSH2 0xC2 DUP6 DUP4 PUSH2 0x464 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x459 JUMPI INVALID JUMPDEST PUSH1 0x1 ADD SWAP1 SHL SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0x472 SWAP1 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A4 SWAP3 SWAP2 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4A1 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4C4 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4E0 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP7 ADD DUP8 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x4F1 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x501 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP5 DUP4 ADD ADD GT ISZERO PUSH2 0x512 JUMPI DUP5 DUP6 REVERT JUMPDEST SWAP5 SWAP8 PUSH1 0x20 SWAP1 SWAP6 ADD SWAP7 POP SWAP1 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x534 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x563 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x57C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x708 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696444696543616C6C65724572726F7228616464726573732C6164 DUP2 MSTORE PUSH32 0x6472657373290000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x26 ADD SWAP1 JUMP JUMPDEST PUSH32 0x496E76616C6964426F6F74737472617043616C6C65724572726F722861646472 DUP2 MSTORE PUSH32 0x6573732C61646472657373290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2C ADD SWAP1 JUMP JUMPDEST PUSH32 0x426F6F74737472617043616C6C4661696C65644572726F722861646472657373 DUP2 MSTORE PUSH32 0x2C62797465732900000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x27 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x6D5 DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x723 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x70B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x443 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE PUSH2 0x1512 0x26 0xD6 0xD9 0xA9 CALLER PUSH9 0x8CC4B3CB691C3DAE89 SWAP11 0x5E SWAP9 JUMPDEST PUSH17 0x65B9EF15B7B22D8E64736F6C634300060A STOP CALLER ",
                "sourceMap": "869:2369:13:-:0;;;1784:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1850:10;1838:22;;;;;;1896:4;1870:31;;;;1911:34;-1:-1:-1;1911:34:13;;;869:2369;;146:263:-1;;261:2;249:9;240:7;236:23;232:32;229:2;;;-1:-1;;267:12;229:2;83:13;;-1:-1;576:54;;701:35;;691:2;;-1:-1;;740:12;691:2;319:74;223:186;-1:-1;;;223:186;;869:2369:13;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
                "immutableReferences": {
                    "1213": [
                        {
                            "length": 32,
                            "start": 112
                        },
                        {
                            "length": 32,
                            "start": 158
                        }
                    ],
                    "1216": [
                        {
                            "length": 32,
                            "start": 471
                        }
                    ],
                    "1219": [
                        {
                            "length": 32,
                            "start": 226
                        },
                        {
                            "length": 32,
                            "start": 272
                        }
                    ]
                },
                "linkReferences": {},
                "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806335f469941461003b57806373f208d514610045575b600080fd5b610043610058565b005b61004361005336600461048d565b6100ca565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146100c7576100c76100c2337f000000000000000000000000000000000000000000000000000000000000000061027b565b610329565b33ff5b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610134576101346100c2337f0000000000000000000000000000000000000000000000000000000000000000610331565b600061013e61033f565b7f73f208d5000000000000000000000000000000000000000000000000000000006000908152602091909152604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff94851617905580517f35f4699400000000000000000000000000000000000000000000000000000000815290517f0000000000000000000000000000000000000000000000000000000000000000909316926335f469949260048084019391929182900301818387803b15801561021e57600080fd5b505af1158015610232573d6000803e3d6000fd5b505050506102768383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061035292505050565b505050565b606060405161028990610586565b604051809103902083836040516024016102a4929190610673565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152905092915050565b805160208201fd5b6060604051610289906105d5565b60008061034c6000610449565b92915050565b600060608373ffffffffffffffffffffffffffffffffffffffff168360405161037b919061056a565b600060405180830381855af49150503d80600081146103b6576040519150601f19603f3d011682016040523d82523d6000602084013e6103bb565b606091505b50915091508115806103cf57508051602014155b80610431575080517fd150751b000000000000000000000000000000000000000000000000000000009061040c9083016020908101908401610523565b7fffffffff000000000000000000000000000000000000000000000000000000001614155b15610443576104436100c28583610464565b50505050565b6000608082600481111561045957fe5b600101901b92915050565b606060405161047290610624565b604051809103902083836040516024016102a492919061069a565b6000806000604084860312156104a1578283fd5b833573ffffffffffffffffffffffffffffffffffffffff811681146104c4578384fd5b9250602084013567ffffffffffffffff808211156104e0578384fd5b81860187601f8201126104f1578485fd5b8035925081831115610501578485fd5b876020848301011115610512578485fd5b949760209095019650909450505050565b600060208284031215610534578081fd5b81517fffffffff0000000000000000000000000000000000000000000000000000000081168114610563578182fd5b9392505050565b6000825161057c818460208701610708565b9190910192915050565b7f496e76616c696444696543616c6c65724572726f7228616464726573732c616481527f6472657373290000000000000000000000000000000000000000000000000000602082015260260190565b7f496e76616c6964426f6f74737472617043616c6c65724572726f72286164647281527f6573732c616464726573732900000000000000000000000000000000000000006020820152602c0190565b7f426f6f74737472617043616c6c4661696c65644572726f72286164647265737381527f2c62797465732900000000000000000000000000000000000000000000000000602082015260270190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b600073ffffffffffffffffffffffffffffffffffffffff841682526040602083015282518060408401526106d5816060850160208701610708565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016060019392505050565b60005b8381101561072357818101518382015260200161070b565b83811115610443575050600091015256fea26469706673582212201a61151226d6d9a933688cc4b3cb691c3dae899a5e985b7065b9ef15b7b22d8e64736f6c634300060a0033",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x35F46994 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x73F208D5 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43 PUSH2 0x53 CALLDATASIZE PUSH1 0x4 PUSH2 0x48D JUMP JUMPDEST PUSH2 0xCA JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xC7 JUMPI PUSH2 0xC7 PUSH2 0xC2 CALLER PUSH32 0x0 PUSH2 0x27B JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST CALLER SELFDESTRUCT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x134 JUMPI PUSH2 0x134 PUSH2 0xC2 CALLER PUSH32 0x0 PUSH2 0x331 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E PUSH2 0x33F JUMP JUMPDEST PUSH32 0x73F208D500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND OR SWAP1 SSTORE DUP1 MLOAD PUSH32 0x35F4699400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH32 0x0 SWAP1 SWAP4 AND SWAP3 PUSH4 0x35F46994 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x232 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x276 DUP4 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x352 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0x289 SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A4 SWAP3 SWAP2 SWAP1 PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0x289 SWAP1 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x34C PUSH1 0x0 PUSH2 0x449 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3B6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO DUP1 PUSH2 0x3CF JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ ISZERO JUMPDEST DUP1 PUSH2 0x431 JUMPI POP DUP1 MLOAD PUSH32 0xD150751B00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH2 0x40C SWAP1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0x523 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x443 JUMPI PUSH2 0x443 PUSH2 0xC2 DUP6 DUP4 PUSH2 0x464 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x459 JUMPI INVALID JUMPDEST PUSH1 0x1 ADD SWAP1 SHL SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0x472 SWAP1 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A4 SWAP3 SWAP2 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4A1 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4C4 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4E0 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP7 ADD DUP8 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x4F1 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x501 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP5 DUP4 ADD ADD GT ISZERO PUSH2 0x512 JUMPI DUP5 DUP6 REVERT JUMPDEST SWAP5 SWAP8 PUSH1 0x20 SWAP1 SWAP6 ADD SWAP7 POP SWAP1 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x534 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x563 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x57C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x708 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696444696543616C6C65724572726F7228616464726573732C6164 DUP2 MSTORE PUSH32 0x6472657373290000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x26 ADD SWAP1 JUMP JUMPDEST PUSH32 0x496E76616C6964426F6F74737472617043616C6C65724572726F722861646472 DUP2 MSTORE PUSH32 0x6573732C61646472657373290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2C ADD SWAP1 JUMP JUMPDEST PUSH32 0x426F6F74737472617043616C6C4661696C65644572726F722861646472657373 DUP2 MSTORE PUSH32 0x2C62797465732900000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x27 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x6D5 DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x723 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x70B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x443 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE PUSH2 0x1512 0x26 0xD6 0xD9 0xA9 CALLER PUSH9 0x8CC4B3CB691C3DAE89 SWAP11 0x5E SWAP9 JUMPDEST PUSH17 0x65B9EF15B7B22D8E64736F6C634300060A STOP CALLER ",
                "sourceMap": "869:2369:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3035:201;;;:::i;:::-;;2312:625;;;;;;;;;:::i;3035:201::-;3073:10;:23;3087:9;3073:23;;3069:127;;3112:73;:63;3153:10;3165:9;3112:40;:63::i;:::-;:71;:73::i;:::-;3218:10;3205:24;2312:625;2465:10;:30;2479:16;2465:30;;2461:193;;2511:132;:122;2575:10;2603:16;2511:46;:122::i;:132::-;2756:1;2686:28;:26;:28::i;:::-;2721:23;2686:34;:59;;;;;;;;;;;;:72;;;;;;;;;;;2794:32;;;;;;;2804:15;2794:30;;;;;;:32;;;;;2686:34;;2794:32;;;;;;2686:34;2794:30;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2870:60;2913:6;2921:8;;2870:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2870:42:13;;-1:-1:-1;;;2870:60:13:i;:::-;2312:625;;;:::o;1260:301:3:-;1372:12;1450:51;;;;;;;;;;;;;;1516:6;1536:8;1407:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1260:301:3;;;;:::o;1492:170:76:-;1635:9;1629:16;1622:4;1611:9;1607:20;1600:46;941:313:3;1059:12;1137:57;;;;;;1055:466:30;1100:20;1132:19;1154:75;1193:26;1154:25;:75::i;:::-;1132:97;1487:28;-1:-1:-1;;1487:28:30:o;1166:438:27:-;1294:12;1308:23;1335:6;:19;;1355:4;1335:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1293:67;;;;1375:7;1374:8;:47;;;;1398:10;:17;1419:2;1398:23;;1374:47;:116;;;-1:-1:-1;1437:32:27;;1473:17;;1437:32;;;;;;;;;;;;;;:53;;;;1374:116;1370:228;;;1514:73;:63;1558:6;1566:10;1514:43;:63::i;:73::-;1166:438;;;;:::o;1494:335:32:-;1586:12;883:3;1787:9;1779:18;;;;;;;;1800:1;1779:22;1778:44;;;1494:335;-1:-1:-1;;1494:335:32:o;1567:314:3:-;1689:12;1767:52;;;;;;;;;;;;;;1834:6;1854:10;1724:150;;;;;;;;;;639:490:-1;;;;779:2;767:9;758:7;754:23;750:32;747:2;;;-1:-1;;785:12;747:2;85:6;72:20;6638:42;7162:5;6627:54;7137:5;7134:35;7124:2;;-1:-1;;7173:12;7124:2;837:63;-1:-1;965:2;950:18;;937:32;989:18;978:30;;;975:2;;;-1:-1;;1011:12;975:2;1096:6;1085:9;1081:22;409:3;402:4;394:6;390:17;386:27;376:2;;-1:-1;;417:12;376:2;460:6;447:20;437:30;;989:18;479:6;476:30;473:2;;;-1:-1;;509:12;473:2;604:3;965:2;584:17;545:6;570:32;;567:41;564:2;;;-1:-1;;611:12;564:2;741:388;;965:2;541:17;;;;-1:-1;1039:74;;-1:-1;;;;741:388;1136:261;;1250:2;1238:9;1229:7;1225:23;1221:32;1218:2;;;-1:-1;;1256:12;1218:2;225:6;219:13;6486:66;7284:5;6475:78;7260:5;7257:34;7247:2;;-1:-1;;7295:12;7247:2;1308:73;1212:185;-1:-1;;;1212:185;3504:271;;2034:5;5797:12;2145:52;2190:6;2185:3;2178:4;2171:5;2167:16;2145:52;;;2209:16;;;;;3638:137;-1:-1;;3638:137;3782:381;2534:34;2514:55;;2603:8;2598:2;2589:12;;2582:30;2498:2;2631:12;;3971:192;4170:381;2954:34;2934:55;;3023:14;3018:2;3009:12;;3002:36;2918:2;3057:12;;4359:192;4558:381;3380:34;3360:55;;3449:9;3444:2;3435:12;;3428:31;3344:2;3478:12;;4747:192;4946:333;6638:42;6627:54;;;1475:37;;6627:54;;5265:2;5250:18;;1475:37;5101:2;5086:18;;5072:207;5286:417;;6638:42;6631:5;6627:54;1482:3;1475:37;5459:2;5577;5566:9;5562:18;5555:48;1666:5;5797:12;5953:6;5459:2;5448:9;5444:18;5941:19;1759:52;1804:6;5981:14;5448:9;5981:14;5577:2;1785:5;1781:16;1759:52;;;7058:2;7038:14;7054:7;7034:28;1823:39;;;;5981:14;1823:39;;5430:273;-1:-1;;;5430:273;6694:268;6759:1;6766:101;6780:6;6777:1;6774:13;6766:101;;;6847:11;;;6841:18;6828:11;;;6821:39;6802:2;6795:10;6766:101;;;6882:6;6879:1;6876:13;6873:2;;;-1:-1;;6759:1;6929:16;;6922:27;6743:219"
            }
        }
    },
    "sourceTreeHashHex": "0xecebd406a4e2d38b97da2e1b338bb865f31f1fc35b00869eee79abd368978512",
    "sources": {
        "./Bootstrap.sol": {
            "id": 13
        },
        "@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol": {
            "id": 76
        },
        "../migrations/LibBootstrap.sol": {
            "id": 27
        },
        "../errors/LibProxyRichErrors.sol": {
            "id": 3
        },
        "../storage/LibProxyStorage.sol": {
            "id": 30
        },
        "../storage/LibStorage.sol": {
            "id": 32
        },
        "./IBootstrap.sol": {
            "id": 14
        }
    },
    "sourceCodes": {
        "./Bootstrap.sol": "/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\";\nimport \"../migrations/LibBootstrap.sol\";\nimport \"../storage/LibProxyStorage.sol\";\nimport \"./IBootstrap.sol\";\n\n\n/// @dev Detachable `bootstrap()` feature.\ncontract Bootstrap is\n    IBootstrap\n{\n    // solhint-disable state-visibility,indent\n    /// @dev The ZeroEx contract.\n    ///      This has to be immutable to persist across delegatecalls.\n    address immutable private _deployer;\n    /// @dev The implementation address of this contract.\n    ///      This has to be immutable to persist across delegatecalls.\n    address immutable private _implementation;\n    /// @dev The deployer.\n    ///      This has to be immutable to persist across delegatecalls.\n    address immutable private _bootstrapCaller;\n    // solhint-enable state-visibility,indent\n\n    using LibRichErrorsV06 for bytes;\n\n    /// @dev Construct this contract and set the bootstrap migration contract.\n    ///      After constructing this contract, `bootstrap()` should be called\n    ///      to seed the initial feature set.\n    /// @param bootstrapCaller The allowed caller of `bootstrap()`.\n    constructor(address bootstrapCaller) public {\n        _deployer = msg.sender;\n        _implementation = address(this);\n        _bootstrapCaller = bootstrapCaller;\n    }\n\n    /// @dev Bootstrap the initial feature set of this contract by delegatecalling\n    ///      into `target`. Before exiting the `bootstrap()` function will\n    ///      deregister itself from the proxy to prevent being called again.\n    /// @param target The bootstrapper contract address.\n    /// @param callData The call data to execute on `target`.\n    function bootstrap(address target, bytes calldata callData) external override {\n        // Only the bootstrap caller can call this function.\n        if (msg.sender != _bootstrapCaller) {\n            LibProxyRichErrors.InvalidBootstrapCallerError(\n                msg.sender,\n                _bootstrapCaller\n            ).rrevert();\n        }\n        // Deregister.\n        LibProxyStorage.getStorage().impls[this.bootstrap.selector] = address(0);\n        // Self-destruct.\n        Bootstrap(_implementation).die();\n        // Call the bootstrapper.\n        LibBootstrap.delegatecallBootstrapFunction(target, callData);\n    }\n\n    /// @dev Self-destructs this contract.\n    ///      Can only be called by the deployer.\n    function die() external {\n        if (msg.sender != _deployer) {\n            LibProxyRichErrors.InvalidDieCallerError(msg.sender, _deployer).rrevert();\n        }\n        selfdestruct(msg.sender);\n    }\n}\n",
        "@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol": "/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\n\nlibrary LibRichErrorsV06 {\n\n    // bytes4(keccak256(\"Error(string)\"))\n    bytes4 internal constant STANDARD_ERROR_SELECTOR = 0x08c379a0;\n\n    // solhint-disable func-name-mixedcase\n    /// @dev ABI encode a standard, string revert error payload.\n    ///      This is the same payload that would be included by a `revert(string)`\n    ///      solidity statement. It has the function signature `Error(string)`.\n    /// @param message The error string.\n    /// @return The ABI encoded error.\n    function StandardError(string memory message)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return abi.encodeWithSelector(\n            STANDARD_ERROR_SELECTOR,\n            bytes(message)\n        );\n    }\n    // solhint-enable func-name-mixedcase\n\n    /// @dev Reverts an encoded rich revert reason `errorData`.\n    /// @param errorData ABI encoded error data.\n    function rrevert(bytes memory errorData)\n        internal\n        pure\n    {\n        assembly {\n            revert(add(errorData, 0x20), mload(errorData))\n        }\n    }\n}\n",
        "../migrations/LibBootstrap.sol": "/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-utils/contracts/src/v06/errors/LibRichErrorsV06.sol\";\nimport \"../errors/LibProxyRichErrors.sol\";\n\n\nlibrary LibBootstrap {\n\n    /// @dev Magic bytes returned by the bootstrapper to indicate success.\n    ///      This is `keccack('BOOTSTRAP_SUCCESS')`.\n    bytes4 internal constant BOOTSTRAP_SUCCESS = 0xd150751b;\n\n    using LibRichErrorsV06 for bytes;\n\n    /// @dev Perform a delegatecall and ensure it returns the magic bytes.\n    /// @param target The call target.\n    /// @param data The call data.\n    function delegatecallBootstrapFunction(\n        address target,\n        bytes memory data\n    )\n        internal\n    {\n        (bool success, bytes memory resultData) = target.delegatecall(data);\n        if (!success ||\n            resultData.length != 32 ||\n            abi.decode(resultData, (bytes4)) != BOOTSTRAP_SUCCESS)\n        {\n            LibProxyRichErrors.BootstrapCallFailedError(target, resultData).rrevert();\n        }\n    }\n}\n",
        "../errors/LibProxyRichErrors.sol": "/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\n\nlibrary LibProxyRichErrors {\n\n    // solhint-disable func-name-mixedcase\n\n    function NotImplementedError(bytes4 selector)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return abi.encodeWithSelector(\n            bytes4(keccak256(\"NotImplementedError(bytes4)\")),\n            selector\n        );\n    }\n\n    function InvalidBootstrapCallerError(address actual, address expected)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return abi.encodeWithSelector(\n            bytes4(keccak256(\"InvalidBootstrapCallerError(address,address)\")),\n            actual,\n            expected\n        );\n    }\n\n    function InvalidDieCallerError(address actual, address expected)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return abi.encodeWithSelector(\n            bytes4(keccak256(\"InvalidDieCallerError(address,address)\")),\n            actual,\n            expected\n        );\n    }\n\n    function BootstrapCallFailedError(address target, bytes memory resultData)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return abi.encodeWithSelector(\n            bytes4(keccak256(\"BootstrapCallFailedError(address,bytes)\")),\n            target,\n            resultData\n        );\n    }\n}\n",
        "../storage/LibProxyStorage.sol": "/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\nimport \"./LibStorage.sol\";\n\n\n/// @dev Storage helpers for the proxy contract.\nlibrary LibProxyStorage {\n\n    /// @dev Storage bucket for proxy contract.\n    struct Storage {\n        // Mapping of function selector -> function implementation\n        mapping(bytes4 => address) impls;\n        // The owner of the proxy contract.\n        address owner;\n    }\n\n    /// @dev Get the storage bucket for this contract.\n    function getStorage() internal pure returns (Storage storage stor) {\n        uint256 storageSlot = LibStorage.getStorageSlot(\n            LibStorage.StorageId.Proxy\n        );\n        // Dip into assembly to change the slot pointed to by the local\n        // variable `stor`.\n        // See https://solidity.readthedocs.io/en/v0.6.8/assembly.html?highlight=slot#access-to-external-variables-functions-and-libraries\n        assembly { stor_slot := storageSlot }\n    }\n}\n",
        "../storage/LibStorage.sol": "/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\n\n/// @dev Common storage helpers\nlibrary LibStorage {\n\n    /// @dev What to bit-shift a storage ID by to get its slot.\n    ///      This gives us a maximum of 2**128 inline fields in each bucket.\n    uint256 private constant STORAGE_SLOT_EXP = 128;\n\n    /// @dev Storage IDs for feature storage buckets.\n    ///      WARNING: APPEND-ONLY.\n    enum StorageId {\n        Proxy,\n        SimpleFunctionRegistry,\n        Ownable,\n        TokenSpender,\n        TransformERC20\n    }\n\n    /// @dev Get the storage slot given a storage ID. We assign unique, well-spaced\n    ///     slots to storage bucket variables to ensure they do not overlap.\n    ///     See: https://solidity.readthedocs.io/en/v0.6.6/assembly.html#access-to-external-variables-functions-and-libraries\n    /// @param storageId An entry in `StorageId`\n    /// @return slot The storage slot.\n    function getStorageSlot(StorageId storageId)\n        internal\n        pure\n        returns (uint256 slot)\n    {\n        // This should never overflow with a reasonable `STORAGE_SLOT_EXP`\n        // because Solidity will do a range check on `storageId` during the cast.\n        return (uint256(storageId) + 1) << STORAGE_SLOT_EXP;\n    }\n}\n",
        "./IBootstrap.sol": "/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\n\n/// @dev Detachable `bootstrap()` feature.\ninterface IBootstrap {\n\n    /// @dev Bootstrap the initial feature set of this contract by delegatecalling\n    ///      into `target`. Before exiting the `bootstrap()` function will\n    ///      deregister itself from the proxy to prevent being called again.\n    /// @param target The bootstrapper contract address.\n    /// @param callData The call data to execute on `target`.\n    function bootstrap(address target, bytes calldata callData) external;\n}\n"
    },
    "compiler": {
        "name": "solc",
        "version": "0.6.10+commit.00c0fcaf",
        "settings": {
            "remappings": [
                "@0x/contracts-utils=/home/gene/dev/0x-monorepo/node_modules/@0x/contracts-utils",
                "@0x/contracts-erc20=/home/gene/dev/0x-monorepo/node_modules/@0x/contracts-erc20"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 1000000,
                "details": {
                    "yul": true,
                    "deduplicate": true,
                    "cse": true,
                    "constantOptimizer": true
                }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "istanbul"
        }
    },
    "chains": {}
}
