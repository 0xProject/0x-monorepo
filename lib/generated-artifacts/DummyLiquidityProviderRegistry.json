{
    "schemaVersion": "2.0.0",
    "contractName": "DummyLiquidityProviderRegistry",
    "compilerOutput": {
        "abi": [
            {
                "inputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "constructor"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "takerToken",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "makerToken",
                        "type": "address"
                    }
                ],
                "name": "getLiquidityProviderForMarket",
                "outputs": [
                    {
                        "internalType": "address",
                        "name": "poolAddress",
                        "type": "address"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "takerToken",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "makerToken",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "poolAddress",
                        "type": "address"
                    }
                ],
                "name": "setLiquidityProviderForMarket",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            }
        ],
        "devdoc": {
            "methods": {
                "getLiquidityProviderForMarket(address,address)": {
                    "details": "Returns the address of pool for a market given market (xAsset, yAsset), or reverts if pool does not exist.",
                    "params": {
                        "makerToken": "Second asset managed by pool.",
                        "takerToken": "First asset managed by pool."
                    },
                    "return": "Address of pool."
                },
                "setLiquidityProviderForMarket(address,address,address)": {
                    "details": "Sets address of pool for a market given market (xAsset, yAsset).",
                    "params": {
                        "makerToken": "Second asset managed by pool.",
                        "poolAddress": "Address of pool.",
                        "takerToken": "First asset managed by pool."
                    }
                }
            }
        },
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object": "0x608060405234801561001057600080fd5b506102a6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063153f59971461003b57806384da8d1e14610064575b600080fd5b61004e610049366004610192565b610079565b60405161005b919061020b565b60405180910390f35b6100776100723660046101c6565b6100f2565b005b73ffffffffffffffffffffffffffffffffffffffff808316600090815260208181526040808320858516845290915290205416806100ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e39061022c565b60405180910390fd5b92915050565b73ffffffffffffffffffffffffffffffffffffffff92831660008181526020818152604080832095871683529481528482208054969094167fffffffffffffffffffffffff0000000000000000000000000000000000000000968716811790945581815284822092825291909152919091208054909216179055565b803573ffffffffffffffffffffffffffffffffffffffff811681146100ec57600080fd5b600080604083850312156101a4578182fd5b6101ae848461016e565b91506101bd846020850161016e565b90509250929050565b6000806000606084860312156101da578081fd5b6101e4858561016e565b92506101f3856020860161016e565b9150610202856040860161016e565b90509250925092565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6020808252601c908201527f52656769737472792f4d41524b45545f504149525f4e4f545f5345540000000060408201526060019056fea365627a7a723158207e290b85f35fcf1f87e3e52acbfa11735014eb7179756d25175d6faaea3376ab6c6578706572696d656e74616cf564736f6c63430005100040",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x153F5997 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x84DA8D1E EQ PUSH2 0x64 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x192 JUMP JUMPDEST PUSH2 0x79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0x72 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C6 JUMP JUMPDEST PUSH2 0xF2 JUMP JUMPDEST STOP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0xEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3 SWAP1 PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 DUP8 AND DUP4 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP1 SLOAD SWAP7 SWAP1 SWAP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP7 DUP8 AND DUP2 OR SWAP1 SWAP5 SSTORE DUP2 DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A4 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1AE DUP5 DUP5 PUSH2 0x16E JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x16E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DA JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1E4 DUP6 DUP6 PUSH2 0x16E JUMP JUMPDEST SWAP3 POP PUSH2 0x1F3 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16E JUMP JUMPDEST SWAP2 POP PUSH2 0x202 DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x16E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x52656769737472792F4D41524B45545F504149525F4E4F545F53455400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 PUSH31 0x290B85F35FCF1F87E3E52ACBFA11735014EB7179756D25175D6FAAEA3376AB PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV LT STOP BLOCKHASH ",
                "sourceMap": "60:1404:1:-;;;165:84;8:9:-1;5:2;;;30:1;27;20:12;5:2;165:84:1;60:1404;;;;;;"
            },
            "deployedBytecode": {
                "linkReferences": {},
                "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063153f59971461003b57806384da8d1e14610064575b600080fd5b61004e610049366004610192565b610079565b60405161005b919061020b565b60405180910390f35b6100776100723660046101c6565b6100f2565b005b73ffffffffffffffffffffffffffffffffffffffff808316600090815260208181526040808320858516845290915290205416806100ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e39061022c565b60405180910390fd5b92915050565b73ffffffffffffffffffffffffffffffffffffffff92831660008181526020818152604080832095871683529481528482208054969094167fffffffffffffffffffffffff0000000000000000000000000000000000000000968716811790945581815284822092825291909152919091208054909216179055565b803573ffffffffffffffffffffffffffffffffffffffff811681146100ec57600080fd5b600080604083850312156101a4578182fd5b6101ae848461016e565b91506101bd846020850161016e565b90509250929050565b6000806000606084860312156101da578081fd5b6101e4858561016e565b92506101f3856020860161016e565b9150610202856040860161016e565b90509250925092565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6020808252601c908201527f52656769737472792f4d41524b45545f504149525f4e4f545f5345540000000060408201526060019056fea365627a7a723158207e290b85f35fcf1f87e3e52acbfa11735014eb7179756d25175d6faaea3376ab6c6578706572696d656e74616cf564736f6c63430005100040",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x153F5997 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x84DA8D1E EQ PUSH2 0x64 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x192 JUMP JUMPDEST PUSH2 0x79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0x72 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C6 JUMP JUMPDEST PUSH2 0xF2 JUMP JUMPDEST STOP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0xEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3 SWAP1 PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 DUP8 AND DUP4 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP1 SLOAD SWAP7 SWAP1 SWAP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP7 DUP8 AND DUP2 OR SWAP1 SWAP5 SSTORE DUP2 DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A4 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1AE DUP5 DUP5 PUSH2 0x16E JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x16E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DA JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1E4 DUP6 DUP6 PUSH2 0x16E JUMP JUMPDEST SWAP3 POP PUSH2 0x1F3 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16E JUMP JUMPDEST SWAP2 POP PUSH2 0x202 DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x16E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x52656769737472792F4D41524B45545F504149525F4E4F545F53455400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 PUSH31 0x290B85F35FCF1F87E3E52ACBFA11735014EB7179756D25175D6FAAEA3376AB PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV LT STOP BLOCKHASH ",
                "sourceMap": "60:1404:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:1404:1;;;;;;;;;;;;;;;;;;;;;;;;1109:353;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;567:272;;;;;;;;;:::i;:::-;;1109:353;1306:25;;;;1257:19;1306:25;;;;;;;;;;;:37;;;;;;;;;;;;1374:27;1353:102;;;;;;;;;;;;;;;;;;;;;;1109:353;;;;:::o;567:272::-;720:25;;;;:13;:25;;;;;;;;;;;:37;;;;;;;;;;;:51;;;;;;;;;;;;;;;781:25;;;;;;:37;;;;;;;;;;;:51;;;;;;;;567:272::o;5:130:-1:-;72:20;;2447:42;2436:54;;2561:35;;2551:2;;2610:1;;2600:12;142:366;;;263:2;251:9;242:7;238:23;234:32;231:2;;;-1:-1;;269:12;231:2;331:53;376:7;352:22;331:53;;;321:63;;439:53;484:7;421:2;464:9;460:22;439:53;;;429:63;;225:283;;;;;;515:491;;;;653:2;641:9;632:7;628:23;624:32;621:2;;;-1:-1;;659:12;621:2;721:53;766:7;742:22;721:53;;;711:63;;829:53;874:7;811:2;854:9;850:22;829:53;;;819:63;;937:53;982:7;919:2;962:9;958:22;937:53;;;927:63;;615:391;;;;;;1470:213;2447:42;2436:54;;;;1084:37;;1588:2;1573:18;;1559:124;1690:407;1881:2;1895:47;;;1358:2;1866:18;;;2208:19;1394:30;2248:14;;;1374:51;1444:12;;;1852:245"
            }
        }
    },
    "sources": {
        "src/DummyLiquidityProviderRegistry.sol": {
            "id": 1
        }
    },
    "sourceCodes": {
        "src/DummyLiquidityProviderRegistry.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\n\ncontract DummyLiquidityProviderRegistry\n{\n    address private constant NULL_ADDRESS = address(0x0);\n\n    constructor()\n        public\n    // solhint-disable-next-line no-empty-blocks\n    {}\n\n    mapping (address => mapping (address => address)) internal _gAddressBook;\n\n    /// @dev Sets address of pool for a market given market (xAsset, yAsset).\n    /// @param takerToken First asset managed by pool.\n    /// @param makerToken Second asset managed by pool.\n    /// @param poolAddress Address of pool.\n    function setLiquidityProviderForMarket(\n        address takerToken,\n        address makerToken,\n        address poolAddress\n    ) external\n    {\n        _gAddressBook[takerToken][makerToken] = poolAddress;\n        _gAddressBook[makerToken][takerToken] = poolAddress;\n    }\n\n    /// @dev Returns the address of pool for a market given market (xAsset, yAsset), or reverts if pool does not exist.\n    /// @param takerToken First asset managed by pool.\n    /// @param makerToken Second asset managed by pool.\n    /// @return Address of pool.\n    function getLiquidityProviderForMarket(\n        address takerToken,\n        address makerToken\n    )\n        external\n        view\n        returns (address poolAddress)\n    {\n        poolAddress = _gAddressBook[takerToken][makerToken];\n        require(\n            poolAddress != NULL_ADDRESS,\n            \"Registry/MARKET_PAIR_NOT_SET\"\n        );\n    }\n}"
    },
    "sourceTreeHashHex": "0x5e2b5c8df6b807a8de5b0efa8bddd9a7f672a5eb8d41d70eb2eb79812c7c9403",
    "compiler": {
        "name": "solc",
        "version": "soljson-v0.5.16+commit.9c3226ce.js",
        "settings": {
            "optimizer": {
                "enabled": true,
                "runs": 1000000,
                "details": {
                    "yul": true,
                    "deduplicate": true,
                    "cse": true,
                    "constantOptimizer": true
                }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "istanbul",
            "remappings": [
                "@0x/contracts-asset-proxy=/Users/danielpyrathon/Desktop/Projects/0x-monorepo/node_modules/@0x/contracts-asset-proxy",
                "@0x/contracts-erc20=/Users/danielpyrathon/Desktop/Projects/0x-monorepo/node_modules/@0x/contracts-erc20",
                "@0x/contracts-utils=/Users/danielpyrathon/Desktop/Projects/0x-monorepo/node_modules/@0x/contracts-utils",
                "@0x/contracts-exchange-libs=/Users/danielpyrathon/Desktop/Projects/0x-monorepo/node_modules/@0x/contracts-exchange-libs",
                "@0x/contracts-exchange=/Users/danielpyrathon/Desktop/Projects/0x-monorepo/node_modules/@0x/contracts-exchange"
            ]
        }
    },
    "chains": {}
}
