async callAsync(
    callData: Partial<CallData> = {},
    defaultBlock?: BlockParam,
): Promise<{{> return_type outputs=outputs}}> {
    BaseContract._assertCallParams(callData, defaultBlock);
    {{#ifEquals this.stateMutability "pure"}}
    const rawCallResult = await self._evmExecAsync(this.getABIEncodedTransactionData());
    {{else}}
    const rawCallResult = await self._performCallAsync({ ...callData, data: this.getABIEncodedTransactionData() }, defaultBlock);
    {{/ifEquals}}
    const abiEncoder = self._lookupAbiEncoder(functionSignature);
    return abiEncoder.strictDecodeReturnValue<{{> return_type outputs=outputs}}>(rawCallResult);
},
getABIEncodedTransactionData(): string {
    return self._strictEncodeArguments(functionSignature, [{{> normalized_params inputs=inputs}}]);
},
