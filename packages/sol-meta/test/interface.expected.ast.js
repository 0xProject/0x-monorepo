{ type: 'SourceUnit',
  children:
   [ { type: 'PragmaDirective', name: 'solidity', value: '^0.4.23' },
     { type: 'PragmaDirective',
       name: 'experimental',
       value: 'ABIEncoderV2' },
     { type: 'ContractDefinition',
       name: 'MAssetProxyDispatcher',
       baseContracts: [],
       subNodes:
        [ { type: 'StateVariableDeclaration',
            variables:
             [ { type: 'VariableDeclaration',
                 typeName: { type: 'ElementaryTypeName', name: 'uint256' },
                 name: 'dispatchTransferFrom_counter',
                 expression:
                  { type: 'NumberLiteral', number: '0', subdenomination: null },
                 visibility: 'default',
                 isStateVar: true,
                 isDeclaredConst: false,
                 isIndexed: false } ],
            initialValue:
             { type: 'NumberLiteral', number: '0', subdenomination: null } },
          { type: 'EventDefinition',
            name: 'dispatchTransferFromCalled',
            parameters:
             { type: 'ParameterList',
               parameters:
                [ { type: 'VariableDeclaration',
                    typeName: { type: 'ElementaryTypeName', name: 'uint256' },
                    name: 'counter',
                    isStateVar: false,
                    isIndexed: false },
                  { type: 'VariableDeclaration',
                    typeName: { type: 'ElementaryTypeName', name: 'bytes' },
                    name: 'assetData',
                    isStateVar: false,
                    isIndexed: false },
                  { type: 'VariableDeclaration',
                    typeName: { type: 'ElementaryTypeName', name: 'address' },
                    name: 'from',
                    isStateVar: false,
                    isIndexed: false },
                  { type: 'VariableDeclaration',
                    typeName: { type: 'ElementaryTypeName', name: 'address' },
                    name: 'to',
                    isStateVar: false,
                    isIndexed: false },
                  { type: 'VariableDeclaration',
                    typeName: { type: 'ElementaryTypeName', name: 'uint256' },
                    name: 'amount',
                    isStateVar: false,
                    isIndexed: false } ] },
            isAnonymous: false },
          { type: 'FunctionDefinition',
            name: 'dispatchTransferFrom',
            parameters:
             { type: 'ParameterList',
               parameters:
                [ { type: 'Parameter',
                    typeName: { type: 'ElementaryTypeName', name: 'bytes' },
                    name: 'assetData',
                    storageLocation: 'memory',
                    isStateVar: false,
                    isIndexed: false },
                  { type: 'Parameter',
                    typeName: { type: 'ElementaryTypeName', name: 'address' },
                    name: 'from',
                    storageLocation: null,
                    isStateVar: false,
                    isIndexed: false },
                  { type: 'Parameter',
                    typeName: { type: 'ElementaryTypeName', name: 'address' },
                    name: 'to',
                    storageLocation: null,
                    isStateVar: false,
                    isIndexed: false },
                  { type: 'Parameter',
                    typeName: { type: 'ElementaryTypeName', name: 'uint256' },
                    name: 'amount',
                    storageLocation: null,
                    isStateVar: false,
                    isIndexed: false } ] },
            returnParameters: null,
            body:
             { type: 'Block',
               statements:
                [ { type: 'EmitStatement',
                    eventCall:
                     { type: 'FunctionCall',
                       expression: { type: 'Identifier', name: 'dispatchTransferFromCalled' },
                       arguments:
                        [ { type: 'Identifier', name: 'dispatchTransferFrom_counter' },
                          { type: 'Identifier', name: 'assetData' },
                          { type: 'Identifier', name: 'from' },
                          { type: 'Identifier', name: 'to' },
                          { type: 'Identifier', name: 'amount' } ],
                       names: [] } },
                  { type: 'ExpressionStatement',
                    expression:
                     { type: 'UnaryOperation',
                       operator: '++',
                       subExpression: { type: 'Identifier', name: 'dispatchTransferFrom_counter' },
                       isPrefix: false } } ] },
            visibility: 'internal',
            modifiers: [],
            isConstructor: false,
            stateMutability: null },
          { type: 'StateVariableDeclaration',
            variables:
             [ { type: 'VariableDeclaration',
                 typeName: { type: 'ElementaryTypeName', name: 'uint256' },
                 name: 'someFunction_counter',
                 expression:
                  { type: 'NumberLiteral', number: '0', subdenomination: null },
                 visibility: 'internal',
                 isStateVar: true,
                 isDeclaredConst: false,
                 isIndexed: false } ],
            initialValue:
             { type: 'NumberLiteral', number: '0', subdenomination: null } },
          { type: 'StructDefinition',
            name: 'someFunction_ReturnType',
            members:
             [ { type: 'VariableDeclaration',
                 typeName: { type: 'ElementaryTypeName', name: 'uint256' },
                 name: '_arg_0',
                 storageLocation: null,
                 isStateVar: false,
                 isIndexed: false },
               { type: 'VariableDeclaration',
                 typeName: { type: 'ElementaryTypeName', name: 'bytes' },
                 name: '_arg_1',
                 storageLocation: null,
                 isStateVar: false,
                 isIndexed: false } ] },
          { type: 'StateVariableDeclaration',
            variables:
             [ { type: 'VariableDeclaration',
                 typeName:
                  { type: 'Mapping',
                    keyType: { type: 'ElementaryTypeName', name: 'uint256' },
                    valueType:
                     { type: 'UserDefinedTypeName',
                       namePath: 'someFunction_ReturnType' } },
                 name: 'someFunction_returns',
                 expression: null,
                 visibility: 'default',
                 isStateVar: true,
                 isDeclaredConst: false,
                 isIndexed: false } ],
            initialValue: null },
          { type: 'EventDefinition',
            name: 'someFunctionCalled',
            parameters:
             { type: 'ParameterList',
               parameters:
                [ { type: 'VariableDeclaration',
                    typeName: { type: 'ElementaryTypeName', name: 'uint256' },
                    name: 'counter',
                    isStateVar: false,
                    isIndexed: false },
                  { type: 'VariableDeclaration',
                    typeName: { type: 'ElementaryTypeName', name: 'uint256' },
                    name: 'a',
                    isStateVar: false,
                    isIndexed: false },
                  { type: 'VariableDeclaration',
                    typeName: { type: 'ElementaryTypeName', name: 'uint256' },
                    name: 'b',
                    isStateVar: false,
                    isIndexed: false } ] },
            isAnonymous: false },
          { type: 'FunctionDefinition',
            name: 'someFunctionSet',
            parameters:
             { type: 'ParameterList',
               parameters:
                [ { type: 'Parameter',
                    typeName: { type: 'ElementaryTypeName', name: 'uint256' },
                    name: 'counter',
                    storageLocation: null,
                    isStateVar: false,
                    isIndexed: false },
                  { type: 'Parameter',
                    typeName:
                     { type: 'UserDefinedTypeName',
                       namePath: 'someFunction_ReturnType' },
                    name: 'values',
                    storageLocation: null,
                    isStateVar: false,
                    isIndexed: false } ] },
            returnParameters: null,
            body:
             { type: 'Block',
               statements:
                [ { type: 'ExpressionStatement',
                    expression:
                     { type: 'BinaryOperation',
                       operator: '=',
                       left:
                        { type: 'IndexAccess',
                          base: { type: 'Identifier', name: 'someFunction_returns' },
                          index: { type: 'Identifier', name: 'counter' } },
                       right: { type: 'Identifier', name: 'values' } } } ] },
            visibility: 'public',
            modifiers: [],
            isConstructor: false,
            stateMutability: null },
          { type: 'FunctionDefinition',
            name: 'someFunction',
            parameters:
             { type: 'ParameterList',
               parameters:
                [ { type: 'Parameter',
                    typeName: { type: 'ElementaryTypeName', name: 'uint256' },
                    name: 'a',
                    storageLocation: null,
                    isStateVar: false,
                    isIndexed: false },
                  { type: 'Parameter',
                    typeName: { type: 'ElementaryTypeName', name: 'uint256' },
                    name: 'b',
                    storageLocation: null,
                    isStateVar: false,
                    isIndexed: false } ] },
            returnParameters:
             { type: 'ParameterList',
               parameters:
                [ { type: 'Parameter',
                    typeName: { type: 'ElementaryTypeName', name: 'uint256' },
                    name: null,
                    storageLocation: null,
                    isStateVar: false,
                    isIndexed: false },
                  { type: 'Parameter',
                    typeName: { type: 'ElementaryTypeName', name: 'bytes' },
                    name: null,
                    storageLocation: null,
                    isStateVar: false,
                    isIndexed: false } ] },
            body:
             { type: 'Block',
               statements:
                [ { type: 'EmitStatement',
                    eventCall:
                     { type: 'FunctionCall',
                       expression: { type: 'Identifier', name: 'someFunctionCalled' },
                       arguments:
                        [ { type: 'Identifier', name: 'someFunction_counter' },
                          { type: 'Identifier', name: 'a' },
                          { type: 'Identifier', name: 'b' } ],
                       names: [] } },
                  { type: 'VariableDeclarationStatement',
                    variables:
                     [ { type: 'VariableDeclaration',
                         typeName:
                          { type: 'UserDefinedTypeName',
                            namePath: 'someFunction_ReturnType' },
                         name: 'returnValues',
                         storageLocation: 'storage',
                         isStateVar: false,
                         isIndexed: false } ],
                    initialValue:
                     { type: 'IndexAccess',
                       base: { type: 'Identifier', name: 'someFunction_returns' },
                       index: { type: 'Identifier', name: 'someFunction_counter' } } },
                  { type: 'ExpressionStatement',
                    expression:
                     { type: 'UnaryOperation',
                       operator: '++',
                       subExpression: { type: 'Identifier', name: 'someFunction_counter' },
                       isPrefix: false } },
                  { type: 'ReturnStatement',
                    expression:
                     { type: 'TupleExpression',
                       components:
                        [ { type: 'MemberAccess',
                            expression: { type: 'Identifier', name: 'returnValues' },
                            memberName: '_arg_0' },
                          { type: 'MemberAccess',
                            expression: { type: 'Identifier', name: 'returnValues' },
                            memberName: '_arg_1' } ],
                       isArray: false } } ] },
            visibility: 'internal',
            modifiers: [],
            isConstructor: false,
            stateMutability: null } ],
       kind: 'contract' } ] }
