{"version":3,"sources":["webpack:///./ts/highlight.tsx"],"names":["hljs","__webpack_require__","javascript","json","_","registerLanguage","PATCH_TYPES","+","-","!","exports","highlight","_a","language","code","isDiff","gutter","isEtc","map","split","line","index","type","currentLine","test","replace","g","undefined","value","join","diffHighlight","hlCode","hc","splice","length"],"mappings":"0IAAA,IAAAA,EAAAC,EAAA,KACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAAH,EAAA,IAEAD,EAAKK,iBAAiB,aAAcH,GACpCF,EAAKK,iBAAiB,OAAQF,GAM9B,IAAMG,EAA8B,CAChCC,IAAK,WACLC,IAAK,WACLC,IAAK,UAmDAC,EAAAC,UAlBT,SAAmBC,OAAEC,EAAAD,EAAAC,SAAUC,EAAAF,EAAAE,KAAMC,EAAAH,EAAAG,OAAQC,EAAAJ,EAAAI,OAAQC,EAAAL,EAAAK,MACjD,GAAIF,EACA,OAhCR,SAAuBF,EAAkBC,EAAWE,GAChD,OAAOZ,EAAEc,IAAIJ,EAAKK,MAAM,UAAW,SAACC,EAAcC,GAC9C,IAAIC,EACAC,EAAcH,EAEd,sDAAsDI,KAAKD,GAC3DD,EAAO,QACA,iCAAiCE,KAAKD,GAC7CD,EAAO,UAEPA,EAAOhB,EAAYiB,EAAY,KAAO,OACtCA,EAAcA,EAAYE,QAAQ,WAAY,KAGlD,IAAMC,EAAIV,EAAOK,GAEjB,MAAO,4BAA4BM,IAAND,EAAqBA,EAAC,IAAM,IAAE,iBAAiBJ,EAAI,KAC5EtB,EAAKW,UAAUE,EAAUU,GAAaK,MAAK,YAEhDC,KAAK,MAaGC,CAAcjB,EAAUC,EAAME,GAGzC,IAAMe,EAAS/B,EAAKW,UAAUE,EAAUC,GAAMc,MAE9C,IAAKX,EACD,OAAOc,EAGX,IAAMC,EAAKD,EAAOZ,MAAM,UAIxB,OAHAa,EAAGC,OAAO,EAAG,EAAG,WAChBD,EAAGC,OAAOD,EAAGE,OAAS,EAAG,EAAG,WAErBF,EAAGH,KAAK","file":"bundle-highlightjs.b689062270f1d37ff7fb.js","sourcesContent":["import * as hljs from 'highlight.js/lib/highlight';\nimport * as javascript from 'highlight.js/lib/languages/javascript';\nimport * as json from 'highlight.js/lib/languages/json';\nimport * as _ from 'lodash';\n\nhljs.registerLanguage('javascript', javascript);\nhljs.registerLanguage('json', json);\n\ninterface PatchInterface {\n    [key: string]: string;\n}\n\nconst PATCH_TYPES: PatchInterface = {\n    '+': 'addition',\n    '-': 'deletion',\n    '!': 'change',\n};\n\nfunction diffHighlight(language: string, code: any, gutter: any): string {\n    return _.map(code.split(/\\r?\\n/g), (line: string, index: number) => {\n        let type;\n        let currentLine = line;\n\n        if (/^-{3} [^-]+ -{4}$|^\\*{3} [^*]+ \\*{4}$|^@@ [^@]+ @@$/.test(currentLine)) {\n            type = 'chunk';\n        } else if (/^Index: |^[+\\-*]{3}|^[*=]{5,}$/.test(currentLine)) {\n            type = 'header';\n        } else {\n            type = PATCH_TYPES[currentLine[0]] || 'null';\n            currentLine = currentLine.replace(/^[+\\-! ]/, '');\n        }\n\n        const g = gutter[index];\n\n        return `<span data-gutter=\"${g !== undefined ? `${g}x` : ''}\" class=\"line-${type}\">${\n            hljs.highlight(language, currentLine).value\n        }</span>`;\n    }).join('\\n');\n}\n\ninterface HighlightProps {\n    language: string;\n    code: string;\n    isDiff?: boolean;\n    gutter?: [];\n    isEtc?: boolean;\n}\n\nfunction highlight({ language, code, isDiff, gutter, isEtc }: HighlightProps): string {\n    if (isDiff) {\n        return diffHighlight(language, code, gutter);\n    }\n\n    const hlCode = hljs.highlight(language, code).value;\n\n    if (!isEtc) {\n        return hlCode;\n    }\n\n    const hc = hlCode.split(/\\r?\\n/g);\n    hc.splice(1, 0, '    ...');\n    hc.splice(hc.length - 1, 0, '    ...');\n\n    return hc.join('\\n');\n}\n\nexport { highlight };\n"],"sourceRoot":""}