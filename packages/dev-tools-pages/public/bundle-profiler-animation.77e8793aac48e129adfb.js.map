{"version":3,"sources":["webpack:///./ts/components/animations/profiler/index.tsx","webpack:///./ts/components/animations/index.tsx"],"names":["React","__webpack_require__","index_1","animationData","exports","ProfilerAnimation","createElement","BaseAnimation","width","height","react_lottie_1","styled_components_1","variables_1","_super","_this","apply","this","arguments","state","undefined","_timeout","__extends","prototype","componentDidMount","_updateAnimationSize","window","addEventListener","_handleResize","bind","componentWillUnmount","removeEventListener","render","props","Container","InnerContainer","default","options","loop","autoplay","clearTimeout","setTimeout","windowWidth","innerWidth","ratio","Math","round","setState","PureComponent","div","templateObject_2","__makeTemplateObject","media","large","templateObject_1","templateObject_3"],"mappings":"85rBAAA,IAAAA,EAAAC,EAAA,GAEAC,EAAAD,EAAA,IAEAE,EAAAF,EAAA,KAMSG,EAAAC,kBAJ+C,WAAM,OAC1DL,EAAAM,cAACJ,EAAAK,cAAa,CAACJ,cAAeA,EAAeK,MAAO,KAAMC,OAAQ,2iBCPtE,IAAAT,EAAAC,EAAA,GACAS,EAAAT,EAAA,IACAU,EAAAV,EAAA,GAEAW,EAAAX,EAAA,GAaAM,EAAA,SAAAM,GAAA,SAAAN,IAAA,IAAAO,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YACWF,EAAAI,MAAwB,CAC3BT,YAAQU,EACRX,WAAOW,GAEHL,EAAAM,cAAWD,IA+CvB,OApD4BE,EAAAd,EAAAM,GAMjBN,EAAAe,UAAAC,kBAAP,WACIP,KAAKQ,uBACLC,OAAOC,iBAAiB,SAAUV,KAAKW,cAAcC,KAAKZ,QAEvDT,EAAAe,UAAAO,qBAAP,WACIJ,OAAOK,oBAAoB,SAAUd,KAAKW,cAAcC,KAAKZ,QAE1DT,EAAAe,UAAAS,OAAP,WACY,IAAA5B,EAAAa,KAAAgB,MAAA7B,cACFM,EAASO,KAAKE,MAAMT,QAAUO,KAAKgB,MAAMvB,OACzCD,EAAQQ,KAAKE,MAAMV,OAASQ,KAAKgB,MAAMxB,MAE7C,OACIR,EAAAM,cAAC2B,EAAS,CAACxB,OAAQA,GACfT,EAAAM,cAAC4B,EAAc,KACXlC,EAAAM,cAACI,EAAAyB,QAAM,CACH3B,MAAOA,EACPC,OAAQA,EACR2B,QAAS,CACLC,MAAM,EACNC,UAAU,EACVnC,cAAaA,QAO7BI,EAAAe,UAAAK,cAAR,WACIY,aAAavB,KAAKI,UAClBJ,KAAKI,SAAWK,OAAOe,WAAWxB,KAAKQ,qBAAqBI,KAAKZ,MAAO,KAEpET,EAAAe,UAAAE,qBAAR,WACI,IACIhB,EACAC,EAFEgC,EAAchB,OAAOiB,WAG3B,GAAID,GAAe,IAAM,CACrB,IACME,GADWF,EAAc,KACNzB,KAAKgB,MAAMxB,MAEpCC,EAASmC,KAAKC,MAAM7B,KAAKgB,MAAMvB,OAASkC,GACxCnC,EAAQoC,KAAKC,MAAM7B,KAAKgB,MAAMxB,MAAQmC,GAG1C3B,KAAK8B,SAAS,CAAEtC,MAAKA,EAAEC,OAAMA,KAErCF,EApDA,CAA4BP,EAAM+C,eA2EzB3C,EAAAG,gBArBT,UAAM0B,EAAYtB,EAAAwB,QAAOa,IAAGC,MAAAC,EAAA,uJAAgB,mCAET,2GAS9B,SATS,SAAAlB,GAAS,OAAAA,EAAMvB,QAMvBG,EAAAuC,MAAMC,MAAKC,MAAAH,EAAA,8IAMXhB,EAAiBvB,EAAAwB,QAAOa,IAAGM,MAAAJ,EAAA","file":"bundle-profiler-animation.77e8793aac48e129adfb.js","sourcesContent":["import * as React from 'react';\n\nimport { BaseAnimation } from '../index';\n\nimport * as animationData from './data.json';\n\nconst ProfilerAnimation: React.StatelessComponent<{}> = () => (\n    <BaseAnimation animationData={animationData} width={1985} height={657} />\n);\n\nexport { ProfilerAnimation };\n","import * as React from 'react';\nimport Lottie from 'react-lottie';\nimport styled from 'styled-components';\n\nimport { media } from 'ts/variables';\n\ninterface AnimationProps {\n    animationData: object;\n    width: number;\n    height: number;\n}\n\ninterface AnimationState {\n    width?: number | undefined;\n    height?: number | undefined;\n}\n\nclass BaseAnimation extends React.PureComponent<AnimationProps, AnimationState> {\n    public state: AnimationState = {\n        height: undefined,\n        width: undefined,\n    };\n    private _timeout = undefined as number;\n    public componentDidMount(): void {\n        this._updateAnimationSize();\n        window.addEventListener('resize', this._handleResize.bind(this));\n    }\n    public componentWillUnmount(): void {\n        window.removeEventListener('resize', this._handleResize.bind(this));\n    }\n    public render(): React.ReactNode {\n        const { animationData } = this.props;\n        const height = this.state.height || this.props.height;\n        const width = this.state.width || this.props.width;\n\n        return (\n            <Container height={height}>\n                <InnerContainer>\n                    <Lottie\n                        width={width}\n                        height={height}\n                        options={{\n                            loop: true,\n                            autoplay: true,\n                            animationData,\n                        }}\n                    />\n                </InnerContainer>\n            </Container>\n        );\n    }\n    private _handleResize(): void {\n        clearTimeout(this._timeout);\n        this._timeout = window.setTimeout(this._updateAnimationSize.bind(this), 50);\n    }\n    private _updateAnimationSize(): void {\n        const windowWidth = window.innerWidth;\n        let width;\n        let height;\n        if (windowWidth <= 1000) {\n            const maxWidth = windowWidth + 250;\n            const ratio = maxWidth / this.props.width;\n\n            height = Math.round(this.props.height * ratio);\n            width = Math.round(this.props.width * ratio);\n        }\n\n        this.setState({ width, height });\n    }\n}\n\nconst Container = styled.div<AnimationProps>`\n    width: 100%;\n    height: ${props => props.height}px;\n    position: absolute;\n    top: 40%;\n    left: 0;\n    z-index: -1;\n    overflow: hidden;\n    ${media.large`\n        top: 100%;\n        transform: translateY(-50%);\n    `};\n`;\n\nconst InnerContainer = styled.div`\n    position: absolute;\n    top: 0;\n    left: 50%;\n    transform: translateX(-50%);\n`;\n\nexport { BaseAnimation };\n"],"sourceRoot":""}