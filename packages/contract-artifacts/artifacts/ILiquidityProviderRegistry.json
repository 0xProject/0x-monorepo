{
    "schemaVersion": "2.0.0",
    "contractName": "ILiquidityProviderRegistry",
    "compilerOutput": {
        "abi": [
            {
                "constant": true,
                "inputs": [
                    { "internalType": "address", "name": "takerToken", "type": "address" },
                    { "internalType": "address", "name": "makerToken", "type": "address" }
                ],
                "name": "getLiquidityProviderForMarket",
                "outputs": [{ "internalType": "address", "name": "providerAddress", "type": "address" }],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            }
        ],
        "devdoc": {
            "methods": {
                "getLiquidityProviderForMarket(address,address)": {
                    "details": "Returns the address of a liquidity provider for the given market      (takerToken, makerToken), reverting if the pool does not exist.",
                    "params": {
                        "makerToken": "Maker asset managed by liquidity provider.",
                        "takerToken": "Taker asset managed by liquidity provider."
                    },
                    "return": "Address of the liquidity provider."
                }
            }
        },
        "evm": { "bytecode": { "object": "0x" }, "deployedBytecode": { "object": "0x" } }
    },
    "compiler": {
        "name": "solc",
        "version": "soljson-v0.5.16+commit.9c3226ce.js",
        "settings": {
            "optimizer": {
                "enabled": true,
                "runs": 1000000,
                "details": { "yul": true, "deduplicate": true, "cse": true, "constantOptimizer": true }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "istanbul"
        }
    },
    "chains": {}
}
