{
    "schemaVersion": "2.0.0",
    "contractName": "IWallet",
    "compilerOutput": {
        "abi": [
            {
                "constant": true,
                "inputs": [
                    { "internalType": "bytes32", "name": "hash", "type": "bytes32" },
                    { "internalType": "bytes", "name": "signature", "type": "bytes" }
                ],
                "name": "isValidSignature",
                "outputs": [{ "internalType": "bytes4", "name": "", "type": "bytes4" }],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            }
        ],
        "devdoc": {
            "methods": {
                "isValidSignature(bytes32,bytes)": {
                    "details": "Verifies that a signature is valid.",
                    "params": { "hash": "Message hash that is signed.", "signature": "Proof of signing." },
                    "return": "Magic bytes4 value if the signature is valid.         Magic value is bytes4(keccak256(\"isValidWalletSignature(bytes32,address,bytes)\"))"
                }
            }
        },
        "evm": { "bytecode": { "object": "0x" } }
    },
    "networks": {}
}
