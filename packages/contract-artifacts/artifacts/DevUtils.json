{
    "schemaVersion": "2.0.0",
    "contractName": "DevUtils",
    "compilerOutput": {
        "abi": [
            {
                "inputs": [
                    { "internalType": "address", "name": "_exchange", "type": "address" },
                    { "internalType": "address", "name": "_chaiBridge", "type": "address" }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "constructor"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "EIP712_EXCHANGE_DOMAIN_HASH",
                "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeAssetProxyDispatchError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.AssetProxyDispatchErrorCodes",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeAssetProxyExistsError",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "assetProxyAddress", "type": "address" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeAssetProxyId",
                "outputs": [{ "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeAssetProxyTransferError",
                "outputs": [
                    { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" },
                    { "internalType": "bytes", "name": "errorData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeEIP1271SignatureError",
                "outputs": [
                    { "internalType": "address", "name": "verifyingContractAddress", "type": "address" },
                    { "internalType": "bytes", "name": "data", "type": "bytes" },
                    { "internalType": "bytes", "name": "signature", "type": "bytes" },
                    { "internalType": "bytes", "name": "errorData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeERC1155AssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "tokenAddress", "type": "address" },
                    { "internalType": "uint256[]", "name": "tokenIds", "type": "uint256[]" },
                    { "internalType": "uint256[]", "name": "tokenValues", "type": "uint256[]" },
                    { "internalType": "bytes", "name": "callbackData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeERC20AssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "tokenAddress", "type": "address" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeERC20BridgeAssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "tokenAddress", "type": "address" },
                    { "internalType": "address", "name": "bridgeAddress", "type": "address" },
                    { "internalType": "bytes", "name": "bridgeData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeERC721AssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "tokenAddress", "type": "address" },
                    { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeExchangeInvalidContextError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.ExchangeContextErrorCodes",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                    { "internalType": "address", "name": "contextAddress", "type": "address" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeFillError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.FillErrorCodes",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeIncompleteFillError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.IncompleteFillErrorCode",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "uint256", "name": "expectedAssetFillAmount", "type": "uint256" },
                    { "internalType": "uint256", "name": "actualAssetFillAmount", "type": "uint256" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeMultiAssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "uint256[]", "name": "amounts", "type": "uint256[]" },
                    { "internalType": "bytes[]", "name": "nestedAssetData", "type": "bytes[]" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeNegativeSpreadError",
                "outputs": [
                    { "internalType": "bytes32", "name": "leftOrderHash", "type": "bytes32" },
                    { "internalType": "bytes32", "name": "rightOrderHash", "type": "bytes32" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeOrderEpochError",
                "outputs": [
                    { "internalType": "address", "name": "makerAddress", "type": "address" },
                    { "internalType": "address", "name": "orderSenderAddress", "type": "address" },
                    { "internalType": "uint256", "name": "currentEpoch", "type": "uint256" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeOrderStatusError",
                "outputs": [
                    { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                    { "internalType": "enum LibOrder.OrderStatus", "name": "orderStatus", "type": "uint8" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeSignatureError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.SignatureErrorCodes",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "bytes32", "name": "hash", "type": "bytes32" },
                    { "internalType": "address", "name": "signerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "signature", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeSignatureValidatorNotApprovedError",
                "outputs": [
                    { "internalType": "address", "name": "signerAddress", "type": "address" },
                    { "internalType": "address", "name": "validatorAddress", "type": "address" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeSignatureWalletError",
                "outputs": [
                    { "internalType": "bytes32", "name": "hash", "type": "bytes32" },
                    { "internalType": "address", "name": "signerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "signature", "type": "bytes" },
                    { "internalType": "bytes", "name": "errorData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeStaticCallAssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "staticCallTargetAddress", "type": "address" },
                    { "internalType": "bytes", "name": "staticCallData", "type": "bytes" },
                    { "internalType": "bytes32", "name": "expectedReturnDataHash", "type": "bytes32" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeTransactionError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.TransactionErrorCodes",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "bytes32", "name": "transactionHash", "type": "bytes32" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeTransactionExecutionError",
                "outputs": [
                    { "internalType": "bytes32", "name": "transactionHash", "type": "bytes32" },
                    { "internalType": "bytes", "name": "errorData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    { "internalType": "address", "name": "tokenAddress", "type": "address" },
                    { "internalType": "uint256[]", "name": "tokenIds", "type": "uint256[]" },
                    { "internalType": "uint256[]", "name": "tokenValues", "type": "uint256[]" },
                    { "internalType": "bytes", "name": "callbackData", "type": "bytes" }
                ],
                "name": "encodeERC1155AssetData",
                "outputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "address", "name": "tokenAddress", "type": "address" }],
                "name": "encodeERC20AssetData",
                "outputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    { "internalType": "address", "name": "tokenAddress", "type": "address" },
                    { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
                ],
                "name": "encodeERC721AssetData",
                "outputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    { "internalType": "uint256[]", "name": "amounts", "type": "uint256[]" },
                    { "internalType": "bytes[]", "name": "nestedAssetData", "type": "bytes[]" }
                ],
                "name": "encodeMultiAssetData",
                "outputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    { "internalType": "address", "name": "staticCallTargetAddress", "type": "address" },
                    { "internalType": "bytes", "name": "staticCallData", "type": "bytes" },
                    { "internalType": "bytes32", "name": "expectedReturnDataHash", "type": "bytes32" }
                ],
                "name": "encodeStaticCallAssetData",
                "outputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" }
                ],
                "name": "getAssetProxyAllowance",
                "outputs": [{ "internalType": "uint256", "name": "allowance", "type": "uint256" }],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" }
                ],
                "name": "getBalance",
                "outputs": [{ "internalType": "uint256", "name": "balance", "type": "uint256" }],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" }
                ],
                "name": "getBalanceAndAssetProxyAllowance",
                "outputs": [
                    { "internalType": "uint256", "name": "balance", "type": "uint256" },
                    { "internalType": "uint256", "name": "allowance", "type": "uint256" }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes[]", "name": "assetData", "type": "bytes[]" }
                ],
                "name": "getBatchAssetProxyAllowances",
                "outputs": [{ "internalType": "uint256[]", "name": "allowances", "type": "uint256[]" }],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes[]", "name": "assetData", "type": "bytes[]" }
                ],
                "name": "getBatchBalances",
                "outputs": [{ "internalType": "uint256[]", "name": "balances", "type": "uint256[]" }],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes[]", "name": "assetData", "type": "bytes[]" }
                ],
                "name": "getBatchBalancesAndAssetProxyAllowances",
                "outputs": [
                    { "internalType": "uint256[]", "name": "balances", "type": "uint256[]" },
                    { "internalType": "uint256[]", "name": "allowances", "type": "uint256[]" }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "address[]", "name": "addresses", "type": "address[]" }],
                "name": "getEthBalances",
                "outputs": [{ "internalType": "uint256[]", "name": "", "type": "uint256[]" }],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    },
                    { "internalType": "uint256", "name": "chainId", "type": "uint256" },
                    { "internalType": "address", "name": "exchange", "type": "address" }
                ],
                "name": "getOrderHash",
                "outputs": [{ "internalType": "bytes32", "name": "orderHash", "type": "bytes32" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    },
                    { "internalType": "bytes", "name": "signature", "type": "bytes" }
                ],
                "name": "getOrderRelevantState",
                "outputs": [
                    {
                        "components": [
                            { "internalType": "enum LibOrder.OrderStatus", "name": "orderStatus", "type": "uint8" },
                            { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                            { "internalType": "uint256", "name": "orderTakerAssetFilledAmount", "type": "uint256" }
                        ],
                        "internalType": "struct LibOrder.OrderInfo",
                        "name": "orderInfo",
                        "type": "tuple"
                    },
                    { "internalType": "uint256", "name": "fillableTakerAssetAmount", "type": "uint256" },
                    { "internalType": "bool", "name": "isValidSignature", "type": "bool" }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    { "internalType": "bytes[]", "name": "signatures", "type": "bytes[]" }
                ],
                "name": "getOrderRelevantStates",
                "outputs": [
                    {
                        "components": [
                            { "internalType": "enum LibOrder.OrderStatus", "name": "orderStatus", "type": "uint8" },
                            { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                            { "internalType": "uint256", "name": "orderTakerAssetFilledAmount", "type": "uint256" }
                        ],
                        "internalType": "struct LibOrder.OrderInfo[]",
                        "name": "ordersInfo",
                        "type": "tuple[]"
                    },
                    { "internalType": "uint256[]", "name": "fillableTakerAssetAmounts", "type": "uint256[]" },
                    { "internalType": "bool[]", "name": "isValidSignature", "type": "bool[]" }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    },
                    { "internalType": "address", "name": "takerAddress", "type": "address" },
                    { "internalType": "uint256", "name": "takerAssetFillAmount", "type": "uint256" }
                ],
                "name": "getSimulatedOrderMakerTransferResults",
                "outputs": [
                    {
                        "internalType": "enum OrderTransferSimulationUtils.OrderTransferResults",
                        "name": "orderTransferResults",
                        "type": "uint8"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    },
                    { "internalType": "address", "name": "takerAddress", "type": "address" },
                    { "internalType": "uint256", "name": "takerAssetFillAmount", "type": "uint256" }
                ],
                "name": "getSimulatedOrderTransferResults",
                "outputs": [
                    {
                        "internalType": "enum OrderTransferSimulationUtils.OrderTransferResults",
                        "name": "orderTransferResults",
                        "type": "uint8"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    { "internalType": "address[]", "name": "takerAddresses", "type": "address[]" },
                    { "internalType": "uint256[]", "name": "takerAssetFillAmounts", "type": "uint256[]" }
                ],
                "name": "getSimulatedOrdersTransferResults",
                "outputs": [
                    {
                        "internalType": "enum OrderTransferSimulationUtils.OrderTransferResults[]",
                        "name": "orderTransferResults",
                        "type": "uint8[]"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "gasPrice", "type": "uint256" },
                            { "internalType": "address", "name": "signerAddress", "type": "address" },
                            { "internalType": "bytes", "name": "data", "type": "bytes" }
                        ],
                        "internalType": "struct LibZeroExTransaction.ZeroExTransaction",
                        "name": "transaction",
                        "type": "tuple"
                    },
                    { "internalType": "uint256", "name": "chainId", "type": "uint256" },
                    { "internalType": "address", "name": "exchange", "type": "address" }
                ],
                "name": "getTransactionHash",
                "outputs": [{ "internalType": "bytes32", "name": "transactionHash", "type": "bytes32" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" }
                ],
                "name": "getTransferableAssetAmount",
                "outputs": [{ "internalType": "uint256", "name": "transferableAssetAmount", "type": "uint256" }],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "revertIfInvalidAssetData",
                "outputs": [],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            }
        ],
        "devdoc": {
            "methods": {
                "decodeAssetProxyDispatchError(bytes)": {
                    "details": "Decompose an ABI-encoded AssetProxyDispatchError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode The error code.orderHash Hash of the order being dispatched.assetData Asset data of the order being dispatched."
                },
                "decodeAssetProxyExistsError(bytes)": {
                    "details": "Decompose an ABI-encoded AssetProxyExistsError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "assetProxyId Id of asset proxy.assetProxyAddress The address of the asset proxy."
                },
                "decodeAssetProxyId(bytes)": {
                    "details": "Decode AssetProxy identifier",
                    "params": {
                        "assetData": "AssetProxy-compliant asset data describing an ERC-20, ERC-721, ERC1155, or MultiAsset asset."
                    },
                    "return": "The AssetProxy identifier"
                },
                "decodeAssetProxyTransferError(bytes)": {
                    "details": "Decompose an ABI-encoded AssetProxyTransferError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "orderHash Hash of the order being dispatched.assetData Asset data of the order being dispatched.errorData ABI-encoded revert data from the asset proxy."
                },
                "decodeEIP1271SignatureError(bytes)": {
                    "details": "Decompose an ABI-encoded SignatureValidatorError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "signerAddress The expected signer of the hash.signature The full signature bytes.errorData The revert data thrown by the validator contract."
                },
                "decodeERC1155AssetData(bytes)": {
                    "details": "Decode ERC-1155 asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant asset data describing an ERC-1155 set of assets." },
                    "return": "The ERC-1155 AssetProxy identifier, the address of the ERC-1155 contract hosting the assets, an array of the identifiers of the assets to be traded, an array of asset amounts to be traded, and callback data.  Each element of the arrays corresponds to the same-indexed element of the other array.  Return values specified as `memory` are returned as pointers to locations within the memory of the input parameter `assetData`."
                },
                "decodeERC20AssetData(bytes)": {
                    "details": "Decode ERC-20 asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant asset data describing an ERC-20 asset." },
                    "return": "The AssetProxy identifier, and the address of the ERC-20 contract hosting this asset."
                },
                "decodeERC20BridgeAssetData(bytes)": {
                    "details": "Decode ERC20Bridge asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant asset data describing an ERC20Bridge asset" },
                    "return": "The ERC20BridgeProxy identifier, the address of the ERC20 token to transfer, the address of the bridge contract, and extra data to be passed to the bridge contract."
                },
                "decodeERC721AssetData(bytes)": {
                    "details": "Decode ERC-721 asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant asset data describing an ERC-721 asset." },
                    "return": "The ERC-721 AssetProxy identifier, the address of the ERC-721 contract hosting this asset, and the identifier of the specific asset to be traded."
                },
                "decodeExchangeInvalidContextError(bytes)": {
                    "details": "Decompose an ABI-encoded OrderStatusError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode Error code that corresponds to invalid maker, taker, or sender.orderHash The order hash.contextAddress The maker, taker, or sender address"
                },
                "decodeFillError(bytes)": {
                    "details": "Decompose an ABI-encoded FillError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode The error code.orderHash The order hash."
                },
                "decodeIncompleteFillError(bytes)": {
                    "details": "Decompose an ABI-encoded IncompleteFillError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "orderHash Hash of the order being filled."
                },
                "decodeMultiAssetData(bytes)": {
                    "details": "Decode multi-asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant data describing a multi-asset basket." },
                    "return": "The Multi-Asset AssetProxy identifier, an array of the amounts of the assets to be traded, and an array of the AssetProxy-compliant data describing each asset to be traded.  Each element of the arrays corresponds to the same-indexed element of the other array."
                },
                "decodeNegativeSpreadError(bytes)": {
                    "details": "Decompose an ABI-encoded NegativeSpreadError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "leftOrderHash Hash of the left order being matched.rightOrderHash Hash of the right order being matched."
                },
                "decodeOrderEpochError(bytes)": {
                    "details": "Decompose an ABI-encoded OrderEpochError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "makerAddress The order maker.orderSenderAddress The order sender.currentEpoch The current epoch for the maker."
                },
                "decodeOrderStatusError(bytes)": {
                    "details": "Decompose an ABI-encoded OrderStatusError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "orderHash The order hash.orderStatus The order status."
                },
                "decodeSignatureError(bytes)": {
                    "details": "Decompose an ABI-encoded SignatureError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode The error code.signerAddress The expected signer of the hash.signature The full signature."
                },
                "decodeSignatureValidatorNotApprovedError(bytes)": {
                    "details": "Decompose an ABI-encoded SignatureValidatorNotApprovedError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "signerAddress The expected signer of the hash.validatorAddress The expected validator."
                },
                "decodeSignatureWalletError(bytes)": {
                    "details": "Decompose an ABI-encoded SignatureWalletError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode The error code.signerAddress The expected signer of the hash.signature The full signature bytes.errorData The revert data thrown by the validator contract."
                },
                "decodeStaticCallAssetData(bytes)": {
                    "details": "Decode StaticCall asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant asset data describing a StaticCall asset" },
                    "return": "The StaticCall AssetProxy identifier, the target address of the StaticCAll, the data to be passed to the target address, and the expected Keccak-256 hash of the static call return data."
                },
                "decodeTransactionError(bytes)": {
                    "details": "Decompose an ABI-encoded TransactionError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode The error code.transactionHash Hash of the transaction."
                },
                "decodeTransactionExecutionError(bytes)": {
                    "details": "Decompose an ABI-encoded TransactionExecutionError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "transactionHash Hash of the transaction.errorData Error thrown by exeucteTransaction()."
                },
                "encodeERC1155AssetData(address,uint256[],uint256[],bytes)": {
                    "details": "Encode ERC-1155 asset data into the format described in the AssetProxy contract specification.",
                    "params": {
                        "callbackData": "Data to be passed to receiving contracts when a transfer is performed.",
                        "tokenAddress": "The address of the ERC-1155 contract hosting the asset(s) to be traded.",
                        "tokenIds": "The identifiers of the specific assets to be traded.",
                        "tokenValues": "The amounts of each asset to be traded."
                    },
                    "return": "AssetProxy-compliant asset data describing the set of assets."
                },
                "encodeERC20AssetData(address)": {
                    "details": "Encode ERC-20 asset data into the format described in the AssetProxy contract specification.",
                    "params": { "tokenAddress": "The address of the ERC-20 contract hosting the asset to be traded." },
                    "return": "AssetProxy-compliant data describing the asset."
                },
                "encodeERC721AssetData(address,uint256)": {
                    "details": "Encode ERC-721 asset data into the format described in the AssetProxy specification.",
                    "params": {
                        "tokenAddress": "The address of the ERC-721 contract hosting the asset to be traded.",
                        "tokenId": "The identifier of the specific asset to be traded."
                    },
                    "return": "AssetProxy-compliant asset data describing the asset."
                },
                "encodeMultiAssetData(uint256[],bytes[])": {
                    "details": "Encode data for multiple assets, per the AssetProxy contract specification.",
                    "params": {
                        "amounts": "The amounts of each asset to be traded.",
                        "nestedAssetData": "AssetProxy-compliant data describing each asset to be traded."
                    },
                    "return": "AssetProxy-compliant data describing the set of assets."
                },
                "encodeStaticCallAssetData(address,bytes,bytes32)": {
                    "details": "Encode StaticCall asset data into the format described in the AssetProxy contract specification.",
                    "params": {
                        "expectedReturnDataHash": "Expected Keccak-256 hash of the StaticCall return data.",
                        "staticCallData": "Data that will be passed to staticCallTargetAddress in the StaticCall.",
                        "staticCallTargetAddress": "Target address of StaticCall."
                    },
                    "return": "AssetProxy-compliant asset data describing the set of assets."
                },
                "getAssetProxyAllowance(address,bytes)": {
                    "details": "Returns the number of asset(s) (described by assetData) that the corresponding AssetProxy contract is authorized to spend.  When the asset data contains multiple assets (eg for Multi-Asset), the return value indicates how many complete \"baskets\" of those assets may be spent by all of the corresponding AssetProxy contracts.",
                    "params": {
                        "assetData": "Details of asset, encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "Number of assets (or asset baskets) that the corresponding AssetProxy is authorized to spend."
                },
                "getBalance(address,bytes)": {
                    "details": "Returns the owner's balance of the assets(s) specified in assetData.  When the asset data contains multiple assets (eg in ERC1155 or Multi-Asset), the return value indicates how many complete \"baskets\" of those assets are owned by owner.",
                    "params": {
                        "assetData": "Details of asset, encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "Number of assets (or asset baskets) held by owner."
                },
                "getBalanceAndAssetProxyAllowance(address,bytes)": {
                    "details": "Calls getBalance() and getAllowance() for assetData.",
                    "params": {
                        "assetData": "Details of asset, encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "Number of assets (or asset baskets) held by owner, and number of assets (or asset baskets) that the corresponding AssetProxy is authorized to spend."
                },
                "getBatchAssetProxyAllowances(address,bytes[])": {
                    "details": "Calls getAssetProxyAllowance() for each element of assetData.",
                    "params": {
                        "assetData": "Array of asset details, each encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "An array of asset allowances from getAllowance(), with each element corresponding to the same-indexed element in the assetData input."
                },
                "getBatchBalances(address,bytes[])": {
                    "details": "Calls getBalance() for each element of assetData.",
                    "params": {
                        "assetData": "Array of asset details, each encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "Array of asset balances from getBalance(), with each element corresponding to the same-indexed element in the assetData input."
                },
                "getBatchBalancesAndAssetProxyAllowances(address,bytes[])": {
                    "details": "Calls getBatchBalances() and getBatchAllowances() for each element of assetData.",
                    "params": {
                        "assetData": "Array of asset details, each encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "An array of asset balances from getBalance(), and an array of asset allowances from getAllowance(), with each element corresponding to the same-indexed element in the assetData input."
                },
                "getEthBalances(address[])": {
                    "details": "Batch fetches ETH balances",
                    "params": { "addresses": "Array of addresses." },
                    "return": "Array of ETH balances."
                },
                "getOrderRelevantState((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),bytes)": {
                    "details": "Fetches all order-relevant information needed to validate if the supplied order is fillable.",
                    "params": {
                        "order": "The order structure.",
                        "signature": "Signature provided by maker that proves the order's authenticity. `0x01` can always be provided if the signature does not need to be validated."
                    },
                    "return": "The orderInfo (hash, status, and `takerAssetAmount` already filled for the given order), fillableTakerAssetAmount (amount of the order's `takerAssetAmount` that is fillable given all on-chain state), and isValidSignature (validity of the provided signature). NOTE: If the `takerAssetData` encodes data for multiple assets, `fillableTakerAssetAmount` will represent a \"scaled\" amount, meaning it must be multiplied by all the individual asset amounts within the `takerAssetData` to get the final amount of each asset that can be filled."
                },
                "getOrderRelevantStates((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[])": {
                    "details": "Fetches all order-relevant information needed to validate if the supplied orders are fillable.",
                    "params": {
                        "orders": "Array of order structures.",
                        "signatures": "Array of signatures provided by makers that prove the authenticity of the orders. `0x01` can always be provided if a signature does not need to be validated."
                    },
                    "return": "The ordersInfo (array of the hash, status, and `takerAssetAmount` already filled for each order), fillableTakerAssetAmounts (array of amounts for each order's `takerAssetAmount` that is fillable given all on-chain state), and isValidSignature (array containing the validity of each provided signature). NOTE: If the `takerAssetData` encodes data for multiple assets, each element of `fillableTakerAssetAmounts` will represent a \"scaled\" amount, meaning it must be multiplied by all the individual asset amounts within the `takerAssetData` to get the final amount of each asset that can be filled."
                },
                "getSimulatedOrderMakerTransferResults((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),address,uint256)": {
                    "details": "Simulates the maker transfers within an order and returns the index of the first failed transfer.",
                    "params": {
                        "order": "The order to simulate transfers for.",
                        "takerAddress": "The address of the taker that will fill the order.",
                        "takerAssetFillAmount": "The amount of takerAsset that the taker wished to fill."
                    },
                    "return": "The index of the first failed transfer (or 4 if all transfers are successful)."
                },
                "getSimulatedOrderTransferResults((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),address,uint256)": {
                    "details": "Simulates all of the transfers within an order and returns the index of the first failed transfer.",
                    "params": {
                        "order": "The order to simulate transfers for.",
                        "takerAddress": "The address of the taker that will fill the order.",
                        "takerAssetFillAmount": "The amount of takerAsset that the taker wished to fill."
                    },
                    "return": "The index of the first failed transfer (or 4 if all transfers are successful)."
                },
                "getSimulatedOrdersTransferResults((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],address[],uint256[])": {
                    "details": "Simulates all of the transfers for each given order and returns the indices of each first failed transfer.",
                    "params": {
                        "orders": "Array of orders to individually simulate transfers for.",
                        "takerAddresses": "Array of addresses of takers that will fill each order.",
                        "takerAssetFillAmounts": "Array of amounts of takerAsset that will be filled for each order."
                    },
                    "return": "The indices of the first failed transfer (or 4 if all transfers are successful) for each order."
                },
                "getTransferableAssetAmount(address,bytes)": {
                    "details": "Gets the amount of an asset transferable by the owner.",
                    "params": {
                        "assetData": "Description of tokens, per the AssetProxy contract specification.",
                        "ownerAddress": "Address of the owner of the asset."
                    },
                    "return": "The amount of the asset tranferable by the owner. NOTE: If the `assetData` encodes data for multiple assets, the `transferableAssetAmount` will represent the amount of times the entire `assetData` can be transferred. To calculate the total individual transferable amounts, this scaled `transferableAmount` must be multiplied by the individual asset amounts located within the `assetData`."
                },
                "revertIfInvalidAssetData(bytes)": {
                    "details": "Reverts if assetData is not of a valid format for its given proxy id.",
                    "params": { "assetData": "AssetProxy compliant asset data." }
                }
            }
        },
        "evm": {
            "bytecode": {
                "object": ""
            },
            "deployedBytecode": {
                "object": "0x608060405234801561001057600080fd5b50600436106102f45760003560e01c80639a7e752611610191578063ca49f47c116100e3578063d3d862d111610097578063e4e6e7da11610071578063e4e6e7da1461077e578063e77286eb1461079f578063ee4f5a94146107c1576102f4565b8063d3d862d114610729578063d46950281461073c578063e25cabf71461075c576102f4565b8063d001c5dc116100c8578063d001c5dc146106f0578063d186037f14610703578063d363790514610716576102f4565b8063ca49f47c146106ac578063cafd3a07146106cf576102f4565b8063a6627e9f11610145578063bbb2dcf61161011f578063bbb2dcf614610661578063bc03f96414610683578063c26cfecd146106a4576102f4565b8063a6627e9f14610618578063acaedc741461062b578063b43cffe11461064e576102f4565b8063a070cac811610176578063a070cac8146105d2578063a0901e51146105e5578063a5cd62ba146105f8576102f4565b80639a7e75261461058b5780639eadc835146105ae576102f4565b80634dfdac201161024a5780637914b2ec116101fe5780637b66ad34116101d85780637b66ad34146105445780637d727512146105655780638f4ce47914610578576102f4565b80637914b2ec146104f05780637982653e1461051157806379c9c42614610531576102f4565b806363eb39921161022f57806363eb39921461049857806365129042146104ab578063750bdb30146104cd576102f4565b80634dfdac2014610458578063590aa87514610478576102f4565b8063314853ff116102ac5780633db6dc61116102865780633db6dc61146103ff578063459be5e21461042257806346eb65cb14610443576102f4565b8063314853ff146103a8578063327d3054146103ca57806332aae3ad146103dd576102f4565b80630d7b7d76116102dd5780630d7b7d7614610345578063165979e1146103665780632322cf7614610388576102f4565b806302d0aec3146102f957806304a5618a14610323575b600080fd5b61030c610307366004614a21565b6107e3565b60405161031a92919061535e565b60405180910390f35b610336610331366004614a21565b61083f565b60405161031a93929190615488565b610358610353366004614603565b6108ba565b60405161031a92919061530c565b610379610374366004614a21565b6108dc565b60405161031a939291906155c3565b61039b610396366004614603565b610939565b60405161031a91906152c9565b6103bb6103b6366004614a21565b610961565b60405161031a93929190615333565b6103586103d8366004614a21565b6109a8565b6103f06103eb366004614a21565b6109ea565b60405161031a93929190615539565b61041261040d366004614a21565b610a3d565b60405161031a94939291906152d2565b610435610430366004614a21565b610a87565b60405161031a9291906155ac565b610456610451366004614a21565b610add565b005b61046b61046636600461452a565b610c5f565b60405161031a9190615263565b61048b610486366004614341565b610ce2565b60405161031a91906154e8565b61048b6104a6366004614647565b610d52565b6104be6104b9366004614a21565b610dc8565b60405161031a9392919061502f565b6104e06104db366004614a21565b610e02565b60405161031a94939291906153b3565b6105036104fe366004614a21565b610e99565b60405161031a929190615390565b61052461051f366004614ab8565b610ed1565b60405161031a91906155de565b61039b61053f366004614bc0565b61118c565b610557610552366004614a21565b611215565b60405161031a929190615015565b61039b610573366004614603565b61124d565b610503610586366004614a21565b6118a4565b61059e610599366004614a21565b61191a565b60405161031a94939291906155f2565b6105c16105bc366004614a21565b61197b565b60405161031a9594939291906153ef565b61039b6105e0366004614b67565b611a0c565b61046b6105f33660046146c9565b611a8d565b61060b6106063660046146fc565b611b06565b60405161031a919061517b565b61048b61062636600461469e565b611bc9565b61063e610639366004614a21565b611c22565b60405161031a94939291906150d7565b61048b61065c366004614578565b611c5e565b61067461066f366004614a21565b611cd6565b60405161031a939291906154b3565b610696610691366004614a21565b611d50565b60405161031a92919061531a565b61039b611d89565b6106bf6106ba366004614a21565b611d8f565b60405161031a9493929190615445565b6106e26106dd366004614a21565b611e19565b60405161031a929190615629565b61046b6106fe36600461452a565b611e67565b61039b610711366004614603565b611ed5565b610524610724366004614ab8565b6126c7565b61048b6107373660046147cd565b612a77565b61074f61074a366004614a21565b612a96565b60405161031a919061537b565b61076f61076a366004614776565b612b91565b60405161031a939291906151c8565b61079161078c36600461452a565b612cc9565b60405161031a9291906152a4565b6107b26107ad366004614b10565b612ce2565b60405161031a939291906156db565b6107d46107cf366004614a21565b612fa4565b60405161031a93929190615582565b6000806107f7836107f2612fe1565b613005565b600061081060048551866130459092919063ffffffff16565b80602001905161082391908101906149d4565b909350905060ff8116600681111561083757fe5b915050915091565b60008080610853848263ffffffff61308816565b92506001600160e01b0319831663012b8bc960e11b1461088e5760405162461bcd60e51b8152600401610885906156a4565b60405180910390fd5b61089f84601063ffffffff6130bc16565b91506108b284602463ffffffff6130ef16565b929491935050565b6000806108c7848461124d565b91506108d38484611ed5565b90509250929050565b60008060006108ed846107f26130fb565b600061090660048651876130459092919063ffffffff16565b8060200190516109199190810190614d92565b9094509250905060ff8116600281111561092f57fe5b9350509193909250565b600080600061094885856108ba565b91509150610956828261311f565b925050505b92915050565b6000606080610972846107f2613135565b835161098890859060049063ffffffff61304516565b80602001905161099b9190810190614974565b9196909550909350915050565b6000806109b7836107f2613159565b82516109cd90849060049063ffffffff61304516565b8060200190516109e09190810190614916565b9094909350915050565b60008060606109fb846107f261317d565b6000610a1460048651876130459092919063ffffffff16565b806020019051610a279190810190614d52565b9094509250905060ff8116600181111561092f57fe5b600080606080610a4f856107f26131a1565b8451610a6590869060049063ffffffff61304516565b806020019051610a7891908101906148d2565b92989197509550909350915050565b600080610a96836107f26131c5565b6000610aaf60048551866130459092919063ffffffff16565b806020019051610ac29190810190614c90565b9250905060ff81166003811115610ad557fe5b925050915091565b6000610aef828263ffffffff61308816565b90506001600160e01b031981167ff47261b0000000000000000000000000000000000000000000000000000000001415610b3357610b2c826118a4565b5050610c5b565b6001600160e01b0319811663012b8bc960e11b1415610b5d57610b558261083f565b505050610c5b565b6001600160e01b031981167fa7cb5fb7000000000000000000000000000000000000000000000000000000001415610ba257610b988261197b565b5050505050610c5b565b6001600160e01b031981166394cfcdd760e01b1415610bc457610b5582611cd6565b6001600160e01b031981167fc339d10a000000000000000000000000000000000000000000000000000000001415610c0857610bff82611d8f565b50505050610c5b565b6001600160e01b031981167fdc1600f3000000000000000000000000000000000000000000000000000000001415610c4357610bff82610e02565b60405162461bcd60e51b8152600401610885906156a4565b5050565b606060008251905080604051908082528060200260200182016040528015610c91578160200160208202803883390190505b50915060005b818114610cda57610cbb85858381518110610cae57fe5b6020026020010151611ed5565b838281518110610cc757fe5b6020908102919091010152600101610c97565b505092915050565b6040516060907ff47261b00000000000000000000000000000000000000000000000000000000090610d18908490602401615001565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290505b919050565b6040516060907fc339d10a0000000000000000000000000000000000000000000000000000000090610d8c908690869086906024016150a5565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290505b9392505050565b6000806000610dd9846107f26131e9565b8351610def90859060049063ffffffff61304516565b80602001905161099b91908101906143f8565b600080806060610e18858363ffffffff61308816565b93506001600160e01b031984167fdc1600f30000000000000000000000000000000000000000000000000000000014610e635760405162461bcd60e51b8152600401610885906156a4565b8451610e7990869060049063ffffffff61320d16565b806020019051610e8c9190810190614396565b9597919650949350915050565b600080610ea8836107f261328d565b8251610ebe90849060049063ffffffff61304516565b8060200190516109e091908101906149f8565b6000610edb613f0c565b610f6c8584600660009054906101000a90046001600160a01b03166001600160a01b0316631ce4c78b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f2e57600080fd5b505afa158015610f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f669190810190614c78565b3a6132b1565b60408051600280825260608281019093529293509091816020015b6060815260200190600190039081610f8757505060408051600280825260608083018452939450909160208301908038833950506040805160028082526060808301845294955090925090602083019080388339505060408051600280825260608083018452949550909250906020830190803883390190505090508861014001518460008151811061101657fe5b602002602001018190525088600001518360008151811061103357fe5b6001600160a01b039283166020918202929092010152881615611056578761106c565b73377f698c4c287018d09b516f415317aec59193325b8260008151811061107957fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508460000151816000815181106110ab57fe5b602002602001018181525050886101800151846001815181106110ca57fe5b60200260200101819052508860000151836001815181106110e757fe5b6001600160a01b03928316602091820292909201015260408a01511615611112578860400151611128565b73377f698c4c287018d09b516f415317aec59193325b8260018151811061113557fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084604001518160018151811061116757fe5b60200260200101818152505061117f84848484613328565b9998505050505050505050565b600061120d846112086040518060400160405280600b81526020017f30782050726f746f636f6c0000000000000000000000000000000000000000008152506040518060400160405280600581526020017f332e302e3000000000000000000000000000000000000000000000000000000081525087876134e6565b61353d565b949350505050565b600080611224836107f2613551565b825161123a90849060049063ffffffff61304516565b8060200190516109e0919081019061435d565b600080611260838263ffffffff61308816565b90506001600160e01b031981167ff47261b00000000000000000000000000000000000000000000000000000000014156112bb5760006112a784601063ffffffff6130bc16565b90506112b38186613575565b92505061189d565b6001600160e01b0319811663012b8bc960e11b1415611413576000806112e08561083f565b6040519194509250606091507f6352211e000000000000000000000000000000000000000000000000000000009061131c9084906024016152c9565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060846001600160a01b03168360405161136d9190614fe5565b600060405180830381855afa9150503d80600081146113a8576040519150601f19603f3d011682016040523d82523d6000602084013e6113ad565b606091505b509150915060008280156113c2575081516020145b6113cd5760006113de565b6113de82600c63ffffffff6130bc16565b9050896001600160a01b0316816001600160a01b031614611400576000611403565b60015b60ff16975050505050505061189d565b6001600160e01b031981167fa7cb5fb70000000000000000000000000000000000000000000000000000000014156116035760006060806114538661197b565b5081519296509094509250905060005b8181146115f95782818151811061147657fe5b60200260200101516000141561148b576115f1565b83516060907efdd58e00000000000000000000000000000000000000000000000000000000908b908790859081106114bf57fe5b60200260200101516040516024016114d892919061510b565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060876001600160a01b0316836040516115299190614fe5565b600060405180830381855afa9150503d8060008114611564576040519150601f19603f3d011682016040523d82523d6000602084013e611569565b606091505b5091509150600082801561157e575081516020145b61158957600061159a565b61159a82600063ffffffff6130ef16565b905060008786815181106115aa57fe5b602002602001015182816115ba57fe5b049050806115d65760009b50505050505050505050505061095b565b8b8110806115e257508b155b156115eb57809b505b50505050505b600101611463565b505050505061189d565b6001600160e01b031981167fc339d10a000000000000000000000000000000000000000000000000000000001415611721576040516060907fa85e59e40000000000000000000000000000000000000000000000000000000090611672908690600090819081906024016154fb565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260045491519092506000916001600160a01b0316906116c4908490614fe5565b600060405180830381855afa9150503d80600081146116ff576040519150601f19603f3d011682016040523d82523d6000602084013e611704565b606091505b5050905080611714576000611718565b6000195b9350505061189d565b6001600160e01b031981167fdc1600f30000000000000000000000000000000000000000000000000000000014156117c85760008061175f85610e02565b50925092505061176d613678565b6001600160a01b0316826001600160a01b031614801561179a57506005546001600160a01b038281169116145b156117c15760006117b26117ac613690565b88613575565b90506117bd816136a8565b9450505b505061189d565b6001600160e01b031981166394cfcdd760e01b141561189d576060806117ed85611cd6565b80519194509250905060005b8181146118985783818151811061180c57fe5b60200260200101516000141561182157611890565b60006118408985848151811061183357fe5b602002602001015161124d565b9050600085838151811061185057fe5b6020026020010151828161186057fe5b0490508061187857600097505050505050505061095b565b87811080611884575087155b1561188d578097505b50505b6001016117f9565b505050505b5092915050565b6000806118b7838263ffffffff61308816565b91506001600160e01b031982167ff47261b000000000000000000000000000000000000000000000000000000000146119025760405162461bcd60e51b8152600401610885906156a4565b61191383601063ffffffff6130bc16565b9050915091565b6000806000606061192d856107f26138a6565b600061194660048751886130459092919063ffffffff16565b8060200190516119599190810190614cf4565b91965094509250905060ff8116600681111561197157fe5b9450509193509193565b60008060608080611992868563ffffffff61308816565b94506001600160e01b031985167fa7cb5fb700000000000000000000000000000000000000000000000000000000146119dd5760405162461bcd60e51b8152600401610885906156a4565b505050506024828101516044840151606485015160848601519496929591820184019490820184019391010190565b600061120d84611a886040518060400160405280600b81526020017f30782050726f746f636f6c0000000000000000000000000000000000000000008152506040518060400160405280600581526020017f332e302e3000000000000000000000000000000000000000000000000000000081525087876134e6565b6138ca565b6060808251604051908082528060200260200182016040528015611abb578160200160208202803883390190505b50905060005b8351811461189d57838181518110611ad557fe5b60200260200101516001600160a01b031631828281518110611af357fe5b6020908102919091010152600101611ac1565b606060008451905080604051908082528060200260200182016040528015611b38578160200160208202803883390190505b50915060005b818114611bc057611b89868281518110611b5457fe5b6020026020010151868381518110611b6857fe5b6020026020010151868481518110611b7c57fe5b60200260200101516126c7565b838281518110611b9557fe5b60200260200101906004811115611ba857fe5b90816004811115611bb557fe5b905250600101611b3e565b50509392505050565b60405160609063012b8bc960e11b90611be8908590859060240161510b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905092915050565b60006060806060611c35856107f26138d9565b8451611c4b90869060049063ffffffff61304516565b806020019051610a789190810190614492565b6040516060907fa7cb5fb70000000000000000000000000000000000000000000000000000000090611c9a908790879087908790602401615053565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050949350505050565b6000606080611ceb848463ffffffff61308816565b92506001600160e01b031983166394cfcdd760e01b14611d1d5760405162461bcd60e51b8152600401610885906156a4565b8351611d3390859060049063ffffffff61320d16565b806020019051611d469190810190614802565b9395909450915050565b60006060611d60836107f26138fd565b8251611d7690849060049063ffffffff61304516565b8060200190516109e09190810190614939565b60075481565b600080606081611da5858263ffffffff61308816565b93506001600160e01b031984167fc339d10a0000000000000000000000000000000000000000000000000000000014611df05760405162461bcd60e51b8152600401610885906156a4565b8451611e0690869060049063ffffffff61320d16565b806020019051610e8c919081019061443a565b600080611e28836107f2613921565b6000611e4160048551866130459092919063ffffffff16565b806020019051611e549190810190614c90565b9250905060ff81166001811115610ad557fe5b606060008251905080604051908082528060200260200182016040528015611e99578160200160208202803883390190505b50915060005b818114610cda57611eb68585838151811061183357fe5b838281518110611ec257fe5b6020908102919091010152600101611e9f565b600080611ee8838263ffffffff61308816565b90506001600160e01b031981166394cfcdd760e01b1415611fb857606080611f0f85611cd6565b80519194509250905060005b818114611fad57838181518110611f2e57fe5b602002602001015160001415611f4357611fa5565b6000611f5589858481518110610cae57fe5b90506000858381518110611f6557fe5b60200260200101518281611f7557fe5b04905080611f8d57600097505050505050505061095b565b87811080611f99575087155b15611fa2578097505b50505b600101611f1b565b5061095b9350505050565b6001600160e01b031981167ff47261b000000000000000000000000000000000000000000000000000000000141561210e576000611ffd84601063ffffffff6130bc16565b6001546040519192506060917fdd62ed3e00000000000000000000000000000000000000000000000000000000916120439189916001600160a01b031690602401615015565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060836001600160a01b0316836040516120949190614fe5565b600060405180830381855afa9150503d80600081146120cf576040519150601f19603f3d011682016040523d82523d6000602084013e6120d4565b606091505b50915091508180156120e7575080516020145b6120f2576000612103565b61210381600063ffffffff6130ef16565b95505050505061189d565b6001600160e01b0319811663012b8bc960e11b1415612373576000806121338561083f565b600254604051929550909350606092507fe985e9c5000000000000000000000000000000000000000000000000000000009161217f918a916001600160a01b0390911690602401615015565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060846001600160a01b0316836040516121d09190614fe5565b600060405180830381855afa9150503d806000811461220b576040519150601f19603f3d011682016040523d82523d6000602084013e612210565b606091505b509150915081158061222457508051602014155b80612240575061223b81600063ffffffff6130ef16565b600114155b15612364576040516060907f081812fc000000000000000000000000000000000000000000000000000000009061227b9087906024016152c9565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050856001600160a01b0316816040516122c89190614fe5565b600060405180830381855afa9150503d8060008114612303576040519150601f19603f3d011682016040523d82523d6000602084013e612308565b606091505b50909350915082801561231c575081516020145b801561234b57506002546001600160a01b031661234083600c63ffffffff6130bc16565b6001600160a01b0316145b612356576000612359565b60015b60ff169750506115f9565b6000199650505050505061189d565b6001600160e01b031981167fa7cb5fb70000000000000000000000000000000000000000000000000000000014156124d35760006123b08461197b565b5050600354604051929450606093507fe985e9c500000000000000000000000000000000000000000000000000000000926123fa925089916001600160a01b031690602401615015565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060836001600160a01b03168360405161244b9190614fe5565b600060405180830381855afa9150503d8060008114612486576040519150601f19603f3d011682016040523d82523d6000602084013e61248b565b606091505b509150915081801561249e575080516020145b80156124ba57506124b681600063ffffffff6130ef16565b6001145b6124c5576000612103565b60001995505050505061189d565b6001600160e01b031981167fc339d10a00000000000000000000000000000000000000000000000000000000141561250f57600019915061189d565b6001600160e01b031981167fdc1600f300000000000000000000000000000000000000000000000000000000141561189d5760008061254d85610e02565b50925092505061255b613678565b6001600160a01b0316826001600160a01b031614801561258857506005546001600160a01b038281169116145b156126be576005546040516060917fdd62ed3e00000000000000000000000000000000000000000000000000000000916125d2918a916001600160a01b0390911690602401615015565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905060006060612612613690565b6001600160a01b0316836040516126299190614fe5565b600060405180830381855afa9150503d8060008114612664576040519150601f19603f3d011682016040523d82523d6000602084013e612669565b606091505b5091509150600082801561267e575081516020145b61268957600061269a565b61269a82600063ffffffff6130ef16565b905060001981146126b3576126ae816136a8565b6126b7565b6000195b9750505050505b50505092915050565b60006126d1613f0c565b6127248584600660009054906101000a90046001600160a01b03166001600160a01b0316631ce4c78b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f2e57600080fd5b60408051600480825260a0820190925291925060609190816020015b606081526020019060019003908161274057505060408051600480825260a082019092529192506060919060208201608080388339505060408051600480825260a08201909252929350606092915060208201608080388339505060408051600480825260a08201909252929350606092915060208201608080388339019050509050886101600151846000815181106127d657fe5b602002602001018190525087836000815181106127ef57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505088600001518260008151811061282157fe5b60200260200101906001600160a01b031690816001600160a01b031681525050868160008151811061284f57fe5b6020026020010181815250508861014001518460018151811061286e57fe5b602002602001018190525088600001518360018151811061288b57fe5b6001600160a01b0392831660209182029290920101528816156128ae57876128c4565b73377f698c4c287018d09b516f415317aec59193325b826001815181106128d157fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084600001518160018151811061290357fe5b602002602001018181525050886101a001518460028151811061292257fe5b6020026020010181905250878360028151811061293b57fe5b6001600160a01b03928316602091820292909201015260408a0151161561296657886040015161297c565b73377f698c4c287018d09b516f415317aec59193325b8260028151811061298957fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508460600151816002815181106129bb57fe5b602002602001018181525050886101800151846003815181106129da57fe5b60200260200101819052508860000151836003815181106129f757fe5b6001600160a01b03928316602091820292909201015260408a01511615612a22578860400151612a38565b73377f698c4c287018d09b516f415317aec59193325b82600381518110612a4557fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084604001518160038151811061116757fe5b6040516060906394cfcdd760e01b90611be89085908590602401615276565b6000612aa8828263ffffffff61308816565b90506001600160e01b031981167ff47261b0000000000000000000000000000000000000000000000000000000001480612af257506001600160e01b0319811663012b8bc960e11b145b80612b2657506001600160e01b031981167fa7cb5fb700000000000000000000000000000000000000000000000000000000145b80612b4157506001600160e01b031981166394cfcdd760e01b145b80612b7557506001600160e01b031981167fc339d10a00000000000000000000000000000000000000000000000000000000145b610d4d5760405162461bcd60e51b8152600401610885906156a4565b606080606060008551905080604051908082528060200260200182016040528015612bd657816020015b612bc3613f3b565b815260200190600190039081612bbb5790505b50935080604051908082528060200260200182016040528015612c03578160200160208202803883390190505b50925080604051908082528060200260200182016040528015612c30578160200160208202803883390190505b50915060005b818114612cc057612c6d878281518110612c4c57fe5b6020026020010151878381518110612c6057fe5b6020026020010151612ce2565b8751889085908110612c7b57fe5b60200260200101878581518110612c8e57fe5b60200260200101878681518110612ca157fe5b9315156020948502919091019093019290925291905252600101612c36565b50509250925092565b606080612cd68484611e67565b91506108d38484610c5f565b612cea613f3b565b6006546040517f9d3fa4b900000000000000000000000000000000000000000000000000000000815260009182916001600160a01b0390911690639d3fa4b990612d389088906004016156ff565b60606040518083038186803b158015612d5057600080fd5b505afa158015612d64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d889190810190614a70565b85516006546040517fa12dcc6f00000000000000000000000000000000000000000000000000000000815292955090916001600160a01b039091169063a12dcc6f90612dda9089908990600401615712565b60206040518083038186803b158015612df257600080fd5b505afa158015612e06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e2a91908101906148b2565b91506000612e3d82886101400151610939565b60a088015160c08901516101808a01516101408b015193945091929091600091612e6c9163ffffffff61394516565b15612e9957612e9284612e8c848d6080015161396a90919063ffffffff16565b85613986565b9050612ef2565b81612ead57612e92848b6080015185613986565b6000612ebe868c6101800151610939565b90506000612ed1868d6080015187613986565b90506000612ee0838688613986565b9050612eec828261311f565b93505050505b612f12612f0c8960400151856139a890919063ffffffff16565b8261311f565b96506004612f258b8c602001518a610ed1565b6004811115612f3057fe5b14612f3c576000612f3e565b865b9650612f4e8a61016001516139c7565b612f5757600096505b60e08a015115801590612f755750612f738a6101a001516139c7565b155b15612f7f57600096505b600388516006811115612f8e57fe5b14612f9857600096505b50505050509250925092565b6000806000612fb5846107f2613ab1565b6000612fce60048651876130459092919063ffffffff16565b8060200190516109199190810190614cbd565b7ffdb6ca8d0000000000000000000000000000000000000000000000000000000090565b6000613012836000613088565b90506001600160e01b0319808216908316146130405760405162461bcd60e51b81526004016108859061566d565b505050565b6060818311156130635761306361305e60008585613ad5565b613af4565b835182111561307c5761307c61305e6001848751613ad5565b50819003910190815290565b600081600401835110156130a9576130a961305e6003855185600401613ad5565b5001602001516001600160e01b03191690565b600081601401835110156130dd576130dd61305e6004855185601401613ad5565b5001601401516001600160a01b031690565b6000610dc18383613afc565b7f18e4b1410000000000000000000000000000000000000000000000000000000090565b600081831061312e5781610dc1565b5090919050565b7f4678472b0000000000000000000000000000000000000000000000000000000090565b7fb6555d6f0000000000000000000000000000000000000000000000000000000090565b7f488219a60000000000000000000000000000000000000000000000000000000090565b7f1b8388f70000000000000000000000000000000000000000000000000000000090565b7fe94a7ed00000000000000000000000000000000000000000000000000000000090565b7f4ad312750000000000000000000000000000000000000000000000000000000090565b6060818311156132265761322661305e60008585613ad5565b835182111561323f5761323f61305e6001848751613ad5565b8282036040519080825280601f01601f19166020018201604052801561326c576020820181803883390190505b509050610dc161327b82613b26565b8461328587613b26565b018351613b2c565b7f11c7b7200000000000000000000000000000000000000000000000000000000090565b6132b9613f0c565b6020810184905260a085015160808601516132d5918691613bd1565b815260a085015160c08601516132ec918691613bd1565b604082015260a085015160e0860151613306918691613bd1565b606082015261331b828463ffffffff613c0516565b6080820152949350505050565b6040516000906060907fb04fbddd0000000000000000000000000000000000000000000000000000000090613367908890889088908890602401615124565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260065491519092506060916001600160a01b0316906133b9908490614fe5565b6000604051808303816000865af19150503d80600081146133f6576040519150601f19603f3d011682016040523d82523d6000602084013e6133fb565b606091505b50915060009050613412828263ffffffff61308816565b905061341c61317d565b6001600160e01b03198281169116141561345957600061343b836109ea565b5091505060ff8116600481111561344e57fe5b94505050505061120d565b613461613135565b6001600160e01b03198281169116141561349457600061348083610961565b509091505060ff8116600481111561344e57fe5b815160208301207ff43f26ea5a94b478394a975e856464913dc1a8a1ca70939d974aa7c238aa0ce014156134ce576004935050505061120d565b60405162461bcd60e51b815260040161088590615636565b8351602094850120835193850193909320604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815295860194909452928401929092526060830152608082015260a0902090565b6000610dc18261354c85613c36565b613cb1565b7fa15c0d060000000000000000000000000000000000000000000000000000000090565b6040516000906060907f70a0823100000000000000000000000000000000000000000000000000000000906135ae908590602401615001565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060856001600160a01b0316836040516135ff9190614fe5565b600060405180830381855afa9150503d806000811461363a576040519150601f19603f3d011682016040523d82523d6000602084013e61363f565b606091505b5091509150818015613652575080516020145b61365d57600061366e565b61366e81600063ffffffff6130ef16565b9695505050505050565b736b175474e89094c44da98b954eedeac495271d0f90565b7306af07097c9eeb7fd685c692751d5c66db49c21590565b6000806136b3613690565b6001600160a01b0316634ba2363a6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156136ed57600080fd5b505af1158015613701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506137259190810190614a54565b90506000816001600160a01b03166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561376457600080fd5b505af1158015613778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061379c9190810190614c78565b421161381a57816001600160a01b031663c92aecc46040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156137dd57600080fd5b505af11580156137f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506138159190810190614c78565b61388d565b816001600160a01b0316639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561385557600080fd5b505af1158015613869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061388d9190810190614c78565b905061120d816b033b2e3c9fd0803ce800000086613986565b7f7e5a23180000000000000000000000000000000000000000000000000000000090565b6000610dc18261354c85613ceb565b7f5bd0428d0000000000000000000000000000000000000000000000000000000090565b7f20d11f610000000000000000000000000000000000000000000000000000000090565b7ff59851840000000000000000000000000000000000000000000000000000000090565b600081518351148015610dc15750508051602091820120825192909101919091201490565b600082820183811015610dc157610dc161305e60008686613da4565b600061120d8361399c868563ffffffff613c0516565b9063ffffffff613dc316565b6000828211156139c1576139c161305e60028585613da4565b50900390565b600060208251816139d457fe5b066004146139e457506000610d4d565b60006139f6838263ffffffff61308816565b90506001600160e01b031981166394cfcdd760e01b14613a1a576001915050610d4d565b606080613a2685611cd6565b80519194509250905060005b818114613aa4576000613a626000858481518110613a4c57fe5b602002602001015161308890919063ffffffff16565b90506001600160e01b0319811663012b8bc960e11b1415613a9b57613a878483613ded565b15613a9b5760009650505050505050610d4d565b50600101613a32565b5060019695505050505050565b7fe53c76c80000000000000000000000000000000000000000000000000000000090565b6060632800659560e01b848484604051602401610d8c939291906155d0565b805160208201fd5b60008160200183511015613b1d57613b1d61305e6005855185602001613ad5565b50016020015190565b60200190565b6020811015613b56576001816020036101000a038019835116818551168082178652505050613040565b82821415613b6357613040565b82821115613b9d5760208103905080820181840181515b82851015613b95578451865260209586019590940193613b7a565b905250613040565b60208103905080820181840183515b81861215613bc85782518252601f199283019290910190613bac565b85525050505050565b6000613bde848484613e50565b15613bf157613bf161305e858585613eb6565b61120d8361399c868563ffffffff613c0516565b600082613c145750600061095b565b82820282848281613c2157fe5b0414610dc157610dc161305e60018686613da4565b608081810151825160208085015160408087015160609788015186519685019690962082517fec69816980a3a3ca4554410e60253953e9ff375ba4536a98adfa15cc7154150881529485019590955290830191909152948101949094526001600160a01b039091169183019190915260a082015260c0902090565b6040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b6101408101516101608201516101808301516101a08401516000937ff80322eb8376aafb64eadf8f0d7623f22130fd9491a221e902b713cb984a753493909290916020871015613d3757fe5b601f1987018051610140890180516101608b0180516101808d0180516101a08f0180519d89528c5160209d8e012087528b519b8d019b909b2084528951998c01999099208152875197909a019690962088526101e085209390945290529190529252919091529050919050565b606063e946c1bb60e01b848484604051602401610d8c93929190615561565b600081613dd957613dd961305e60038585613da4565b6000828481613de457fe5b04949350505050565b8151600090600183015b81811015610cda57613e38858281518110613e0e57fe5b6020026020010151868681518110613e2257fe5b602002602001015161394590919063ffffffff16565b15613e485760019250505061095b565b600101613df7565b600082613e6257613e6261305e613ed5565b811580613e6d575083155b15613e7a57506000610dc1565b60008380613e8457fe5b8584099050613e99858463ffffffff613c0516565b613eab826103e863ffffffff613c0516565b101595945050505050565b606063339f3de260e01b848484604051602401610d8c93929190615737565b60408051808201909152600481527fa791837c00000000000000000000000000000000000000000000000000000000602082015290565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6040805160608101909152806000815260006020820181905260409091015290565b803561095b81615813565b600082601f830112613f78578081fd5b8135613f8b613f8682615774565b61574d565b818152915060208083019084810181840286018201871015613fac57600080fd5b60005b84811015611898578135613fc281615813565b84529282019290820190600101613faf565b600082601f830112613fe4578081fd5b8151613ff2613f8682615774565b8181529150602080830190840160005b8381101561402f5761401a876020845189010161419b565b83526020928301929190910190600101614002565b5050505092915050565b600082601f830112614049578081fd5b8135614057613f8682615774565b8181529150602080830190840160005b8381101561402f5761407f876020843589010161414d565b83526020928301929190910190600101614067565b600082601f8301126140a4578081fd5b81356140b2613f8682615774565b8181529150602080830190840160005b8381101561402f576140da87602084358901016141e1565b835260209283019291909101906001016140c2565b600082601f8301126140ff578081fd5b813561410d613f8682615774565b81815291506020808301908481018184028601820187101561412e57600080fd5b60005b8481101561189857813584529282019290820190600101614131565b600082601f83011261415d578081fd5b813561416b613f8682615794565b915080825283602082850101111561418257600080fd5b8060208401602084013760009082016020015292915050565b600082601f8301126141ab578081fd5b81516141b9613f8682615794565b91508082528360208285010111156141d057600080fd5b61189d8160208401602086016157b8565b60006101c08083850312156141f4578182fd5b6141fd8161574d565b91505061420a8383613f5d565b81526142198360208401613f5d565b602082015261422b8360408401613f5d565b604082015261423d8360608401613f5d565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e08201526101008083013581830152506101208083013581830152506101408083013567ffffffffffffffff8082111561429f57600080fd5b6142ab8683870161414d565b838501526101609250828501359150808211156142c757600080fd5b6142d38683870161414d565b838501526101809250828501359150808211156142ef57600080fd5b6142fb8683870161414d565b838501526101a092508285013591508082111561431757600080fd5b506143248582860161414d565b82840152505092915050565b805160ff8116811461095b57600080fd5b600060208284031215614352578081fd5b8135610dc181615813565b6000806040838503121561436f578081fd5b825161437a81615813565b602084015190925061438b81615813565b809150509250929050565b6000806000606084860312156143aa578081fd5b83516143b581615813565b60208501519093506143c681615813565b604085015190925067ffffffffffffffff8111156143e2578182fd5b6143ee8682870161419b565b9150509250925092565b60008060006060848603121561440c578081fd5b835161441781615813565b602085015190935061442881615813565b80925050604084015190509250925092565b60008060006060848603121561444e578081fd5b835161445981615813565b602085015190935067ffffffffffffffff811115614475578182fd5b6144818682870161419b565b925050604084015190509250925092565b600080600080608085870312156144a7578182fd5b84516144b281615813565b602086015190945067ffffffffffffffff808211156144cf578384fd5b6144db8883890161419b565b945060408701519150808211156144f0578384fd5b6144fc8883890161419b565b93506060870151915080821115614511578283fd5b5061451e8782880161419b565b91505092959194509250565b6000806040838503121561453c578182fd5b823561454781615813565b9150602083013567ffffffffffffffff811115614562578182fd5b61456e85828601614039565b9150509250929050565b6000806000806080858703121561458d578182fd5b843561459881615813565b9350602085013567ffffffffffffffff808211156145b4578384fd5b6145c0888389016140ef565b945060408701359150808211156145d5578384fd5b6145e1888389016140ef565b935060608701359150808211156145f6578283fd5b5061451e8782880161414d565b60008060408385031215614615578182fd5b823561462081615813565b9150602083013567ffffffffffffffff81111561463b578182fd5b61456e8582860161414d565b60008060006060848603121561465b578081fd5b833561466681615813565b9250602084013567ffffffffffffffff811115614681578182fd5b61468d8682870161414d565b925050604084013590509250925092565b600080604083850312156146b0578182fd5b82356146bb81615813565b946020939093013593505050565b6000602082840312156146da578081fd5b813567ffffffffffffffff8111156146f0578182fd5b61120d84828501613f68565b600080600060608486031215614710578081fd5b833567ffffffffffffffff80821115614727578283fd5b61473387838801614094565b94506020860135915080821115614748578283fd5b61475487838801613f68565b93506040860135915080821115614769578283fd5b506143ee868287016140ef565b60008060408385031215614788578182fd5b823567ffffffffffffffff8082111561479f578384fd5b6147ab86838701614094565b935060208501359150808211156147c0578283fd5b5061456e85828601614039565b600080604083850312156147df578182fd5b823567ffffffffffffffff808211156147f6578384fd5b6147ab868387016140ef565b60008060408385031215614814578182fd5b825167ffffffffffffffff8082111561482b578384fd5b81850186601f82011261483c578485fd5b8051925061484c613f8684615774565b80848252602080830192508084018a82838902870101111561486c578889fd5b8894505b8685101561488e578051845260019490940193928101928101614870565b5088015190965093505050808211156148a5578283fd5b5061456e85828601613fd4565b6000602082840312156148c3578081fd5b81518015158114610dc1578182fd5b600080600080608085870312156148e7578182fd5b8451935060208501516148f981615813565b604086015190935067ffffffffffffffff808211156144f0578384fd5b60008060408385031215614928578182fd5b505080516020909101519092909150565b6000806040838503121561494b578182fd5b82519150602083015167ffffffffffffffff811115614968578182fd5b61456e8582860161419b565b600080600060608486031215614988578081fd5b83519250602084015167ffffffffffffffff808211156149a6578283fd5b6149b28783880161419b565b935060408601519150808211156149c7578283fd5b506143ee8682870161419b565b600080604083850312156149e6578182fd5b82519150602083015161438b81615828565b60008060408385031215614a0a578182fd5b82516001600160e01b03198116811461437a578283fd5b600060208284031215614a32578081fd5b813567ffffffffffffffff811115614a48578182fd5b61120d8482850161414d565b600060208284031215614a65578081fd5b8151610dc181615813565b600060608284031215614a81578081fd5b614a8b606061574d565b825160078110614a99578283fd5b8152602083810151908201526040928301519281019290925250919050565b600080600060608486031215614acc578081fd5b833567ffffffffffffffff811115614ae2578182fd5b614aee868287016141e1565b9350506020840135614aff81615813565b929592945050506040919091013590565b60008060408385031215614b22578182fd5b823567ffffffffffffffff80821115614b39578384fd5b614b45868387016141e1565b93506020850135915080821115614b5a578283fd5b5061456e8582860161414d565b600080600060608486031215614b7b578081fd5b833567ffffffffffffffff811115614b91578182fd5b614b9d868287016141e1565b935050602084013591506040840135614bb581615813565b809150509250925092565b600080600060608486031215614bd4578081fd5b833567ffffffffffffffff80821115614beb578283fd5b81860160a08189031215614bfd578384fd5b614c0760a061574d565b9250803583526020810135602084015260408101356040840152614c2e8860608301613f5d565b6060840152608081013582811115614c44578485fd5b614c508982840161414d565b608085015250919450505060208401359150614c6f8560408601613f5d565b90509250925092565b600060208284031215614c89578081fd5b5051919050565b60008060408385031215614ca2578182fd5b8251614cad81615828565b6020939093015192949293505050565b600080600060608486031215614cd1578081fd5b8351614cdc81615828565b602085015160408601519194509250614bb581615813565b60008060008060808587031215614d09578182fd5b614d138686614330565b9350602085015192506040850151614d2a81615813565b606086015190925067ffffffffffffffff811115614d46578182fd5b61451e8782880161419b565b600080600060608486031215614d66578081fd5b614d708585614330565b925060208401519150604084015167ffffffffffffffff8111156143e2578182fd5b600080600060608486031215614da6578081fd5b614db08585614330565b925060208401519150604084015190509250925092565b6001600160a01b03169052565b6000815180845260208401935060208301825b82811015614e0e5781516001600160a01b0316865260209586019590910190600101614de7565b5093949350505050565b600081518084526020840180819550602083028101915060208501845b84811015614e63578284038852614e4d848351614ea0565b6020988901989094509190910190600101614e35565b50919695505050505050565b6000815180845260208401935060208301825b82811015614e0e578151865260209586019590910190600101614e82565b60008151808452614eb88160208601602086016157b8565b601f01601f19169290920160200192915050565b8051614ed781615809565b825260208181015190830152604090810151910152565b60006101c0614efe848451614dc7565b6020830151614f106020860182614dc7565b506040830151614f236040860182614dc7565b506060830151614f366060860182614dc7565b506080830151608085015260a083015160a085015260c083015160c085015260e083015160e0850152610100808401518186015250610120808401518186015250610140808401518282870152614f8f83870182614ea0565b91505061016091508184015185820383870152614fac8282614ea0565b925050506101808084015185830382870152614fc88382614ea0565b9150506101a09150818401518582038387015261366e8282614ea0565b60008251614ff78184602087016157b8565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006001600160a01b0386168252608060208301526150756080830186614e6f565b82810360408401526150878186614e6f565b83810360608501526150998186614ea0565b98975050505050505050565b60006001600160a01b0385168252606060208301526150c76060830185614ea0565b9050826040830152949350505050565b60006001600160a01b0386168252608060208301526150f96080830186614ea0565b82810360408401526150878186614ea0565b6001600160a01b03929092168252602082015260400190565b6000608082526151376080830187614e18565b82810360208401526151498187614dd4565b838103604085015261515b8187614dd4565b91505082810360608401526151708185614e6f565b979650505050505050565b602080825282518282018190526000918401906040840190835b818110156151bd578351600581106151a957fe5b835260209384019390920191600101615195565b509095945050505050565b606080825284519082018190526000906020906080840190828801845b8281101561520b576151f8848351614ecc565b60609390930192908401906001016151e5565b5050508381038285015261521f8187614e6f565b84810360408601528551808252908301915082860190845b81811015615255578251151584529284019291840191600101615237565b509198975050505050505050565b600060208252610dc16020830184614e6f565b6000604082526152896040830185614e6f565b828103602084015261529b8185614e18565b95945050505050565b6000604082526152b76040830185614e6f565b828103602084015261529b8185614e6f565b90815260200190565b60008582526001600160a01b0385166020830152608060408301526152fa6080830185614ea0565b82810360608401526151708185614ea0565b918252602082015260400190565b60008382526040602083015261120d6040830184614ea0565b60008482526060602083015261534c6060830185614ea0565b828103604084015261366e8185614ea0565b8281526040810161536e83615809565b8260208301529392505050565b6001600160e01b031991909116815260200190565b6001600160e01b03199290921682526001600160a01b0316602082015260400190565b60006001600160e01b0319861682526001600160a01b0380861660208401528085166040840152506080606083015261366e6080830184614ea0565b60006001600160e01b0319871682526001600160a01b038616602083015260a0604083015261542160a0830186614e6f565b82810360608401526154338186614e6f565b838103608085015261117f8186614ea0565b60006001600160e01b0319861682526001600160a01b0385166020830152608060408301526154776080830185614ea0565b905082606083015295945050505050565b6001600160e01b03199390931683526001600160a01b03919091166020830152604082015260600190565b60006001600160e01b031985168252606060208301526154d66060830185614e6f565b828103604084015261366e8185614e18565b600060208252610dc16020830184614ea0565b60006080825261550e6080830187614ea0565b6001600160a01b03958616602084015293909416604082015260ff9190911660609091015292915050565b6000615544856157e8565b8482528360208301526060604083015261529b6060830184614ea0565b6060810161556e856157f5565b938152602081019290925260409091015290565b6060810161558f856157ff565b93815260208101929092526001600160a01b031660409091015290565b604081016155b9846157f5565b9281526020015290565b6060810161556e856157ff565b606081016008851061556e57fe5b60208101600583106155ec57fe5b91905290565b60006155fd86615809565b8582528460208301526001600160a01b03841660408301526080606083015261366e6080830184614ea0565b604081016155b9846157e8565b60208082526013908201527f554e4b4e4f574e5f52455455524e5f4441544100000000000000000000000000604082015260600190565b6020808252600c908201527f4241445f53454c4543544f520000000000000000000000000000000000000000604082015260600190565b6020808252600e908201527f57524f4e475f50524f58595f4944000000000000000000000000000000000000604082015260600190565b60a081016156e98286614ecc565b8360608301528215156080830152949350505050565b600060208252610dc16020830184614eee565b6000604082526157256040830185614eee565b828103602084015261529b8185614ea0565b9283526020830191909152604082015260600190565b60405181810167ffffffffffffffff8111828210171561576c57600080fd5b604052919050565b600067ffffffffffffffff82111561578a578081fd5b5060209081020190565b600067ffffffffffffffff8211156157aa578081fd5b50601f01601f191660200190565b60005b838110156157d35781810151838201526020016157bb565b838111156157e2576000848401525b50505050565b600281106157f257fe5b50565b600481106157f257fe5b600381106157f257fe5b600781106157f257fe5b6001600160a01b03811681146157f257600080fd5b60ff811681146157f257600080fdfea365627a7a72315820b8f5e1baee716487ac576e78a6a19b92db1db8535a5a9d8ed8a3c9e3e2968a386c6578706572696d656e74616cf564736f6c63430005100040"
            }
        }
    },
    "compiler": {
        "name": "solc",
        "version": "soljson-v0.5.16+commit.9c3226ce.js",
        "settings": {
            "optimizer": {
                "enabled": true,
                "runs": 5000,
                "details": { "yul": true, "deduplicate": true, "cse": true, "constantOptimizer": true }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "istanbul"
        }
    },
    "chains": {}
}
