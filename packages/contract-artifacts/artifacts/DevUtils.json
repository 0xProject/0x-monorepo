{
    "schemaVersion": "2.0.0",
    "contractName": "DevUtils",
    "compilerOutput": {
        "abi": [
            {
                "inputs": [
                    { "internalType": "address", "name": "_exchange", "type": "address" },
                    { "internalType": "address", "name": "_chaiBridge", "type": "address" }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "constructor"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "EIP712_EXCHANGE_DOMAIN_HASH",
                "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeAssetProxyDispatchError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.AssetProxyDispatchErrorCodes",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeAssetProxyExistsError",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "assetProxyAddress", "type": "address" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeAssetProxyId",
                "outputs": [{ "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeAssetProxyTransferError",
                "outputs": [
                    { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" },
                    { "internalType": "bytes", "name": "errorData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeEIP1271SignatureError",
                "outputs": [
                    { "internalType": "address", "name": "verifyingContractAddress", "type": "address" },
                    { "internalType": "bytes", "name": "data", "type": "bytes" },
                    { "internalType": "bytes", "name": "signature", "type": "bytes" },
                    { "internalType": "bytes", "name": "errorData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeERC1155AssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "tokenAddress", "type": "address" },
                    { "internalType": "uint256[]", "name": "tokenIds", "type": "uint256[]" },
                    { "internalType": "uint256[]", "name": "tokenValues", "type": "uint256[]" },
                    { "internalType": "bytes", "name": "callbackData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeERC20AssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "tokenAddress", "type": "address" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeERC20BridgeAssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "tokenAddress", "type": "address" },
                    { "internalType": "address", "name": "bridgeAddress", "type": "address" },
                    { "internalType": "bytes", "name": "bridgeData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeERC721AssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "tokenAddress", "type": "address" },
                    { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeExchangeInvalidContextError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.ExchangeContextErrorCodes",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                    { "internalType": "address", "name": "contextAddress", "type": "address" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeFillError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.FillErrorCodes",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeIncompleteFillError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.IncompleteFillErrorCode",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "uint256", "name": "expectedAssetFillAmount", "type": "uint256" },
                    { "internalType": "uint256", "name": "actualAssetFillAmount", "type": "uint256" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeMultiAssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "uint256[]", "name": "amounts", "type": "uint256[]" },
                    { "internalType": "bytes[]", "name": "nestedAssetData", "type": "bytes[]" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeNegativeSpreadError",
                "outputs": [
                    { "internalType": "bytes32", "name": "leftOrderHash", "type": "bytes32" },
                    { "internalType": "bytes32", "name": "rightOrderHash", "type": "bytes32" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeOrderEpochError",
                "outputs": [
                    { "internalType": "address", "name": "makerAddress", "type": "address" },
                    { "internalType": "address", "name": "orderSenderAddress", "type": "address" },
                    { "internalType": "uint256", "name": "currentEpoch", "type": "uint256" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeOrderStatusError",
                "outputs": [
                    { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                    { "internalType": "enum LibOrder.OrderStatus", "name": "orderStatus", "type": "uint8" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeSignatureError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.SignatureErrorCodes",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "bytes32", "name": "hash", "type": "bytes32" },
                    { "internalType": "address", "name": "signerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "signature", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeSignatureValidatorNotApprovedError",
                "outputs": [
                    { "internalType": "address", "name": "signerAddress", "type": "address" },
                    { "internalType": "address", "name": "validatorAddress", "type": "address" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeSignatureWalletError",
                "outputs": [
                    { "internalType": "bytes32", "name": "hash", "type": "bytes32" },
                    { "internalType": "address", "name": "signerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "signature", "type": "bytes" },
                    { "internalType": "bytes", "name": "errorData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeStaticCallAssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "staticCallTargetAddress", "type": "address" },
                    { "internalType": "bytes", "name": "staticCallData", "type": "bytes" },
                    { "internalType": "bytes32", "name": "expectedReturnDataHash", "type": "bytes32" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeTransactionError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.TransactionErrorCodes",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "bytes32", "name": "transactionHash", "type": "bytes32" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeTransactionExecutionError",
                "outputs": [
                    { "internalType": "bytes32", "name": "transactionHash", "type": "bytes32" },
                    { "internalType": "bytes", "name": "errorData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    { "internalType": "address", "name": "tokenAddress", "type": "address" },
                    { "internalType": "uint256[]", "name": "tokenIds", "type": "uint256[]" },
                    { "internalType": "uint256[]", "name": "tokenValues", "type": "uint256[]" },
                    { "internalType": "bytes", "name": "callbackData", "type": "bytes" }
                ],
                "name": "encodeERC1155AssetData",
                "outputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "address", "name": "tokenAddress", "type": "address" }],
                "name": "encodeERC20AssetData",
                "outputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    { "internalType": "address", "name": "tokenAddress", "type": "address" },
                    { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
                ],
                "name": "encodeERC721AssetData",
                "outputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    { "internalType": "uint256[]", "name": "amounts", "type": "uint256[]" },
                    { "internalType": "bytes[]", "name": "nestedAssetData", "type": "bytes[]" }
                ],
                "name": "encodeMultiAssetData",
                "outputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    { "internalType": "address", "name": "staticCallTargetAddress", "type": "address" },
                    { "internalType": "bytes", "name": "staticCallData", "type": "bytes" },
                    { "internalType": "bytes32", "name": "expectedReturnDataHash", "type": "bytes32" }
                ],
                "name": "encodeStaticCallAssetData",
                "outputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" }
                ],
                "name": "getAssetProxyAllowance",
                "outputs": [{ "internalType": "uint256", "name": "allowance", "type": "uint256" }],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" }
                ],
                "name": "getBalance",
                "outputs": [{ "internalType": "uint256", "name": "balance", "type": "uint256" }],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" }
                ],
                "name": "getBalanceAndAssetProxyAllowance",
                "outputs": [
                    { "internalType": "uint256", "name": "balance", "type": "uint256" },
                    { "internalType": "uint256", "name": "allowance", "type": "uint256" }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes[]", "name": "assetData", "type": "bytes[]" }
                ],
                "name": "getBatchAssetProxyAllowances",
                "outputs": [{ "internalType": "uint256[]", "name": "allowances", "type": "uint256[]" }],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes[]", "name": "assetData", "type": "bytes[]" }
                ],
                "name": "getBatchBalances",
                "outputs": [{ "internalType": "uint256[]", "name": "balances", "type": "uint256[]" }],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes[]", "name": "assetData", "type": "bytes[]" }
                ],
                "name": "getBatchBalancesAndAssetProxyAllowances",
                "outputs": [
                    { "internalType": "uint256[]", "name": "balances", "type": "uint256[]" },
                    { "internalType": "uint256[]", "name": "allowances", "type": "uint256[]" }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "address[]", "name": "addresses", "type": "address[]" }],
                "name": "getEthBalances",
                "outputs": [{ "internalType": "uint256[]", "name": "", "type": "uint256[]" }],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    },
                    { "internalType": "uint256", "name": "chainId", "type": "uint256" },
                    { "internalType": "address", "name": "exchange", "type": "address" }
                ],
                "name": "getOrderHash",
                "outputs": [{ "internalType": "bytes32", "name": "orderHash", "type": "bytes32" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    },
                    { "internalType": "bytes", "name": "signature", "type": "bytes" }
                ],
                "name": "getOrderRelevantState",
                "outputs": [
                    {
                        "components": [
                            { "internalType": "enum LibOrder.OrderStatus", "name": "orderStatus", "type": "uint8" },
                            { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                            { "internalType": "uint256", "name": "orderTakerAssetFilledAmount", "type": "uint256" }
                        ],
                        "internalType": "struct LibOrder.OrderInfo",
                        "name": "orderInfo",
                        "type": "tuple"
                    },
                    { "internalType": "uint256", "name": "fillableTakerAssetAmount", "type": "uint256" },
                    { "internalType": "bool", "name": "isValidSignature", "type": "bool" }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    { "internalType": "bytes[]", "name": "signatures", "type": "bytes[]" }
                ],
                "name": "getOrderRelevantStates",
                "outputs": [
                    {
                        "components": [
                            { "internalType": "enum LibOrder.OrderStatus", "name": "orderStatus", "type": "uint8" },
                            { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                            { "internalType": "uint256", "name": "orderTakerAssetFilledAmount", "type": "uint256" }
                        ],
                        "internalType": "struct LibOrder.OrderInfo[]",
                        "name": "ordersInfo",
                        "type": "tuple[]"
                    },
                    { "internalType": "uint256[]", "name": "fillableTakerAssetAmounts", "type": "uint256[]" },
                    { "internalType": "bool[]", "name": "isValidSignature", "type": "bool[]" }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    },
                    { "internalType": "address", "name": "takerAddress", "type": "address" },
                    { "internalType": "uint256", "name": "takerAssetFillAmount", "type": "uint256" }
                ],
                "name": "getSimulatedOrderMakerTransferResults",
                "outputs": [
                    {
                        "internalType": "enum OrderTransferSimulationUtils.OrderTransferResults",
                        "name": "orderTransferResults",
                        "type": "uint8"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    },
                    { "internalType": "address", "name": "takerAddress", "type": "address" },
                    { "internalType": "uint256", "name": "takerAssetFillAmount", "type": "uint256" }
                ],
                "name": "getSimulatedOrderTransferResults",
                "outputs": [
                    {
                        "internalType": "enum OrderTransferSimulationUtils.OrderTransferResults",
                        "name": "orderTransferResults",
                        "type": "uint8"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    { "internalType": "address[]", "name": "takerAddresses", "type": "address[]" },
                    { "internalType": "uint256[]", "name": "takerAssetFillAmounts", "type": "uint256[]" }
                ],
                "name": "getSimulatedOrdersTransferResults",
                "outputs": [
                    {
                        "internalType": "enum OrderTransferSimulationUtils.OrderTransferResults[]",
                        "name": "orderTransferResults",
                        "type": "uint8[]"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "gasPrice", "type": "uint256" },
                            { "internalType": "address", "name": "signerAddress", "type": "address" },
                            { "internalType": "bytes", "name": "data", "type": "bytes" }
                        ],
                        "internalType": "struct LibZeroExTransaction.ZeroExTransaction",
                        "name": "transaction",
                        "type": "tuple"
                    },
                    { "internalType": "uint256", "name": "chainId", "type": "uint256" },
                    { "internalType": "address", "name": "exchange", "type": "address" }
                ],
                "name": "getTransactionHash",
                "outputs": [{ "internalType": "bytes32", "name": "transactionHash", "type": "bytes32" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" }
                ],
                "name": "getTransferableAssetAmount",
                "outputs": [{ "internalType": "uint256", "name": "transferableAssetAmount", "type": "uint256" }],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "revertIfInvalidAssetData",
                "outputs": [],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            }
        ],
        "devdoc": {
            "methods": {
                "decodeAssetProxyDispatchError(bytes)": {
                    "details": "Decompose an ABI-encoded AssetProxyDispatchError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode The error code.orderHash Hash of the order being dispatched.assetData Asset data of the order being dispatched."
                },
                "decodeAssetProxyExistsError(bytes)": {
                    "details": "Decompose an ABI-encoded AssetProxyExistsError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "assetProxyId Id of asset proxy.assetProxyAddress The address of the asset proxy."
                },
                "decodeAssetProxyId(bytes)": {
                    "details": "Decode AssetProxy identifier",
                    "params": {
                        "assetData": "AssetProxy-compliant asset data describing an ERC-20, ERC-721, ERC1155, or MultiAsset asset."
                    },
                    "return": "The AssetProxy identifier"
                },
                "decodeAssetProxyTransferError(bytes)": {
                    "details": "Decompose an ABI-encoded AssetProxyTransferError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "orderHash Hash of the order being dispatched.assetData Asset data of the order being dispatched.errorData ABI-encoded revert data from the asset proxy."
                },
                "decodeEIP1271SignatureError(bytes)": {
                    "details": "Decompose an ABI-encoded SignatureValidatorError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "signerAddress The expected signer of the hash.signature The full signature bytes.errorData The revert data thrown by the validator contract."
                },
                "decodeERC1155AssetData(bytes)": {
                    "details": "Decode ERC-1155 asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant asset data describing an ERC-1155 set of assets." },
                    "return": "The ERC-1155 AssetProxy identifier, the address of the ERC-1155 contract hosting the assets, an array of the identifiers of the assets to be traded, an array of asset amounts to be traded, and callback data.  Each element of the arrays corresponds to the same-indexed element of the other array.  Return values specified as `memory` are returned as pointers to locations within the memory of the input parameter `assetData`."
                },
                "decodeERC20AssetData(bytes)": {
                    "details": "Decode ERC-20 asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant asset data describing an ERC-20 asset." },
                    "return": "The AssetProxy identifier, and the address of the ERC-20 contract hosting this asset."
                },
                "decodeERC20BridgeAssetData(bytes)": {
                    "details": "Decode ERC20Bridge asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant asset data describing an ERC20Bridge asset" },
                    "return": "The ERC20BridgeProxy identifier, the address of the ERC20 token to transfer, the address of the bridge contract, and extra data to be passed to the bridge contract."
                },
                "decodeERC721AssetData(bytes)": {
                    "details": "Decode ERC-721 asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant asset data describing an ERC-721 asset." },
                    "return": "The ERC-721 AssetProxy identifier, the address of the ERC-721 contract hosting this asset, and the identifier of the specific asset to be traded."
                },
                "decodeExchangeInvalidContextError(bytes)": {
                    "details": "Decompose an ABI-encoded OrderStatusError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode Error code that corresponds to invalid maker, taker, or sender.orderHash The order hash.contextAddress The maker, taker, or sender address"
                },
                "decodeFillError(bytes)": {
                    "details": "Decompose an ABI-encoded FillError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode The error code.orderHash The order hash."
                },
                "decodeIncompleteFillError(bytes)": {
                    "details": "Decompose an ABI-encoded IncompleteFillError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "orderHash Hash of the order being filled."
                },
                "decodeMultiAssetData(bytes)": {
                    "details": "Decode multi-asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant data describing a multi-asset basket." },
                    "return": "The Multi-Asset AssetProxy identifier, an array of the amounts of the assets to be traded, and an array of the AssetProxy-compliant data describing each asset to be traded.  Each element of the arrays corresponds to the same-indexed element of the other array."
                },
                "decodeNegativeSpreadError(bytes)": {
                    "details": "Decompose an ABI-encoded NegativeSpreadError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "leftOrderHash Hash of the left order being matched.rightOrderHash Hash of the right order being matched."
                },
                "decodeOrderEpochError(bytes)": {
                    "details": "Decompose an ABI-encoded OrderEpochError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "makerAddress The order maker.orderSenderAddress The order sender.currentEpoch The current epoch for the maker."
                },
                "decodeOrderStatusError(bytes)": {
                    "details": "Decompose an ABI-encoded OrderStatusError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "orderHash The order hash.orderStatus The order status."
                },
                "decodeSignatureError(bytes)": {
                    "details": "Decompose an ABI-encoded SignatureError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode The error code.signerAddress The expected signer of the hash.signature The full signature."
                },
                "decodeSignatureValidatorNotApprovedError(bytes)": {
                    "details": "Decompose an ABI-encoded SignatureValidatorNotApprovedError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "signerAddress The expected signer of the hash.validatorAddress The expected validator."
                },
                "decodeSignatureWalletError(bytes)": {
                    "details": "Decompose an ABI-encoded SignatureWalletError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode The error code.signerAddress The expected signer of the hash.signature The full signature bytes.errorData The revert data thrown by the validator contract."
                },
                "decodeStaticCallAssetData(bytes)": {
                    "details": "Decode StaticCall asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant asset data describing a StaticCall asset" },
                    "return": "The StaticCall AssetProxy identifier, the target address of the StaticCAll, the data to be passed to the target address, and the expected Keccak-256 hash of the static call return data."
                },
                "decodeTransactionError(bytes)": {
                    "details": "Decompose an ABI-encoded TransactionError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode The error code.transactionHash Hash of the transaction."
                },
                "decodeTransactionExecutionError(bytes)": {
                    "details": "Decompose an ABI-encoded TransactionExecutionError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "transactionHash Hash of the transaction.errorData Error thrown by exeucteTransaction()."
                },
                "encodeERC1155AssetData(address,uint256[],uint256[],bytes)": {
                    "details": "Encode ERC-1155 asset data into the format described in the AssetProxy contract specification.",
                    "params": {
                        "callbackData": "Data to be passed to receiving contracts when a transfer is performed.",
                        "tokenAddress": "The address of the ERC-1155 contract hosting the asset(s) to be traded.",
                        "tokenIds": "The identifiers of the specific assets to be traded.",
                        "tokenValues": "The amounts of each asset to be traded."
                    },
                    "return": "AssetProxy-compliant asset data describing the set of assets."
                },
                "encodeERC20AssetData(address)": {
                    "details": "Encode ERC-20 asset data into the format described in the AssetProxy contract specification.",
                    "params": { "tokenAddress": "The address of the ERC-20 contract hosting the asset to be traded." },
                    "return": "AssetProxy-compliant data describing the asset."
                },
                "encodeERC721AssetData(address,uint256)": {
                    "details": "Encode ERC-721 asset data into the format described in the AssetProxy specification.",
                    "params": {
                        "tokenAddress": "The address of the ERC-721 contract hosting the asset to be traded.",
                        "tokenId": "The identifier of the specific asset to be traded."
                    },
                    "return": "AssetProxy-compliant asset data describing the asset."
                },
                "encodeMultiAssetData(uint256[],bytes[])": {
                    "details": "Encode data for multiple assets, per the AssetProxy contract specification.",
                    "params": {
                        "amounts": "The amounts of each asset to be traded.",
                        "nestedAssetData": "AssetProxy-compliant data describing each asset to be traded."
                    },
                    "return": "AssetProxy-compliant data describing the set of assets."
                },
                "encodeStaticCallAssetData(address,bytes,bytes32)": {
                    "details": "Encode StaticCall asset data into the format described in the AssetProxy contract specification.",
                    "params": {
                        "expectedReturnDataHash": "Expected Keccak-256 hash of the StaticCall return data.",
                        "staticCallData": "Data that will be passed to staticCallTargetAddress in the StaticCall.",
                        "staticCallTargetAddress": "Target address of StaticCall."
                    },
                    "return": "AssetProxy-compliant asset data describing the set of assets."
                },
                "getAssetProxyAllowance(address,bytes)": {
                    "details": "Returns the number of asset(s) (described by assetData) that the corresponding AssetProxy contract is authorized to spend.  When the asset data contains multiple assets (eg for Multi-Asset), the return value indicates how many complete \"baskets\" of those assets may be spent by all of the corresponding AssetProxy contracts.",
                    "params": {
                        "assetData": "Details of asset, encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "Number of assets (or asset baskets) that the corresponding AssetProxy is authorized to spend."
                },
                "getBalance(address,bytes)": {
                    "details": "Returns the owner's balance of the assets(s) specified in assetData.  When the asset data contains multiple assets (eg in ERC1155 or Multi-Asset), the return value indicates how many complete \"baskets\" of those assets are owned by owner.",
                    "params": {
                        "assetData": "Details of asset, encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "Number of assets (or asset baskets) held by owner."
                },
                "getBalanceAndAssetProxyAllowance(address,bytes)": {
                    "details": "Calls getBalance() and getAllowance() for assetData.",
                    "params": {
                        "assetData": "Details of asset, encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "Number of assets (or asset baskets) held by owner, and number of assets (or asset baskets) that the corresponding AssetProxy is authorized to spend."
                },
                "getBatchAssetProxyAllowances(address,bytes[])": {
                    "details": "Calls getAssetProxyAllowance() for each element of assetData.",
                    "params": {
                        "assetData": "Array of asset details, each encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "An array of asset allowances from getAllowance(), with each element corresponding to the same-indexed element in the assetData input."
                },
                "getBatchBalances(address,bytes[])": {
                    "details": "Calls getBalance() for each element of assetData.",
                    "params": {
                        "assetData": "Array of asset details, each encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "Array of asset balances from getBalance(), with each element corresponding to the same-indexed element in the assetData input."
                },
                "getBatchBalancesAndAssetProxyAllowances(address,bytes[])": {
                    "details": "Calls getBatchBalances() and getBatchAllowances() for each element of assetData.",
                    "params": {
                        "assetData": "Array of asset details, each encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "An array of asset balances from getBalance(), and an array of asset allowances from getAllowance(), with each element corresponding to the same-indexed element in the assetData input."
                },
                "getEthBalances(address[])": {
                    "details": "Batch fetches ETH balances",
                    "params": { "addresses": "Array of addresses." },
                    "return": "Array of ETH balances."
                },
                "getOrderRelevantState((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),bytes)": {
                    "details": "Fetches all order-relevant information needed to validate if the supplied order is fillable.",
                    "params": {
                        "order": "The order structure.",
                        "signature": "Signature provided by maker that proves the order's authenticity. `0x01` can always be provided if the signature does not need to be validated."
                    },
                    "return": "The orderInfo (hash, status, and `takerAssetAmount` already filled for the given order), fillableTakerAssetAmount (amount of the order's `takerAssetAmount` that is fillable given all on-chain state), and isValidSignature (validity of the provided signature). NOTE: If the `takerAssetData` encodes data for multiple assets, `fillableTakerAssetAmount` will represent a \"scaled\" amount, meaning it must be multiplied by all the individual asset amounts within the `takerAssetData` to get the final amount of each asset that can be filled."
                },
                "getOrderRelevantStates((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[])": {
                    "details": "Fetches all order-relevant information needed to validate if the supplied orders are fillable.",
                    "params": {
                        "orders": "Array of order structures.",
                        "signatures": "Array of signatures provided by makers that prove the authenticity of the orders. `0x01` can always be provided if a signature does not need to be validated."
                    },
                    "return": "The ordersInfo (array of the hash, status, and `takerAssetAmount` already filled for each order), fillableTakerAssetAmounts (array of amounts for each order's `takerAssetAmount` that is fillable given all on-chain state), and isValidSignature (array containing the validity of each provided signature). NOTE: If the `takerAssetData` encodes data for multiple assets, each element of `fillableTakerAssetAmounts` will represent a \"scaled\" amount, meaning it must be multiplied by all the individual asset amounts within the `takerAssetData` to get the final amount of each asset that can be filled."
                },
                "getSimulatedOrderMakerTransferResults((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),address,uint256)": {
                    "details": "Simulates the maker transfers within an order and returns the index of the first failed transfer.",
                    "params": {
                        "order": "The order to simulate transfers for.",
                        "takerAddress": "The address of the taker that will fill the order.",
                        "takerAssetFillAmount": "The amount of takerAsset that the taker wished to fill."
                    },
                    "return": "The index of the first failed transfer (or 4 if all transfers are successful)."
                },
                "getSimulatedOrderTransferResults((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),address,uint256)": {
                    "details": "Simulates all of the transfers within an order and returns the index of the first failed transfer.",
                    "params": {
                        "order": "The order to simulate transfers for.",
                        "takerAddress": "The address of the taker that will fill the order.",
                        "takerAssetFillAmount": "The amount of takerAsset that the taker wished to fill."
                    },
                    "return": "The index of the first failed transfer (or 4 if all transfers are successful)."
                },
                "getSimulatedOrdersTransferResults((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],address[],uint256[])": {
                    "details": "Simulates all of the transfers for each given order and returns the indices of each first failed transfer.",
                    "params": {
                        "orders": "Array of orders to individually simulate transfers for.",
                        "takerAddresses": "Array of addresses of takers that will fill each order.",
                        "takerAssetFillAmounts": "Array of amounts of takerAsset that will be filled for each order."
                    },
                    "return": "The indices of the first failed transfer (or 4 if all transfers are successful) for each order."
                },
                "getTransferableAssetAmount(address,bytes)": {
                    "details": "Gets the amount of an asset transferable by the owner.",
                    "params": {
                        "assetData": "Description of tokens, per the AssetProxy contract specification.",
                        "ownerAddress": "Address of the owner of the asset."
                    },
                    "return": "The amount of the asset tranferable by the owner. NOTE: If the `assetData` encodes data for multiple assets, the `transferableAssetAmount` will represent the amount of times the entire `assetData` can be transferred. To calculate the total individual transferable amounts, this scaled `transferableAmount` must be multiplied by the individual asset amounts located within the `assetData`."
                },
                "revertIfInvalidAssetData(bytes)": {
                    "details": "Reverts if assetData is not of a valid format for its given proxy id.",
                    "params": { "assetData": "AssetProxy compliant asset data." }
                }
            }
        },
        "evm": {
            "bytecode": {
                "object": "0x60806040523480156200001157600080fd5b5060405162005cd638038062005cd6833981016040819052620000349162000409565b600080546001600160a01b0319166001600160a01b0384811691909117808355604051630c0e082160e31b81528392869286928492839285929116906360704108906200008d90630f47261b60e41b9060040162000447565b60206040518083038186803b158015620000a657600080fd5b505afa158015620000bb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620000e19190810190620003d9565b600180546001600160a01b0319166001600160a01b03928316179055600054604051630c0e082160e31b81529116906360704108906200012d9063012b8bc960e11b9060040162000447565b60206040518083038186803b1580156200014657600080fd5b505afa1580156200015b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620001819190810190620003d9565b600280546001600160a01b0319166001600160a01b03928316179055600054604051630c0e082160e31b8152911690636070410890620001cd9063a7cb5fb760e01b9060040162000447565b60206040518083038186803b158015620001e657600080fd5b505afa158015620001fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620002219190810190620003d9565b600380546001600160a01b0319166001600160a01b03928316179055600054604051630c0e082160e31b81529116906360704108906200026d9063619ce88560e11b9060040162000447565b60206040518083038186803b1580156200028657600080fd5b505afa1580156200029b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620002c19190810190620003d9565b600480546001600160a01b03199081166001600160a01b039384161790915560058054821693831693909317909255600680549092169381169390931790555060009250831615905062000316578162000318565b305b9050620003736040518060400160405280600b81526020016a0c1e08141c9bdd1bd8dbdb60aa1b815250604051806040016040528060058152602001640332e302e360dc1b81525085846200038260201b620034501760201c565b60075550620004759350505050565b8351602094850120835193850193909320604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815295860194909452928401929092526060830152608082015260a0902090565b600060208284031215620003eb578081fd5b81516001600160a01b038116811462000402578182fd5b9392505050565b600080604083850312156200041c578081fd5b825162000429816200045c565b60208401519092506200043c816200045c565b809150509250929050565b6001600160e01b031991909116815260200190565b6001600160a01b03811681146200047257600080fd5b50565b61585180620004856000396000f3fe608060405234801561001057600080fd5b50600436106102f45760003560e01c80639a7e752611610191578063ca49f47c116100e3578063d3d862d111610097578063e4e6e7da11610071578063e4e6e7da1461077e578063e77286eb1461079f578063ee4f5a94146107c1576102f4565b8063d3d862d114610729578063d46950281461073c578063e25cabf71461075c576102f4565b8063d001c5dc116100c8578063d001c5dc146106f0578063d186037f14610703578063d363790514610716576102f4565b8063ca49f47c146106ac578063cafd3a07146106cf576102f4565b8063a6627e9f11610145578063bbb2dcf61161011f578063bbb2dcf614610661578063bc03f96414610683578063c26cfecd146106a4576102f4565b8063a6627e9f14610618578063acaedc741461062b578063b43cffe11461064e576102f4565b8063a070cac811610176578063a070cac8146105d2578063a0901e51146105e5578063a5cd62ba146105f8576102f4565b80639a7e75261461058b5780639eadc835146105ae576102f4565b80634dfdac201161024a5780637914b2ec116101fe5780637b66ad34116101d85780637b66ad34146105445780637d727512146105655780638f4ce47914610578576102f4565b80637914b2ec146104f05780637982653e1461051157806379c9c42614610531576102f4565b806363eb39921161022f57806363eb39921461049857806365129042146104ab578063750bdb30146104cd576102f4565b80634dfdac2014610458578063590aa87514610478576102f4565b8063314853ff116102ac5780633db6dc61116102865780633db6dc61146103ff578063459be5e21461042257806346eb65cb14610443576102f4565b8063314853ff146103a8578063327d3054146103ca57806332aae3ad146103dd576102f4565b80630d7b7d76116102dd5780630d7b7d7614610345578063165979e1146103665780632322cf7614610388576102f4565b806302d0aec3146102f957806304a5618a14610323575b600080fd5b61030c6103073660046149f7565b6107e3565b60405161031a929190615335565b60405180910390f35b6103366103313660046149f7565b61083f565b60405161031a9392919061545f565b6103586103533660046145d9565b6108ba565b60405161031a9291906152e3565b6103796103743660046149f7565b6108dc565b60405161031a9392919061559a565b61039b6103963660046145d9565b610939565b60405161031a91906152a0565b6103bb6103b63660046149f7565b610961565b60405161031a9392919061530a565b6103586103d83660046149f7565b6109a8565b6103f06103eb3660046149f7565b6109ea565b60405161031a93929190615510565b61041261040d3660046149f7565b610a3d565b60405161031a94939291906152a9565b6104356104303660046149f7565b610a87565b60405161031a929190615583565b6104566104513660046149f7565b610add565b005b61046b610466366004614500565b610c46565b60405161031a919061523a565b61048b610486366004614317565b610cc9565b60405161031a91906154bf565b61048b6104a636600461461d565b610d39565b6104be6104b93660046149f7565b610daf565b60405161031a93929190615006565b6104e06104db3660046149f7565b610de9565b60405161031a949392919061538a565b6105036104fe3660046149f7565b610e80565b60405161031a929190615367565b61052461051f366004614a8e565b610eb8565b60405161031a91906155b5565b61039b61053f366004614b96565b611173565b6105576105523660046149f7565b6111fc565b60405161031a929190614fec565b61039b6105733660046145d9565b611234565b6105036105863660046149f7565b611872565b61059e6105993660046149f7565b6118e8565b60405161031a94939291906155c9565b6105c16105bc3660046149f7565b611949565b60405161031a9594939291906153c6565b61039b6105e0366004614b3d565b6119c1565b61046b6105f336600461469f565b611a42565b61060b6106063660046146d2565b611abb565b60405161031a9190615152565b61048b610626366004614674565b611b7e565b61063e6106393660046149f7565b611bd7565b60405161031a94939291906150ae565b61048b61065c36600461454e565b611c13565b61067461066f3660046149f7565b611c72565b60405161031a9392919061548a565b6106966106913660046149f7565b611cec565b60405161031a9291906152f1565b61039b611d25565b6106bf6106ba3660046149f7565b611d2b565b60405161031a949392919061541c565b6106e26106dd3660046149f7565b611db5565b60405161031a929190615600565b61046b6106fe366004614500565b611e03565b61039b6107113660046145d9565b611e71565b610524610724366004614a8e565b61264a565b61048b6107373660046147a3565b6129fa565b61074f61074a3660046149f7565b612a19565b60405161031a9190615352565b61076f61076a36600461474c565b612afb565b60405161031a9392919061519f565b61079161078c366004614500565b612c33565b60405161031a92919061527b565b6107b26107ad366004614ae6565b612c4c565b60405161031a939291906156b2565b6107d46107cf3660046149f7565b612f0e565b60405161031a93929190615559565b6000806107f7836107f2612f4b565b612f6f565b60006108106004855186612faf9092919063ffffffff16565b80602001905161082391908101906149aa565b909350905060ff8116600681111561083757fe5b915050915091565b60008080610853848263ffffffff612ff216565b92506001600160e01b0319831663012b8bc960e11b1461088e5760405162461bcd60e51b81526004016108859061567b565b60405180910390fd5b61089f84601063ffffffff61302616565b91506108b284602463ffffffff61305916565b929491935050565b6000806108c78484611234565b91506108d38484611e71565b90509250929050565b60008060006108ed846107f2613065565b60006109066004865187612faf9092919063ffffffff16565b8060200190516109199190810190614d69565b9094509250905060ff8116600281111561092f57fe5b9350509193909250565b600080600061094885856108ba565b915091506109568282613089565b925050505b92915050565b6000606080610972846107f261309f565b835161098890859060049063ffffffff612faf16565b80602001905161099b919081019061494a565b9196909550909350915050565b6000806109b7836107f26130c3565b82516109cd90849060049063ffffffff612faf16565b8060200190516109e091908101906148ec565b9094909350915050565b60008060606109fb846107f26130e7565b6000610a146004865187612faf9092919063ffffffff16565b806020019051610a279190810190614d29565b9094509250905060ff8116600181111561092f57fe5b600080606080610a4f856107f261310b565b8451610a6590869060049063ffffffff612faf16565b806020019051610a7891908101906148a8565b92989197509550909350915050565b600080610a96836107f261312f565b6000610aaf6004855186612faf9092919063ffffffff16565b806020019051610ac29190810190614c67565b9250905060ff81166003811115610ad557fe5b925050915091565b6000610aef828263ffffffff612ff216565b90506001600160e01b031981167ff47261b0000000000000000000000000000000000000000000000000000000001415610b3357610b2c82611872565b5050610c42565b6001600160e01b0319811663012b8bc960e11b1415610b5d57610b558261083f565b505050610c42565b6001600160e01b0319811663a7cb5fb760e01b1415610b8957610b7f82611949565b5050505050610c42565b6001600160e01b031981166394cfcdd760e01b1415610bab57610b5582611c72565b6001600160e01b031981167fc339d10a000000000000000000000000000000000000000000000000000000001415610bef57610be682611d2b565b50505050610c42565b6001600160e01b031981167fdc1600f3000000000000000000000000000000000000000000000000000000001415610c2a57610be682610de9565b60405162461bcd60e51b81526004016108859061567b565b5050565b606060008251905080604051908082528060200260200182016040528015610c78578160200160208202803883390190505b50915060005b818114610cc157610ca285858381518110610c9557fe5b6020026020010151611e71565b838281518110610cae57fe5b6020908102919091010152600101610c7e565b505092915050565b6040516060907ff47261b00000000000000000000000000000000000000000000000000000000090610cff908490602401614fd8565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290505b919050565b6040516060907fc339d10a0000000000000000000000000000000000000000000000000000000090610d739086908690869060240161507c565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290505b9392505050565b6000806000610dc0846107f2613153565b8351610dd690859060049063ffffffff612faf16565b80602001905161099b91908101906143ce565b600080806060610dff858363ffffffff612ff216565b93506001600160e01b031984167fdc1600f30000000000000000000000000000000000000000000000000000000014610e4a5760405162461bcd60e51b81526004016108859061567b565b8451610e6090869060049063ffffffff61317716565b806020019051610e73919081019061436c565b9597919650949350915050565b600080610e8f836107f26131f7565b8251610ea590849060049063ffffffff612faf16565b8060200190516109e091908101906149ce565b6000610ec2613ee2565b610f538584600660009054906101000a90046001600160a01b03166001600160a01b0316631ce4c78b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f1557600080fd5b505afa158015610f29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f4d9190810190614c4f565b3a61321b565b60408051600280825260608281019093529293509091816020015b6060815260200190600190039081610f6e575050604080516002808252606080830184529394509091602083019080388339505060408051600280825260608083018452949550909250906020830190803883395050604080516002808252606080830184529495509092509060208301908038833901905050905088610140015184600081518110610ffd57fe5b602002602001018190525088600001518360008151811061101a57fe5b6001600160a01b03928316602091820292909201015288161561103d5787611053565b73377f698c4c287018d09b516f415317aec59193325b8260008151811061106057fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084600001518160008151811061109257fe5b602002602001018181525050886101800151846001815181106110b157fe5b60200260200101819052508860000151836001815181106110ce57fe5b6001600160a01b03928316602091820292909201015260408a015116156110f957886040015161110f565b73377f698c4c287018d09b516f415317aec59193325b8260018151811061111c57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084604001518160018151811061114e57fe5b60200260200101818152505061116684848484613292565b9998505050505050505050565b60006111f4846111ef6040518060400160405280600b81526020017f30782050726f746f636f6c0000000000000000000000000000000000000000008152506040518060400160405280600581526020017f332e302e300000000000000000000000000000000000000000000000000000008152508787613450565b6134a7565b949350505050565b60008061120b836107f26134bb565b825161122190849060049063ffffffff612faf16565b8060200190516109e09190810190614333565b600080611247838263ffffffff612ff216565b90506001600160e01b031981167ff47261b00000000000000000000000000000000000000000000000000000000014156112a257600061128e84601063ffffffff61302616565b905061129a81866134df565b92505061186b565b6001600160e01b0319811663012b8bc960e11b14156113fa576000806112c78561083f565b6040519194509250606091507f6352211e00000000000000000000000000000000000000000000000000000000906113039084906024016152a0565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060846001600160a01b0316836040516113549190614fbc565b600060405180830381855afa9150503d806000811461138f576040519150601f19603f3d011682016040523d82523d6000602084013e611394565b606091505b509150915060008280156113a9575081516020145b6113b45760006113c5565b6113c582600c63ffffffff61302616565b9050896001600160a01b0316816001600160a01b0316146113e75760006113ea565b60015b60ff16975050505050505061186b565b6001600160e01b0319811663a7cb5fb760e01b14156115d157600060608061142186611949565b5081519296509094509250905060005b8181146115c75782818151811061144457fe5b602002602001015160001415611459576115bf565b83516060907efdd58e00000000000000000000000000000000000000000000000000000000908b9087908590811061148d57fe5b60200260200101516040516024016114a69291906150e2565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060876001600160a01b0316836040516114f79190614fbc565b600060405180830381855afa9150503d8060008114611532576040519150601f19603f3d011682016040523d82523d6000602084013e611537565b606091505b5091509150600082801561154c575081516020145b611557576000611568565b61156882600063ffffffff61305916565b9050600087868151811061157857fe5b6020026020010151828161158857fe5b049050806115a45760009b50505050505050505050505061095b565b8b8110806115b057508b155b156115b957809b505b50505050505b600101611431565b505050505061186b565b6001600160e01b031981167fc339d10a0000000000000000000000000000000000000000000000000000000014156116ef576040516060907fa85e59e40000000000000000000000000000000000000000000000000000000090611640908690600090819081906024016154d2565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260045491519092506000916001600160a01b031690611692908490614fbc565b600060405180830381855afa9150503d80600081146116cd576040519150601f19603f3d011682016040523d82523d6000602084013e6116d2565b606091505b50509050806116e25760006116e6565b6000195b9350505061186b565b6001600160e01b031981167fdc1600f30000000000000000000000000000000000000000000000000000000014156117965760008061172d85610de9565b50925092505061173b6135e2565b6001600160a01b0316826001600160a01b031614801561176857506005546001600160a01b038281169116145b1561178f57600061178061177a6135fa565b886134df565b905061178b81613612565b9450505b505061186b565b6001600160e01b031981166394cfcdd760e01b141561186b576060806117bb85611c72565b80519194509250905060005b818114611866578381815181106117da57fe5b6020026020010151600014156117ef5761185e565b600061180e8985848151811061180157fe5b6020026020010151611234565b9050600085838151811061181e57fe5b6020026020010151828161182e57fe5b0490508061184657600097505050505050505061095b565b87811080611852575087155b1561185b578097505b50505b6001016117c7565b505050505b5092915050565b600080611885838263ffffffff612ff216565b91506001600160e01b031982167ff47261b000000000000000000000000000000000000000000000000000000000146118d05760405162461bcd60e51b81526004016108859061567b565b6118e183601063ffffffff61302616565b9050915091565b600080600060606118fb856107f2613810565b60006119146004875188612faf9092919063ffffffff16565b8060200190516119279190810190614ccb565b91965094509250905060ff8116600681111561193f57fe5b9450509193509193565b60008060608080611960868563ffffffff612ff216565b94506001600160e01b0319851663a7cb5fb760e01b146119925760405162461bcd60e51b81526004016108859061567b565b505050506024828101516044840151606485015160848601519496929591820184019490820184019391010190565b60006111f484611a3d6040518060400160405280600b81526020017f30782050726f746f636f6c0000000000000000000000000000000000000000008152506040518060400160405280600581526020017f332e302e300000000000000000000000000000000000000000000000000000008152508787613450565b613834565b6060808251604051908082528060200260200182016040528015611a70578160200160208202803883390190505b50905060005b8351811461186b57838181518110611a8a57fe5b60200260200101516001600160a01b031631828281518110611aa857fe5b6020908102919091010152600101611a76565b606060008451905080604051908082528060200260200182016040528015611aed578160200160208202803883390190505b50915060005b818114611b7557611b3e868281518110611b0957fe5b6020026020010151868381518110611b1d57fe5b6020026020010151868481518110611b3157fe5b602002602001015161264a565b838281518110611b4a57fe5b60200260200101906004811115611b5d57fe5b90816004811115611b6a57fe5b905250600101611af3565b50509392505050565b60405160609063012b8bc960e11b90611b9d90859085906024016150e2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905092915050565b60006060806060611bea856107f2613843565b8451611c0090869060049063ffffffff612faf16565b806020019051610a789190810190614468565b60405160609063a7cb5fb760e01b90611c3690879087908790879060240161502a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050949350505050565b6000606080611c87848463ffffffff612ff216565b92506001600160e01b031983166394cfcdd760e01b14611cb95760405162461bcd60e51b81526004016108859061567b565b8351611ccf90859060049063ffffffff61317716565b806020019051611ce291908101906147d8565b9395909450915050565b60006060611cfc836107f2613867565b8251611d1290849060049063ffffffff612faf16565b8060200190516109e0919081019061490f565b60075481565b600080606081611d41858263ffffffff612ff216565b93506001600160e01b031984167fc339d10a0000000000000000000000000000000000000000000000000000000014611d8c5760405162461bcd60e51b81526004016108859061567b565b8451611da290869060049063ffffffff61317716565b806020019051610e739190810190614410565b600080611dc4836107f261388b565b6000611ddd6004855186612faf9092919063ffffffff16565b806020019051611df09190810190614c67565b9250905060ff81166001811115610ad557fe5b606060008251905080604051908082528060200260200182016040528015611e35578160200160208202803883390190505b50915060005b818114610cc157611e528585838151811061180157fe5b838281518110611e5e57fe5b6020908102919091010152600101611e3b565b600080611e84838263ffffffff612ff216565b90506001600160e01b031981166394cfcdd760e01b1415611f5457606080611eab85611c72565b80519194509250905060005b818114611f4957838181518110611eca57fe5b602002602001015160001415611edf57611f41565b6000611ef189858481518110610c9557fe5b90506000858381518110611f0157fe5b60200260200101518281611f1157fe5b04905080611f2957600097505050505050505061095b565b87811080611f35575087155b15611f3e578097505b50505b600101611eb7565b5061095b9350505050565b6001600160e01b031981167ff47261b00000000000000000000000000000000000000000000000000000000014156120aa576000611f9984601063ffffffff61302616565b6001546040519192506060917fdd62ed3e0000000000000000000000000000000000000000000000000000000091611fdf9189916001600160a01b031690602401614fec565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060836001600160a01b0316836040516120309190614fbc565b600060405180830381855afa9150503d806000811461206b576040519150601f19603f3d011682016040523d82523d6000602084013e612070565b606091505b5091509150818015612083575080516020145b61208e57600061209f565b61209f81600063ffffffff61305916565b95505050505061186b565b6001600160e01b0319811663012b8bc960e11b141561230f576000806120cf8561083f565b600254604051929550909350606092507fe985e9c5000000000000000000000000000000000000000000000000000000009161211b918a916001600160a01b0390911690602401614fec565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060846001600160a01b03168360405161216c9190614fbc565b600060405180830381855afa9150503d80600081146121a7576040519150601f19603f3d011682016040523d82523d6000602084013e6121ac565b606091505b50915091508115806121c057508051602014155b806121dc57506121d781600063ffffffff61305916565b600114155b15612300576040516060907f081812fc00000000000000000000000000000000000000000000000000000000906122179087906024016152a0565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050856001600160a01b0316816040516122649190614fbc565b600060405180830381855afa9150503d806000811461229f576040519150601f19603f3d011682016040523d82523d6000602084013e6122a4565b606091505b5090935091508280156122b8575081516020145b80156122e757506002546001600160a01b03166122dc83600c63ffffffff61302616565b6001600160a01b0316145b6122f25760006122f5565b60015b60ff169750506115c7565b6000199650505050505061186b565b6001600160e01b0319811663a7cb5fb760e01b141561245657600061233384611949565b5050600354604051929450606093507fe985e9c5000000000000000000000000000000000000000000000000000000009261237d925089916001600160a01b031690602401614fec565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060836001600160a01b0316836040516123ce9190614fbc565b600060405180830381855afa9150503d8060008114612409576040519150601f19603f3d011682016040523d82523d6000602084013e61240e565b606091505b5091509150818015612421575080516020145b801561243d575061243981600063ffffffff61305916565b6001145b61244857600061209f565b60001995505050505061186b565b6001600160e01b031981167fc339d10a00000000000000000000000000000000000000000000000000000000141561249257600019915061186b565b6001600160e01b031981167fdc1600f300000000000000000000000000000000000000000000000000000000141561186b576000806124d085610de9565b5092509250506124de6135e2565b6001600160a01b0316826001600160a01b031614801561250b57506005546001600160a01b038281169116145b15612641576005546040516060917fdd62ed3e0000000000000000000000000000000000000000000000000000000091612555918a916001600160a01b0390911690602401614fec565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050600060606125956135fa565b6001600160a01b0316836040516125ac9190614fbc565b600060405180830381855afa9150503d80600081146125e7576040519150601f19603f3d011682016040523d82523d6000602084013e6125ec565b606091505b50915091506000828015612601575081516020145b61260c57600061261d565b61261d82600063ffffffff61305916565b905060001981146126365761263181613612565b61263a565b6000195b9750505050505b50505092915050565b6000612654613ee2565b6126a78584600660009054906101000a90046001600160a01b03166001600160a01b0316631ce4c78b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f1557600080fd5b60408051600480825260a0820190925291925060609190816020015b60608152602001906001900390816126c357505060408051600480825260a082019092529192506060919060208201608080388339505060408051600480825260a08201909252929350606092915060208201608080388339505060408051600480825260a082019092529293506060929150602082016080803883390190505090508861016001518460008151811061275957fe5b6020026020010181905250878360008151811061277257fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508860000151826000815181106127a457fe5b60200260200101906001600160a01b031690816001600160a01b03168152505086816000815181106127d257fe5b602002602001018181525050886101400151846001815181106127f157fe5b602002602001018190525088600001518360018151811061280e57fe5b6001600160a01b0392831660209182029290920101528816156128315787612847565b73377f698c4c287018d09b516f415317aec59193325b8260018151811061285457fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084600001518160018151811061288657fe5b602002602001018181525050886101a00151846002815181106128a557fe5b602002602001018190525087836002815181106128be57fe5b6001600160a01b03928316602091820292909201015260408a015116156128e95788604001516128ff565b73377f698c4c287018d09b516f415317aec59193325b8260028151811061290c57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084606001518160028151811061293e57fe5b6020026020010181815250508861018001518460038151811061295d57fe5b602002602001018190525088600001518360038151811061297a57fe5b6001600160a01b03928316602091820292909201015260408a015116156129a55788604001516129bb565b73377f698c4c287018d09b516f415317aec59193325b826003815181106129c857fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084604001518160038151811061114e57fe5b6040516060906394cfcdd760e01b90611b9d908590859060240161524d565b6000612a2b828263ffffffff612ff216565b90506001600160e01b031981167ff47261b0000000000000000000000000000000000000000000000000000000001480612a7557506001600160e01b0319811663012b8bc960e11b145b80612a9057506001600160e01b0319811663a7cb5fb760e01b145b80612aab57506001600160e01b031981166394cfcdd760e01b145b80612adf57506001600160e01b031981167fc339d10a00000000000000000000000000000000000000000000000000000000145b610d345760405162461bcd60e51b81526004016108859061567b565b606080606060008551905080604051908082528060200260200182016040528015612b4057816020015b612b2d613f11565b815260200190600190039081612b255790505b50935080604051908082528060200260200182016040528015612b6d578160200160208202803883390190505b50925080604051908082528060200260200182016040528015612b9a578160200160208202803883390190505b50915060005b818114612c2a57612bd7878281518110612bb657fe5b6020026020010151878381518110612bca57fe5b6020026020010151612c4c565b8751889085908110612be557fe5b60200260200101878581518110612bf857fe5b60200260200101878681518110612c0b57fe5b9315156020948502919091019093019290925291905252600101612ba0565b50509250925092565b606080612c408484611e03565b91506108d38484610c46565b612c54613f11565b6006546040517f9d3fa4b900000000000000000000000000000000000000000000000000000000815260009182916001600160a01b0390911690639d3fa4b990612ca29088906004016156d6565b60606040518083038186803b158015612cba57600080fd5b505afa158015612cce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612cf29190810190614a46565b85516006546040517fa12dcc6f00000000000000000000000000000000000000000000000000000000815292955090916001600160a01b039091169063a12dcc6f90612d4490899089906004016156e9565b60206040518083038186803b158015612d5c57600080fd5b505afa158015612d70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d949190810190614888565b91506000612da782886101400151610939565b60a088015160c08901516101808a01516101408b015193945091929091600091612dd69163ffffffff6138af16565b15612e0357612dfc84612df6848d608001516138d490919063ffffffff16565b856138f0565b9050612e5c565b81612e1757612dfc848b60800151856138f0565b6000612e28868c6101800151610939565b90506000612e3b868d60800151876138f0565b90506000612e4a8386886138f0565b9050612e568282613089565b93505050505b612e7c612e7689604001518561391290919063ffffffff16565b82613089565b96506004612e8f8b8c602001518a610eb8565b6004811115612e9a57fe5b14612ea6576000612ea8565b865b9650612eb88a6101600151613931565b612ec157600096505b60e08a015115801590612edf5750612edd8a6101a00151613931565b155b15612ee957600096505b600388516006811115612ef857fe5b14612f0257600096505b50505050509250925092565b6000806000612f1f846107f2613a88565b6000612f386004865187612faf9092919063ffffffff16565b8060200190516109199190810190614c94565b7ffdb6ca8d0000000000000000000000000000000000000000000000000000000090565b6000612f7c836000612ff2565b90506001600160e01b031980821690831614612faa5760405162461bcd60e51b815260040161088590615644565b505050565b606081831115612fcd57612fcd612fc860008585613aac565b613acb565b8351821115612fe657612fe6612fc86001848751613aac565b50819003910190815290565b6000816004018351101561301357613013612fc86003855185600401613aac565b5001602001516001600160e01b03191690565b6000816014018351101561304757613047612fc86004855185601401613aac565b5001601401516001600160a01b031690565b6000610da88383613ad3565b7f18e4b1410000000000000000000000000000000000000000000000000000000090565b60008183106130985781610da8565b5090919050565b7f4678472b0000000000000000000000000000000000000000000000000000000090565b7fb6555d6f0000000000000000000000000000000000000000000000000000000090565b7f488219a60000000000000000000000000000000000000000000000000000000090565b7f1b8388f70000000000000000000000000000000000000000000000000000000090565b7fe94a7ed00000000000000000000000000000000000000000000000000000000090565b7f4ad312750000000000000000000000000000000000000000000000000000000090565b60608183111561319057613190612fc860008585613aac565b83518211156131a9576131a9612fc86001848751613aac565b8282036040519080825280601f01601f1916602001820160405280156131d6576020820181803883390190505b509050610da86131e582613afd565b846131ef87613afd565b018351613b03565b7f11c7b7200000000000000000000000000000000000000000000000000000000090565b613223613ee2565b6020810184905260a0850151608086015161323f918691613ba8565b815260a085015160c0860151613256918691613ba8565b604082015260a085015160e0860151613270918691613ba8565b6060820152613285828463ffffffff613bdc16565b6080820152949350505050565b6040516000906060907fb04fbddd00000000000000000000000000000000000000000000000000000000906132d19088908890889088906024016150fb565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260065491519092506060916001600160a01b031690613323908490614fbc565b6000604051808303816000865af19150503d8060008114613360576040519150601f19603f3d011682016040523d82523d6000602084013e613365565b606091505b5091506000905061337c828263ffffffff612ff216565b90506133866130e7565b6001600160e01b0319828116911614156133c35760006133a5836109ea565b5091505060ff811660048111156133b857fe5b9450505050506111f4565b6133cb61309f565b6001600160e01b0319828116911614156133fe5760006133ea83610961565b509091505060ff811660048111156133b857fe5b815160208301207ff43f26ea5a94b478394a975e856464913dc1a8a1ca70939d974aa7c238aa0ce0141561343857600493505050506111f4565b60405162461bcd60e51b81526004016108859061560d565b8351602094850120835193850193909320604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815295860194909452928401929092526060830152608082015260a0902090565b6000610da8826134b685613c0d565b613c88565b7fa15c0d060000000000000000000000000000000000000000000000000000000090565b6040516000906060907f70a082310000000000000000000000000000000000000000000000000000000090613518908590602401614fd8565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060856001600160a01b0316836040516135699190614fbc565b600060405180830381855afa9150503d80600081146135a4576040519150601f19603f3d011682016040523d82523d6000602084013e6135a9565b606091505b50915091508180156135bc575080516020145b6135c75760006135d8565b6135d881600063ffffffff61305916565b9695505050505050565b736b175474e89094c44da98b954eedeac495271d0f90565b7306af07097c9eeb7fd685c692751d5c66db49c21590565b60008061361d6135fa565b6001600160a01b0316634ba2363a6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561365757600080fd5b505af115801561366b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061368f9190810190614a2a565b90506000816001600160a01b03166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156136ce57600080fd5b505af11580156136e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506137069190810190614c4f565b421161378457816001600160a01b031663c92aecc46040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561374757600080fd5b505af115801561375b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061377f9190810190614c4f565b6137f7565b816001600160a01b0316639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156137bf57600080fd5b505af11580156137d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506137f79190810190614c4f565b90506111f4816b033b2e3c9fd0803ce8000000866138f0565b7f7e5a23180000000000000000000000000000000000000000000000000000000090565b6000610da8826134b685613cc2565b7f5bd0428d0000000000000000000000000000000000000000000000000000000090565b7f20d11f610000000000000000000000000000000000000000000000000000000090565b7ff59851840000000000000000000000000000000000000000000000000000000090565b600081518351148015610da85750508051602091820120825192909101919091201490565b600082820183811015610da857610da8612fc860008686613d7b565b60006111f483613906868563ffffffff613bdc16565b9063ffffffff613d9a16565b60008282111561392b5761392b612fc860028585613d7b565b50900390565b6000602082518161393e57fe5b0660041461394e57506000610d34565b6000613960838263ffffffff612ff216565b90506001600160e01b031981166394cfcdd760e01b14613984576001915050610d34565b60608061399085611c72565b80519194509250905060005b818114613a7b576000809050600080905060006139d660008786815181106139c057fe5b6020026020010151612ff290919063ffffffff16565b90506001600160e01b0319811663012b8bc960e11b1415613a1a57600192506139ff8685613dc4565b15613a1557600098505050505050505050610d34565b613a57565b6001600160e01b0319811663a7cb5fb760e01b1415613a575760019150613a418685613dc4565b15613a5757600098505050505050505050610d34565b82158015613a63575081155b15613a7057505050613a7b565b50505060010161399c565b5060019695505050505050565b7fe53c76c80000000000000000000000000000000000000000000000000000000090565b6060632800659560e01b848484604051602401610d73939291906155a7565b805160208201fd5b60008160200183511015613af457613af4612fc86005855185602001613aac565b50016020015190565b60200190565b6020811015613b2d576001816020036101000a038019835116818551168082178652505050612faa565b82821415613b3a57612faa565b82821115613b745760208103905080820181840181515b82851015613b6c578451865260209586019590940193613b51565b905250612faa565b60208103905080820181840183515b81861215613b9f5782518252601f199283019290910190613b83565b85525050505050565b6000613bb5848484613e26565b15613bc857613bc8612fc8858585613e8c565b6111f483613906868563ffffffff613bdc16565b600082613beb5750600061095b565b82820282848281613bf857fe5b0414610da857610da8612fc860018686613d7b565b608081810151825160208085015160408087015160609788015186519685019690962082517fec69816980a3a3ca4554410e60253953e9ff375ba4536a98adfa15cc7154150881529485019590955290830191909152948101949094526001600160a01b039091169183019190915260a082015260c0902090565b6040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b6101408101516101608201516101808301516101a08401516000937ff80322eb8376aafb64eadf8f0d7623f22130fd9491a221e902b713cb984a753493909290916020871015613d0e57fe5b601f1987018051610140890180516101608b0180516101808d0180516101a08f0180519d89528c5160209d8e012087528b519b8d019b909b2084528951998c01999099208152875197909a019690962088526101e085209390945290529190529252919091529050919050565b606063e946c1bb60e01b848484604051602401610d7393929190615538565b600081613db057613db0612fc860038585613d7b565b6000828481613dbb57fe5b04949350505050565b8151600090600183015b818114610cc157613e0e858281518110613de457fe5b6020026020010151868681518110613df857fe5b60200260200101516138af90919063ffffffff16565b15613e1e5760019250505061095b565b600101613dce565b600082613e3857613e38612fc8613eab565b811580613e43575083155b15613e5057506000610da8565b60008380613e5a57fe5b8584099050613e6f858463ffffffff613bdc16565b613e81826103e863ffffffff613bdc16565b101595945050505050565b606063339f3de260e01b848484604051602401610d739392919061570e565b60408051808201909152600481527fa791837c00000000000000000000000000000000000000000000000000000000602082015290565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6040805160608101909152806000815260006020820181905260409091015290565b803561095b816157ea565b600082601f830112613f4e578081fd5b8135613f61613f5c8261574b565b615724565b818152915060208083019084810181840286018201871015613f8257600080fd5b60005b84811015611866578135613f98816157ea565b84529282019290820190600101613f85565b600082601f830112613fba578081fd5b8151613fc8613f5c8261574b565b8181529150602080830190840160005b8381101561400557613ff08760208451890101614171565b83526020928301929190910190600101613fd8565b5050505092915050565b600082601f83011261401f578081fd5b813561402d613f5c8261574b565b8181529150602080830190840160005b83811015614005576140558760208435890101614123565b8352602092830192919091019060010161403d565b600082601f83011261407a578081fd5b8135614088613f5c8261574b565b8181529150602080830190840160005b83811015614005576140b087602084358901016141b7565b83526020928301929190910190600101614098565b600082601f8301126140d5578081fd5b81356140e3613f5c8261574b565b81815291506020808301908481018184028601820187101561410457600080fd5b60005b8481101561186657813584529282019290820190600101614107565b600082601f830112614133578081fd5b8135614141613f5c8261576b565b915080825283602082850101111561415857600080fd5b8060208401602084013760009082016020015292915050565b600082601f830112614181578081fd5b815161418f613f5c8261576b565b91508082528360208285010111156141a657600080fd5b61186b81602084016020860161578f565b60006101c08083850312156141ca578182fd5b6141d381615724565b9150506141e08383613f33565b81526141ef8360208401613f33565b60208201526142018360408401613f33565b60408201526142138360608401613f33565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e08201526101008083013581830152506101208083013581830152506101408083013567ffffffffffffffff8082111561427557600080fd5b61428186838701614123565b8385015261016092508285013591508082111561429d57600080fd5b6142a986838701614123565b838501526101809250828501359150808211156142c557600080fd5b6142d186838701614123565b838501526101a09250828501359150808211156142ed57600080fd5b506142fa85828601614123565b82840152505092915050565b805160ff8116811461095b57600080fd5b600060208284031215614328578081fd5b8135610da8816157ea565b60008060408385031215614345578081fd5b8251614350816157ea565b6020840151909250614361816157ea565b809150509250929050565b600080600060608486031215614380578081fd5b835161438b816157ea565b602085015190935061439c816157ea565b604085015190925067ffffffffffffffff8111156143b8578182fd5b6143c486828701614171565b9150509250925092565b6000806000606084860312156143e2578081fd5b83516143ed816157ea565b60208501519093506143fe816157ea565b80925050604084015190509250925092565b600080600060608486031215614424578081fd5b835161442f816157ea565b602085015190935067ffffffffffffffff81111561444b578182fd5b61445786828701614171565b925050604084015190509250925092565b6000806000806080858703121561447d578182fd5b8451614488816157ea565b602086015190945067ffffffffffffffff808211156144a5578384fd5b6144b188838901614171565b945060408701519150808211156144c6578384fd5b6144d288838901614171565b935060608701519150808211156144e7578283fd5b506144f487828801614171565b91505092959194509250565b60008060408385031215614512578182fd5b823561451d816157ea565b9150602083013567ffffffffffffffff811115614538578182fd5b6145448582860161400f565b9150509250929050565b60008060008060808587031215614563578182fd5b843561456e816157ea565b9350602085013567ffffffffffffffff8082111561458a578384fd5b614596888389016140c5565b945060408701359150808211156145ab578384fd5b6145b7888389016140c5565b935060608701359150808211156145cc578283fd5b506144f487828801614123565b600080604083850312156145eb578182fd5b82356145f6816157ea565b9150602083013567ffffffffffffffff811115614611578182fd5b61454485828601614123565b600080600060608486031215614631578081fd5b833561463c816157ea565b9250602084013567ffffffffffffffff811115614657578182fd5b61466386828701614123565b925050604084013590509250925092565b60008060408385031215614686578182fd5b8235614691816157ea565b946020939093013593505050565b6000602082840312156146b0578081fd5b813567ffffffffffffffff8111156146c6578182fd5b6111f484828501613f3e565b6000806000606084860312156146e6578081fd5b833567ffffffffffffffff808211156146fd578283fd5b6147098783880161406a565b9450602086013591508082111561471e578283fd5b61472a87838801613f3e565b9350604086013591508082111561473f578283fd5b506143c4868287016140c5565b6000806040838503121561475e578182fd5b823567ffffffffffffffff80821115614775578384fd5b6147818683870161406a565b93506020850135915080821115614796578283fd5b506145448582860161400f565b600080604083850312156147b5578182fd5b823567ffffffffffffffff808211156147cc578384fd5b614781868387016140c5565b600080604083850312156147ea578182fd5b825167ffffffffffffffff80821115614801578384fd5b81850186601f820112614812578485fd5b80519250614822613f5c8461574b565b80848252602080830192508084018a828389028701011115614842578889fd5b8894505b86851015614864578051845260019490940193928101928101614846565b50880151909650935050508082111561487b578283fd5b5061454485828601613faa565b600060208284031215614899578081fd5b81518015158114610da8578182fd5b600080600080608085870312156148bd578182fd5b8451935060208501516148cf816157ea565b604086015190935067ffffffffffffffff808211156144c6578384fd5b600080604083850312156148fe578182fd5b505080516020909101519092909150565b60008060408385031215614921578182fd5b82519150602083015167ffffffffffffffff81111561493e578182fd5b61454485828601614171565b60008060006060848603121561495e578081fd5b83519250602084015167ffffffffffffffff8082111561497c578283fd5b61498887838801614171565b9350604086015191508082111561499d578283fd5b506143c486828701614171565b600080604083850312156149bc578182fd5b825191506020830151614361816157ff565b600080604083850312156149e0578182fd5b82516001600160e01b031981168114614350578283fd5b600060208284031215614a08578081fd5b813567ffffffffffffffff811115614a1e578182fd5b6111f484828501614123565b600060208284031215614a3b578081fd5b8151610da8816157ea565b600060608284031215614a57578081fd5b614a616060615724565b825160078110614a6f578283fd5b8152602083810151908201526040928301519281019290925250919050565b600080600060608486031215614aa2578081fd5b833567ffffffffffffffff811115614ab8578182fd5b614ac4868287016141b7565b9350506020840135614ad5816157ea565b929592945050506040919091013590565b60008060408385031215614af8578182fd5b823567ffffffffffffffff80821115614b0f578384fd5b614b1b868387016141b7565b93506020850135915080821115614b30578283fd5b5061454485828601614123565b600080600060608486031215614b51578081fd5b833567ffffffffffffffff811115614b67578182fd5b614b73868287016141b7565b935050602084013591506040840135614b8b816157ea565b809150509250925092565b600080600060608486031215614baa578081fd5b833567ffffffffffffffff80821115614bc1578283fd5b81860160a08189031215614bd3578384fd5b614bdd60a0615724565b92508035835260208101356020840152604081013560408401526060810135614c05816157ea565b6060840152608081013582811115614c1b578485fd5b614c2789828401614123565b608085015250919450505060208401359150614c468560408601613f33565b90509250925092565b600060208284031215614c60578081fd5b5051919050565b60008060408385031215614c79578182fd5b8251614c84816157ff565b6020939093015192949293505050565b600080600060608486031215614ca8578081fd5b8351614cb3816157ff565b602085015160408601519194509250614b8b816157ea565b60008060008060808587031215614ce0578182fd5b614cea8686614306565b9350602085015192506040850151614d01816157ea565b606086015190925067ffffffffffffffff811115614d1d578182fd5b6144f487828801614171565b600080600060608486031215614d3d578081fd5b614d478585614306565b925060208401519150604084015167ffffffffffffffff8111156143b8578182fd5b600080600060608486031215614d7d578081fd5b614d878585614306565b925060208401519150604084015190509250925092565b6001600160a01b03169052565b6000815180845260208401935060208301825b82811015614de55781516001600160a01b0316865260209586019590910190600101614dbe565b5093949350505050565b600081518084526020840180819550602083028101915060208501845b84811015614e3a578284038852614e24848351614e77565b6020988901989094509190910190600101614e0c565b50919695505050505050565b6000815180845260208401935060208301825b82811015614de5578151865260209586019590910190600101614e59565b60008151808452614e8f81602086016020860161578f565b601f01601f19169290920160200192915050565b8051614eae816157e0565b825260208181015190830152604090810151910152565b60006101c0614ed5848451614d9e565b6020830151614ee76020860182614d9e565b506040830151614efa6040860182614d9e565b506060830151614f0d6060860182614d9e565b506080830151608085015260a083015160a085015260c083015160c085015260e083015160e0850152610100808401518186015250610120808401518186015250610140808401518282870152614f6683870182614e77565b91505061016091508184015185820383870152614f838282614e77565b925050506101808084015185830382870152614f9f8382614e77565b9150506101a0915081840151858203838701526135d88282614e77565b60008251614fce81846020870161578f565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006001600160a01b03861682526080602083015261504c6080830186614e46565b828103604084015261505e8186614e46565b83810360608501526150708186614e77565b98975050505050505050565b60006001600160a01b03851682526060602083015261509e6060830185614e77565b9050826040830152949350505050565b60006001600160a01b0386168252608060208301526150d06080830186614e77565b828103604084015261505e8186614e77565b6001600160a01b03929092168252602082015260400190565b60006080825261510e6080830187614def565b82810360208401526151208187614dab565b83810360408501526151328187614dab565b91505082810360608401526151478185614e46565b979650505050505050565b602080825282518282018190526000918401906040840190835b818110156151945783516005811061518057fe5b83526020938401939092019160010161516c565b509095945050505050565b606080825284519082018190526000906020906080840190828801845b828110156151e2576151cf848351614ea3565b60609390930192908401906001016151bc565b505050838103828501526151f68187614e46565b84810360408601528551808252908301915082860190845b8181101561522c57825115158452928401929184019160010161520e565b509198975050505050505050565b600060208252610da86020830184614e46565b6000604082526152606040830185614e46565b82810360208401526152728185614def565b95945050505050565b60006040825261528e6040830185614e46565b82810360208401526152728185614e46565b90815260200190565b60008582526001600160a01b0385166020830152608060408301526152d16080830185614e77565b82810360608401526151478185614e77565b918252602082015260400190565b6000838252604060208301526111f46040830184614e77565b6000848252606060208301526153236060830185614e77565b82810360408401526135d88185614e77565b82815260408101615345836157e0565b8260208301529392505050565b6001600160e01b031991909116815260200190565b6001600160e01b03199290921682526001600160a01b0316602082015260400190565b60006001600160e01b0319861682526001600160a01b038086166020840152808516604084015250608060608301526135d86080830184614e77565b60006001600160e01b0319871682526001600160a01b038616602083015260a060408301526153f860a0830186614e46565b828103606084015261540a8186614e46565b83810360808501526111668186614e77565b60006001600160e01b0319861682526001600160a01b03851660208301526080604083015261544e6080830185614e77565b905082606083015295945050505050565b6001600160e01b03199390931683526001600160a01b03919091166020830152604082015260600190565b60006001600160e01b031985168252606060208301526154ad6060830185614e46565b82810360408401526135d88185614def565b600060208252610da86020830184614e77565b6000608082526154e56080830187614e77565b6001600160a01b03958616602084015293909416604082015260ff9190911660609091015292915050565b600061551b856157bf565b848252836020830152606060408301526152726060830184614e77565b60608101615545856157cc565b938152602081019290925260409091015290565b60608101615566856157d6565b93815260208101929092526001600160a01b031660409091015290565b60408101615590846157cc565b9281526020015290565b60608101615545856157d6565b606081016008851061554557fe5b60208101600583106155c357fe5b91905290565b60006155d4866157e0565b8582528460208301526001600160a01b0384166040830152608060608301526135d86080830184614e77565b60408101615590846157bf565b60208082526013908201527f554e4b4e4f574e5f52455455524e5f4441544100000000000000000000000000604082015260600190565b6020808252600c908201527f4241445f53454c4543544f520000000000000000000000000000000000000000604082015260600190565b6020808252600e908201527f57524f4e475f50524f58595f4944000000000000000000000000000000000000604082015260600190565b60a081016156c08286614ea3565b8360608301528215156080830152949350505050565b600060208252610da86020830184614ec5565b6000604082526156fc6040830185614ec5565b82810360208401526152728185614e77565b9283526020830191909152604082015260600190565b60405181810167ffffffffffffffff8111828210171561574357600080fd5b604052919050565b600067ffffffffffffffff821115615761578081fd5b5060209081020190565b600067ffffffffffffffff821115615781578081fd5b50601f01601f191660200190565b60005b838110156157aa578181015183820152602001615792565b838111156157b9576000848401525b50505050565b600281106157c957fe5b50565b600481106157c957fe5b600381106157c957fe5b600781106157c957fe5b6001600160a01b03811681146157c957600080fd5b60ff811681146157c957600080fdfea365627a7a723158208b30592a88d21873c4dfd6857a38b7ac4dafe97621ef7b71779e1157eee973ab6c6578706572696d656e74616cf564736f6c63430005100040"
            },
            "deployedBytecode": {
                "object": "0x608060405234801561001057600080fd5b50600436106102f45760003560e01c80639a7e752611610191578063ca49f47c116100e3578063d3d862d111610097578063e4e6e7da11610071578063e4e6e7da1461077e578063e77286eb1461079f578063ee4f5a94146107c1576102f4565b8063d3d862d114610729578063d46950281461073c578063e25cabf71461075c576102f4565b8063d001c5dc116100c8578063d001c5dc146106f0578063d186037f14610703578063d363790514610716576102f4565b8063ca49f47c146106ac578063cafd3a07146106cf576102f4565b8063a6627e9f11610145578063bbb2dcf61161011f578063bbb2dcf614610661578063bc03f96414610683578063c26cfecd146106a4576102f4565b8063a6627e9f14610618578063acaedc741461062b578063b43cffe11461064e576102f4565b8063a070cac811610176578063a070cac8146105d2578063a0901e51146105e5578063a5cd62ba146105f8576102f4565b80639a7e75261461058b5780639eadc835146105ae576102f4565b80634dfdac201161024a5780637914b2ec116101fe5780637b66ad34116101d85780637b66ad34146105445780637d727512146105655780638f4ce47914610578576102f4565b80637914b2ec146104f05780637982653e1461051157806379c9c42614610531576102f4565b806363eb39921161022f57806363eb39921461049857806365129042146104ab578063750bdb30146104cd576102f4565b80634dfdac2014610458578063590aa87514610478576102f4565b8063314853ff116102ac5780633db6dc61116102865780633db6dc61146103ff578063459be5e21461042257806346eb65cb14610443576102f4565b8063314853ff146103a8578063327d3054146103ca57806332aae3ad146103dd576102f4565b80630d7b7d76116102dd5780630d7b7d7614610345578063165979e1146103665780632322cf7614610388576102f4565b806302d0aec3146102f957806304a5618a14610323575b600080fd5b61030c6103073660046149f7565b6107e3565b60405161031a929190615335565b60405180910390f35b6103366103313660046149f7565b61083f565b60405161031a9392919061545f565b6103586103533660046145d9565b6108ba565b60405161031a9291906152e3565b6103796103743660046149f7565b6108dc565b60405161031a9392919061559a565b61039b6103963660046145d9565b610939565b60405161031a91906152a0565b6103bb6103b63660046149f7565b610961565b60405161031a9392919061530a565b6103586103d83660046149f7565b6109a8565b6103f06103eb3660046149f7565b6109ea565b60405161031a93929190615510565b61041261040d3660046149f7565b610a3d565b60405161031a94939291906152a9565b6104356104303660046149f7565b610a87565b60405161031a929190615583565b6104566104513660046149f7565b610add565b005b61046b610466366004614500565b610c46565b60405161031a919061523a565b61048b610486366004614317565b610cc9565b60405161031a91906154bf565b61048b6104a636600461461d565b610d39565b6104be6104b93660046149f7565b610daf565b60405161031a93929190615006565b6104e06104db3660046149f7565b610de9565b60405161031a949392919061538a565b6105036104fe3660046149f7565b610e80565b60405161031a929190615367565b61052461051f366004614a8e565b610eb8565b60405161031a91906155b5565b61039b61053f366004614b96565b611173565b6105576105523660046149f7565b6111fc565b60405161031a929190614fec565b61039b6105733660046145d9565b611234565b6105036105863660046149f7565b611872565b61059e6105993660046149f7565b6118e8565b60405161031a94939291906155c9565b6105c16105bc3660046149f7565b611949565b60405161031a9594939291906153c6565b61039b6105e0366004614b3d565b6119c1565b61046b6105f336600461469f565b611a42565b61060b6106063660046146d2565b611abb565b60405161031a9190615152565b61048b610626366004614674565b611b7e565b61063e6106393660046149f7565b611bd7565b60405161031a94939291906150ae565b61048b61065c36600461454e565b611c13565b61067461066f3660046149f7565b611c72565b60405161031a9392919061548a565b6106966106913660046149f7565b611cec565b60405161031a9291906152f1565b61039b611d25565b6106bf6106ba3660046149f7565b611d2b565b60405161031a949392919061541c565b6106e26106dd3660046149f7565b611db5565b60405161031a929190615600565b61046b6106fe366004614500565b611e03565b61039b6107113660046145d9565b611e71565b610524610724366004614a8e565b61264a565b61048b6107373660046147a3565b6129fa565b61074f61074a3660046149f7565b612a19565b60405161031a9190615352565b61076f61076a36600461474c565b612afb565b60405161031a9392919061519f565b61079161078c366004614500565b612c33565b60405161031a92919061527b565b6107b26107ad366004614ae6565b612c4c565b60405161031a939291906156b2565b6107d46107cf3660046149f7565b612f0e565b60405161031a93929190615559565b6000806107f7836107f2612f4b565b612f6f565b60006108106004855186612faf9092919063ffffffff16565b80602001905161082391908101906149aa565b909350905060ff8116600681111561083757fe5b915050915091565b60008080610853848263ffffffff612ff216565b92506001600160e01b0319831663012b8bc960e11b1461088e5760405162461bcd60e51b81526004016108859061567b565b60405180910390fd5b61089f84601063ffffffff61302616565b91506108b284602463ffffffff61305916565b929491935050565b6000806108c78484611234565b91506108d38484611e71565b90509250929050565b60008060006108ed846107f2613065565b60006109066004865187612faf9092919063ffffffff16565b8060200190516109199190810190614d69565b9094509250905060ff8116600281111561092f57fe5b9350509193909250565b600080600061094885856108ba565b915091506109568282613089565b925050505b92915050565b6000606080610972846107f261309f565b835161098890859060049063ffffffff612faf16565b80602001905161099b919081019061494a565b9196909550909350915050565b6000806109b7836107f26130c3565b82516109cd90849060049063ffffffff612faf16565b8060200190516109e091908101906148ec565b9094909350915050565b60008060606109fb846107f26130e7565b6000610a146004865187612faf9092919063ffffffff16565b806020019051610a279190810190614d29565b9094509250905060ff8116600181111561092f57fe5b600080606080610a4f856107f261310b565b8451610a6590869060049063ffffffff612faf16565b806020019051610a7891908101906148a8565b92989197509550909350915050565b600080610a96836107f261312f565b6000610aaf6004855186612faf9092919063ffffffff16565b806020019051610ac29190810190614c67565b9250905060ff81166003811115610ad557fe5b925050915091565b6000610aef828263ffffffff612ff216565b90506001600160e01b031981167ff47261b0000000000000000000000000000000000000000000000000000000001415610b3357610b2c82611872565b5050610c42565b6001600160e01b0319811663012b8bc960e11b1415610b5d57610b558261083f565b505050610c42565b6001600160e01b0319811663a7cb5fb760e01b1415610b8957610b7f82611949565b5050505050610c42565b6001600160e01b031981166394cfcdd760e01b1415610bab57610b5582611c72565b6001600160e01b031981167fc339d10a000000000000000000000000000000000000000000000000000000001415610bef57610be682611d2b565b50505050610c42565b6001600160e01b031981167fdc1600f3000000000000000000000000000000000000000000000000000000001415610c2a57610be682610de9565b60405162461bcd60e51b81526004016108859061567b565b5050565b606060008251905080604051908082528060200260200182016040528015610c78578160200160208202803883390190505b50915060005b818114610cc157610ca285858381518110610c9557fe5b6020026020010151611e71565b838281518110610cae57fe5b6020908102919091010152600101610c7e565b505092915050565b6040516060907ff47261b00000000000000000000000000000000000000000000000000000000090610cff908490602401614fd8565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290505b919050565b6040516060907fc339d10a0000000000000000000000000000000000000000000000000000000090610d739086908690869060240161507c565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290505b9392505050565b6000806000610dc0846107f2613153565b8351610dd690859060049063ffffffff612faf16565b80602001905161099b91908101906143ce565b600080806060610dff858363ffffffff612ff216565b93506001600160e01b031984167fdc1600f30000000000000000000000000000000000000000000000000000000014610e4a5760405162461bcd60e51b81526004016108859061567b565b8451610e6090869060049063ffffffff61317716565b806020019051610e73919081019061436c565b9597919650949350915050565b600080610e8f836107f26131f7565b8251610ea590849060049063ffffffff612faf16565b8060200190516109e091908101906149ce565b6000610ec2613ee2565b610f538584600660009054906101000a90046001600160a01b03166001600160a01b0316631ce4c78b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f1557600080fd5b505afa158015610f29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f4d9190810190614c4f565b3a61321b565b60408051600280825260608281019093529293509091816020015b6060815260200190600190039081610f6e575050604080516002808252606080830184529394509091602083019080388339505060408051600280825260608083018452949550909250906020830190803883395050604080516002808252606080830184529495509092509060208301908038833901905050905088610140015184600081518110610ffd57fe5b602002602001018190525088600001518360008151811061101a57fe5b6001600160a01b03928316602091820292909201015288161561103d5787611053565b73377f698c4c287018d09b516f415317aec59193325b8260008151811061106057fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084600001518160008151811061109257fe5b602002602001018181525050886101800151846001815181106110b157fe5b60200260200101819052508860000151836001815181106110ce57fe5b6001600160a01b03928316602091820292909201015260408a015116156110f957886040015161110f565b73377f698c4c287018d09b516f415317aec59193325b8260018151811061111c57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084604001518160018151811061114e57fe5b60200260200101818152505061116684848484613292565b9998505050505050505050565b60006111f4846111ef6040518060400160405280600b81526020017f30782050726f746f636f6c0000000000000000000000000000000000000000008152506040518060400160405280600581526020017f332e302e300000000000000000000000000000000000000000000000000000008152508787613450565b6134a7565b949350505050565b60008061120b836107f26134bb565b825161122190849060049063ffffffff612faf16565b8060200190516109e09190810190614333565b600080611247838263ffffffff612ff216565b90506001600160e01b031981167ff47261b00000000000000000000000000000000000000000000000000000000014156112a257600061128e84601063ffffffff61302616565b905061129a81866134df565b92505061186b565b6001600160e01b0319811663012b8bc960e11b14156113fa576000806112c78561083f565b6040519194509250606091507f6352211e00000000000000000000000000000000000000000000000000000000906113039084906024016152a0565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060846001600160a01b0316836040516113549190614fbc565b600060405180830381855afa9150503d806000811461138f576040519150601f19603f3d011682016040523d82523d6000602084013e611394565b606091505b509150915060008280156113a9575081516020145b6113b45760006113c5565b6113c582600c63ffffffff61302616565b9050896001600160a01b0316816001600160a01b0316146113e75760006113ea565b60015b60ff16975050505050505061186b565b6001600160e01b0319811663a7cb5fb760e01b14156115d157600060608061142186611949565b5081519296509094509250905060005b8181146115c75782818151811061144457fe5b602002602001015160001415611459576115bf565b83516060907efdd58e00000000000000000000000000000000000000000000000000000000908b9087908590811061148d57fe5b60200260200101516040516024016114a69291906150e2565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060876001600160a01b0316836040516114f79190614fbc565b600060405180830381855afa9150503d8060008114611532576040519150601f19603f3d011682016040523d82523d6000602084013e611537565b606091505b5091509150600082801561154c575081516020145b611557576000611568565b61156882600063ffffffff61305916565b9050600087868151811061157857fe5b6020026020010151828161158857fe5b049050806115a45760009b50505050505050505050505061095b565b8b8110806115b057508b155b156115b957809b505b50505050505b600101611431565b505050505061186b565b6001600160e01b031981167fc339d10a0000000000000000000000000000000000000000000000000000000014156116ef576040516060907fa85e59e40000000000000000000000000000000000000000000000000000000090611640908690600090819081906024016154d2565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260045491519092506000916001600160a01b031690611692908490614fbc565b600060405180830381855afa9150503d80600081146116cd576040519150601f19603f3d011682016040523d82523d6000602084013e6116d2565b606091505b50509050806116e25760006116e6565b6000195b9350505061186b565b6001600160e01b031981167fdc1600f30000000000000000000000000000000000000000000000000000000014156117965760008061172d85610de9565b50925092505061173b6135e2565b6001600160a01b0316826001600160a01b031614801561176857506005546001600160a01b038281169116145b1561178f57600061178061177a6135fa565b886134df565b905061178b81613612565b9450505b505061186b565b6001600160e01b031981166394cfcdd760e01b141561186b576060806117bb85611c72565b80519194509250905060005b818114611866578381815181106117da57fe5b6020026020010151600014156117ef5761185e565b600061180e8985848151811061180157fe5b6020026020010151611234565b9050600085838151811061181e57fe5b6020026020010151828161182e57fe5b0490508061184657600097505050505050505061095b565b87811080611852575087155b1561185b578097505b50505b6001016117c7565b505050505b5092915050565b600080611885838263ffffffff612ff216565b91506001600160e01b031982167ff47261b000000000000000000000000000000000000000000000000000000000146118d05760405162461bcd60e51b81526004016108859061567b565b6118e183601063ffffffff61302616565b9050915091565b600080600060606118fb856107f2613810565b60006119146004875188612faf9092919063ffffffff16565b8060200190516119279190810190614ccb565b91965094509250905060ff8116600681111561193f57fe5b9450509193509193565b60008060608080611960868563ffffffff612ff216565b94506001600160e01b0319851663a7cb5fb760e01b146119925760405162461bcd60e51b81526004016108859061567b565b505050506024828101516044840151606485015160848601519496929591820184019490820184019391010190565b60006111f484611a3d6040518060400160405280600b81526020017f30782050726f746f636f6c0000000000000000000000000000000000000000008152506040518060400160405280600581526020017f332e302e300000000000000000000000000000000000000000000000000000008152508787613450565b613834565b6060808251604051908082528060200260200182016040528015611a70578160200160208202803883390190505b50905060005b8351811461186b57838181518110611a8a57fe5b60200260200101516001600160a01b031631828281518110611aa857fe5b6020908102919091010152600101611a76565b606060008451905080604051908082528060200260200182016040528015611aed578160200160208202803883390190505b50915060005b818114611b7557611b3e868281518110611b0957fe5b6020026020010151868381518110611b1d57fe5b6020026020010151868481518110611b3157fe5b602002602001015161264a565b838281518110611b4a57fe5b60200260200101906004811115611b5d57fe5b90816004811115611b6a57fe5b905250600101611af3565b50509392505050565b60405160609063012b8bc960e11b90611b9d90859085906024016150e2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905092915050565b60006060806060611bea856107f2613843565b8451611c0090869060049063ffffffff612faf16565b806020019051610a789190810190614468565b60405160609063a7cb5fb760e01b90611c3690879087908790879060240161502a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050949350505050565b6000606080611c87848463ffffffff612ff216565b92506001600160e01b031983166394cfcdd760e01b14611cb95760405162461bcd60e51b81526004016108859061567b565b8351611ccf90859060049063ffffffff61317716565b806020019051611ce291908101906147d8565b9395909450915050565b60006060611cfc836107f2613867565b8251611d1290849060049063ffffffff612faf16565b8060200190516109e0919081019061490f565b60075481565b600080606081611d41858263ffffffff612ff216565b93506001600160e01b031984167fc339d10a0000000000000000000000000000000000000000000000000000000014611d8c5760405162461bcd60e51b81526004016108859061567b565b8451611da290869060049063ffffffff61317716565b806020019051610e739190810190614410565b600080611dc4836107f261388b565b6000611ddd6004855186612faf9092919063ffffffff16565b806020019051611df09190810190614c67565b9250905060ff81166001811115610ad557fe5b606060008251905080604051908082528060200260200182016040528015611e35578160200160208202803883390190505b50915060005b818114610cc157611e528585838151811061180157fe5b838281518110611e5e57fe5b6020908102919091010152600101611e3b565b600080611e84838263ffffffff612ff216565b90506001600160e01b031981166394cfcdd760e01b1415611f5457606080611eab85611c72565b80519194509250905060005b818114611f4957838181518110611eca57fe5b602002602001015160001415611edf57611f41565b6000611ef189858481518110610c9557fe5b90506000858381518110611f0157fe5b60200260200101518281611f1157fe5b04905080611f2957600097505050505050505061095b565b87811080611f35575087155b15611f3e578097505b50505b600101611eb7565b5061095b9350505050565b6001600160e01b031981167ff47261b00000000000000000000000000000000000000000000000000000000014156120aa576000611f9984601063ffffffff61302616565b6001546040519192506060917fdd62ed3e0000000000000000000000000000000000000000000000000000000091611fdf9189916001600160a01b031690602401614fec565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060836001600160a01b0316836040516120309190614fbc565b600060405180830381855afa9150503d806000811461206b576040519150601f19603f3d011682016040523d82523d6000602084013e612070565b606091505b5091509150818015612083575080516020145b61208e57600061209f565b61209f81600063ffffffff61305916565b95505050505061186b565b6001600160e01b0319811663012b8bc960e11b141561230f576000806120cf8561083f565b600254604051929550909350606092507fe985e9c5000000000000000000000000000000000000000000000000000000009161211b918a916001600160a01b0390911690602401614fec565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060846001600160a01b03168360405161216c9190614fbc565b600060405180830381855afa9150503d80600081146121a7576040519150601f19603f3d011682016040523d82523d6000602084013e6121ac565b606091505b50915091508115806121c057508051602014155b806121dc57506121d781600063ffffffff61305916565b600114155b15612300576040516060907f081812fc00000000000000000000000000000000000000000000000000000000906122179087906024016152a0565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050856001600160a01b0316816040516122649190614fbc565b600060405180830381855afa9150503d806000811461229f576040519150601f19603f3d011682016040523d82523d6000602084013e6122a4565b606091505b5090935091508280156122b8575081516020145b80156122e757506002546001600160a01b03166122dc83600c63ffffffff61302616565b6001600160a01b0316145b6122f25760006122f5565b60015b60ff169750506115c7565b6000199650505050505061186b565b6001600160e01b0319811663a7cb5fb760e01b141561245657600061233384611949565b5050600354604051929450606093507fe985e9c5000000000000000000000000000000000000000000000000000000009261237d925089916001600160a01b031690602401614fec565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060836001600160a01b0316836040516123ce9190614fbc565b600060405180830381855afa9150503d8060008114612409576040519150601f19603f3d011682016040523d82523d6000602084013e61240e565b606091505b5091509150818015612421575080516020145b801561243d575061243981600063ffffffff61305916565b6001145b61244857600061209f565b60001995505050505061186b565b6001600160e01b031981167fc339d10a00000000000000000000000000000000000000000000000000000000141561249257600019915061186b565b6001600160e01b031981167fdc1600f300000000000000000000000000000000000000000000000000000000141561186b576000806124d085610de9565b5092509250506124de6135e2565b6001600160a01b0316826001600160a01b031614801561250b57506005546001600160a01b038281169116145b15612641576005546040516060917fdd62ed3e0000000000000000000000000000000000000000000000000000000091612555918a916001600160a01b0390911690602401614fec565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050600060606125956135fa565b6001600160a01b0316836040516125ac9190614fbc565b600060405180830381855afa9150503d80600081146125e7576040519150601f19603f3d011682016040523d82523d6000602084013e6125ec565b606091505b50915091506000828015612601575081516020145b61260c57600061261d565b61261d82600063ffffffff61305916565b905060001981146126365761263181613612565b61263a565b6000195b9750505050505b50505092915050565b6000612654613ee2565b6126a78584600660009054906101000a90046001600160a01b03166001600160a01b0316631ce4c78b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f1557600080fd5b60408051600480825260a0820190925291925060609190816020015b60608152602001906001900390816126c357505060408051600480825260a082019092529192506060919060208201608080388339505060408051600480825260a08201909252929350606092915060208201608080388339505060408051600480825260a082019092529293506060929150602082016080803883390190505090508861016001518460008151811061275957fe5b6020026020010181905250878360008151811061277257fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508860000151826000815181106127a457fe5b60200260200101906001600160a01b031690816001600160a01b03168152505086816000815181106127d257fe5b602002602001018181525050886101400151846001815181106127f157fe5b602002602001018190525088600001518360018151811061280e57fe5b6001600160a01b0392831660209182029290920101528816156128315787612847565b73377f698c4c287018d09b516f415317aec59193325b8260018151811061285457fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084600001518160018151811061288657fe5b602002602001018181525050886101a00151846002815181106128a557fe5b602002602001018190525087836002815181106128be57fe5b6001600160a01b03928316602091820292909201015260408a015116156128e95788604001516128ff565b73377f698c4c287018d09b516f415317aec59193325b8260028151811061290c57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084606001518160028151811061293e57fe5b6020026020010181815250508861018001518460038151811061295d57fe5b602002602001018190525088600001518360038151811061297a57fe5b6001600160a01b03928316602091820292909201015260408a015116156129a55788604001516129bb565b73377f698c4c287018d09b516f415317aec59193325b826003815181106129c857fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084604001518160038151811061114e57fe5b6040516060906394cfcdd760e01b90611b9d908590859060240161524d565b6000612a2b828263ffffffff612ff216565b90506001600160e01b031981167ff47261b0000000000000000000000000000000000000000000000000000000001480612a7557506001600160e01b0319811663012b8bc960e11b145b80612a9057506001600160e01b0319811663a7cb5fb760e01b145b80612aab57506001600160e01b031981166394cfcdd760e01b145b80612adf57506001600160e01b031981167fc339d10a00000000000000000000000000000000000000000000000000000000145b610d345760405162461bcd60e51b81526004016108859061567b565b606080606060008551905080604051908082528060200260200182016040528015612b4057816020015b612b2d613f11565b815260200190600190039081612b255790505b50935080604051908082528060200260200182016040528015612b6d578160200160208202803883390190505b50925080604051908082528060200260200182016040528015612b9a578160200160208202803883390190505b50915060005b818114612c2a57612bd7878281518110612bb657fe5b6020026020010151878381518110612bca57fe5b6020026020010151612c4c565b8751889085908110612be557fe5b60200260200101878581518110612bf857fe5b60200260200101878681518110612c0b57fe5b9315156020948502919091019093019290925291905252600101612ba0565b50509250925092565b606080612c408484611e03565b91506108d38484610c46565b612c54613f11565b6006546040517f9d3fa4b900000000000000000000000000000000000000000000000000000000815260009182916001600160a01b0390911690639d3fa4b990612ca29088906004016156d6565b60606040518083038186803b158015612cba57600080fd5b505afa158015612cce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612cf29190810190614a46565b85516006546040517fa12dcc6f00000000000000000000000000000000000000000000000000000000815292955090916001600160a01b039091169063a12dcc6f90612d4490899089906004016156e9565b60206040518083038186803b158015612d5c57600080fd5b505afa158015612d70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d949190810190614888565b91506000612da782886101400151610939565b60a088015160c08901516101808a01516101408b015193945091929091600091612dd69163ffffffff6138af16565b15612e0357612dfc84612df6848d608001516138d490919063ffffffff16565b856138f0565b9050612e5c565b81612e1757612dfc848b60800151856138f0565b6000612e28868c6101800151610939565b90506000612e3b868d60800151876138f0565b90506000612e4a8386886138f0565b9050612e568282613089565b93505050505b612e7c612e7689604001518561391290919063ffffffff16565b82613089565b96506004612e8f8b8c602001518a610eb8565b6004811115612e9a57fe5b14612ea6576000612ea8565b865b9650612eb88a6101600151613931565b612ec157600096505b60e08a015115801590612edf5750612edd8a6101a00151613931565b155b15612ee957600096505b600388516006811115612ef857fe5b14612f0257600096505b50505050509250925092565b6000806000612f1f846107f2613a88565b6000612f386004865187612faf9092919063ffffffff16565b8060200190516109199190810190614c94565b7ffdb6ca8d0000000000000000000000000000000000000000000000000000000090565b6000612f7c836000612ff2565b90506001600160e01b031980821690831614612faa5760405162461bcd60e51b815260040161088590615644565b505050565b606081831115612fcd57612fcd612fc860008585613aac565b613acb565b8351821115612fe657612fe6612fc86001848751613aac565b50819003910190815290565b6000816004018351101561301357613013612fc86003855185600401613aac565b5001602001516001600160e01b03191690565b6000816014018351101561304757613047612fc86004855185601401613aac565b5001601401516001600160a01b031690565b6000610da88383613ad3565b7f18e4b1410000000000000000000000000000000000000000000000000000000090565b60008183106130985781610da8565b5090919050565b7f4678472b0000000000000000000000000000000000000000000000000000000090565b7fb6555d6f0000000000000000000000000000000000000000000000000000000090565b7f488219a60000000000000000000000000000000000000000000000000000000090565b7f1b8388f70000000000000000000000000000000000000000000000000000000090565b7fe94a7ed00000000000000000000000000000000000000000000000000000000090565b7f4ad312750000000000000000000000000000000000000000000000000000000090565b60608183111561319057613190612fc860008585613aac565b83518211156131a9576131a9612fc86001848751613aac565b8282036040519080825280601f01601f1916602001820160405280156131d6576020820181803883390190505b509050610da86131e582613afd565b846131ef87613afd565b018351613b03565b7f11c7b7200000000000000000000000000000000000000000000000000000000090565b613223613ee2565b6020810184905260a0850151608086015161323f918691613ba8565b815260a085015160c0860151613256918691613ba8565b604082015260a085015160e0860151613270918691613ba8565b6060820152613285828463ffffffff613bdc16565b6080820152949350505050565b6040516000906060907fb04fbddd00000000000000000000000000000000000000000000000000000000906132d19088908890889088906024016150fb565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260065491519092506060916001600160a01b031690613323908490614fbc565b6000604051808303816000865af19150503d8060008114613360576040519150601f19603f3d011682016040523d82523d6000602084013e613365565b606091505b5091506000905061337c828263ffffffff612ff216565b90506133866130e7565b6001600160e01b0319828116911614156133c35760006133a5836109ea565b5091505060ff811660048111156133b857fe5b9450505050506111f4565b6133cb61309f565b6001600160e01b0319828116911614156133fe5760006133ea83610961565b509091505060ff811660048111156133b857fe5b815160208301207ff43f26ea5a94b478394a975e856464913dc1a8a1ca70939d974aa7c238aa0ce0141561343857600493505050506111f4565b60405162461bcd60e51b81526004016108859061560d565b8351602094850120835193850193909320604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815295860194909452928401929092526060830152608082015260a0902090565b6000610da8826134b685613c0d565b613c88565b7fa15c0d060000000000000000000000000000000000000000000000000000000090565b6040516000906060907f70a082310000000000000000000000000000000000000000000000000000000090613518908590602401614fd8565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060856001600160a01b0316836040516135699190614fbc565b600060405180830381855afa9150503d80600081146135a4576040519150601f19603f3d011682016040523d82523d6000602084013e6135a9565b606091505b50915091508180156135bc575080516020145b6135c75760006135d8565b6135d881600063ffffffff61305916565b9695505050505050565b736b175474e89094c44da98b954eedeac495271d0f90565b7306af07097c9eeb7fd685c692751d5c66db49c21590565b60008061361d6135fa565b6001600160a01b0316634ba2363a6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561365757600080fd5b505af115801561366b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061368f9190810190614a2a565b90506000816001600160a01b03166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156136ce57600080fd5b505af11580156136e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506137069190810190614c4f565b421161378457816001600160a01b031663c92aecc46040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561374757600080fd5b505af115801561375b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061377f9190810190614c4f565b6137f7565b816001600160a01b0316639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156137bf57600080fd5b505af11580156137d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506137f79190810190614c4f565b90506111f4816b033b2e3c9fd0803ce8000000866138f0565b7f7e5a23180000000000000000000000000000000000000000000000000000000090565b6000610da8826134b685613cc2565b7f5bd0428d0000000000000000000000000000000000000000000000000000000090565b7f20d11f610000000000000000000000000000000000000000000000000000000090565b7ff59851840000000000000000000000000000000000000000000000000000000090565b600081518351148015610da85750508051602091820120825192909101919091201490565b600082820183811015610da857610da8612fc860008686613d7b565b60006111f483613906868563ffffffff613bdc16565b9063ffffffff613d9a16565b60008282111561392b5761392b612fc860028585613d7b565b50900390565b6000602082518161393e57fe5b0660041461394e57506000610d34565b6000613960838263ffffffff612ff216565b90506001600160e01b031981166394cfcdd760e01b14613984576001915050610d34565b60608061399085611c72565b80519194509250905060005b818114613a7b576000809050600080905060006139d660008786815181106139c057fe5b6020026020010151612ff290919063ffffffff16565b90506001600160e01b0319811663012b8bc960e11b1415613a1a57600192506139ff8685613dc4565b15613a1557600098505050505050505050610d34565b613a57565b6001600160e01b0319811663a7cb5fb760e01b1415613a575760019150613a418685613dc4565b15613a5757600098505050505050505050610d34565b82158015613a63575081155b15613a7057505050613a7b565b50505060010161399c565b5060019695505050505050565b7fe53c76c80000000000000000000000000000000000000000000000000000000090565b6060632800659560e01b848484604051602401610d73939291906155a7565b805160208201fd5b60008160200183511015613af457613af4612fc86005855185602001613aac565b50016020015190565b60200190565b6020811015613b2d576001816020036101000a038019835116818551168082178652505050612faa565b82821415613b3a57612faa565b82821115613b745760208103905080820181840181515b82851015613b6c578451865260209586019590940193613b51565b905250612faa565b60208103905080820181840183515b81861215613b9f5782518252601f199283019290910190613b83565b85525050505050565b6000613bb5848484613e26565b15613bc857613bc8612fc8858585613e8c565b6111f483613906868563ffffffff613bdc16565b600082613beb5750600061095b565b82820282848281613bf857fe5b0414610da857610da8612fc860018686613d7b565b608081810151825160208085015160408087015160609788015186519685019690962082517fec69816980a3a3ca4554410e60253953e9ff375ba4536a98adfa15cc7154150881529485019590955290830191909152948101949094526001600160a01b039091169183019190915260a082015260c0902090565b6040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b6101408101516101608201516101808301516101a08401516000937ff80322eb8376aafb64eadf8f0d7623f22130fd9491a221e902b713cb984a753493909290916020871015613d0e57fe5b601f1987018051610140890180516101608b0180516101808d0180516101a08f0180519d89528c5160209d8e012087528b519b8d019b909b2084528951998c01999099208152875197909a019690962088526101e085209390945290529190529252919091529050919050565b606063e946c1bb60e01b848484604051602401610d7393929190615538565b600081613db057613db0612fc860038585613d7b565b6000828481613dbb57fe5b04949350505050565b8151600090600183015b818114610cc157613e0e858281518110613de457fe5b6020026020010151868681518110613df857fe5b60200260200101516138af90919063ffffffff16565b15613e1e5760019250505061095b565b600101613dce565b600082613e3857613e38612fc8613eab565b811580613e43575083155b15613e5057506000610da8565b60008380613e5a57fe5b8584099050613e6f858463ffffffff613bdc16565b613e81826103e863ffffffff613bdc16565b101595945050505050565b606063339f3de260e01b848484604051602401610d739392919061570e565b60408051808201909152600481527fa791837c00000000000000000000000000000000000000000000000000000000602082015290565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6040805160608101909152806000815260006020820181905260409091015290565b803561095b816157ea565b600082601f830112613f4e578081fd5b8135613f61613f5c8261574b565b615724565b818152915060208083019084810181840286018201871015613f8257600080fd5b60005b84811015611866578135613f98816157ea565b84529282019290820190600101613f85565b600082601f830112613fba578081fd5b8151613fc8613f5c8261574b565b8181529150602080830190840160005b8381101561400557613ff08760208451890101614171565b83526020928301929190910190600101613fd8565b5050505092915050565b600082601f83011261401f578081fd5b813561402d613f5c8261574b565b8181529150602080830190840160005b83811015614005576140558760208435890101614123565b8352602092830192919091019060010161403d565b600082601f83011261407a578081fd5b8135614088613f5c8261574b565b8181529150602080830190840160005b83811015614005576140b087602084358901016141b7565b83526020928301929190910190600101614098565b600082601f8301126140d5578081fd5b81356140e3613f5c8261574b565b81815291506020808301908481018184028601820187101561410457600080fd5b60005b8481101561186657813584529282019290820190600101614107565b600082601f830112614133578081fd5b8135614141613f5c8261576b565b915080825283602082850101111561415857600080fd5b8060208401602084013760009082016020015292915050565b600082601f830112614181578081fd5b815161418f613f5c8261576b565b91508082528360208285010111156141a657600080fd5b61186b81602084016020860161578f565b60006101c08083850312156141ca578182fd5b6141d381615724565b9150506141e08383613f33565b81526141ef8360208401613f33565b60208201526142018360408401613f33565b60408201526142138360608401613f33565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e08201526101008083013581830152506101208083013581830152506101408083013567ffffffffffffffff8082111561427557600080fd5b61428186838701614123565b8385015261016092508285013591508082111561429d57600080fd5b6142a986838701614123565b838501526101809250828501359150808211156142c557600080fd5b6142d186838701614123565b838501526101a09250828501359150808211156142ed57600080fd5b506142fa85828601614123565b82840152505092915050565b805160ff8116811461095b57600080fd5b600060208284031215614328578081fd5b8135610da8816157ea565b60008060408385031215614345578081fd5b8251614350816157ea565b6020840151909250614361816157ea565b809150509250929050565b600080600060608486031215614380578081fd5b835161438b816157ea565b602085015190935061439c816157ea565b604085015190925067ffffffffffffffff8111156143b8578182fd5b6143c486828701614171565b9150509250925092565b6000806000606084860312156143e2578081fd5b83516143ed816157ea565b60208501519093506143fe816157ea565b80925050604084015190509250925092565b600080600060608486031215614424578081fd5b835161442f816157ea565b602085015190935067ffffffffffffffff81111561444b578182fd5b61445786828701614171565b925050604084015190509250925092565b6000806000806080858703121561447d578182fd5b8451614488816157ea565b602086015190945067ffffffffffffffff808211156144a5578384fd5b6144b188838901614171565b945060408701519150808211156144c6578384fd5b6144d288838901614171565b935060608701519150808211156144e7578283fd5b506144f487828801614171565b91505092959194509250565b60008060408385031215614512578182fd5b823561451d816157ea565b9150602083013567ffffffffffffffff811115614538578182fd5b6145448582860161400f565b9150509250929050565b60008060008060808587031215614563578182fd5b843561456e816157ea565b9350602085013567ffffffffffffffff8082111561458a578384fd5b614596888389016140c5565b945060408701359150808211156145ab578384fd5b6145b7888389016140c5565b935060608701359150808211156145cc578283fd5b506144f487828801614123565b600080604083850312156145eb578182fd5b82356145f6816157ea565b9150602083013567ffffffffffffffff811115614611578182fd5b61454485828601614123565b600080600060608486031215614631578081fd5b833561463c816157ea565b9250602084013567ffffffffffffffff811115614657578182fd5b61466386828701614123565b925050604084013590509250925092565b60008060408385031215614686578182fd5b8235614691816157ea565b946020939093013593505050565b6000602082840312156146b0578081fd5b813567ffffffffffffffff8111156146c6578182fd5b6111f484828501613f3e565b6000806000606084860312156146e6578081fd5b833567ffffffffffffffff808211156146fd578283fd5b6147098783880161406a565b9450602086013591508082111561471e578283fd5b61472a87838801613f3e565b9350604086013591508082111561473f578283fd5b506143c4868287016140c5565b6000806040838503121561475e578182fd5b823567ffffffffffffffff80821115614775578384fd5b6147818683870161406a565b93506020850135915080821115614796578283fd5b506145448582860161400f565b600080604083850312156147b5578182fd5b823567ffffffffffffffff808211156147cc578384fd5b614781868387016140c5565b600080604083850312156147ea578182fd5b825167ffffffffffffffff80821115614801578384fd5b81850186601f820112614812578485fd5b80519250614822613f5c8461574b565b80848252602080830192508084018a828389028701011115614842578889fd5b8894505b86851015614864578051845260019490940193928101928101614846565b50880151909650935050508082111561487b578283fd5b5061454485828601613faa565b600060208284031215614899578081fd5b81518015158114610da8578182fd5b600080600080608085870312156148bd578182fd5b8451935060208501516148cf816157ea565b604086015190935067ffffffffffffffff808211156144c6578384fd5b600080604083850312156148fe578182fd5b505080516020909101519092909150565b60008060408385031215614921578182fd5b82519150602083015167ffffffffffffffff81111561493e578182fd5b61454485828601614171565b60008060006060848603121561495e578081fd5b83519250602084015167ffffffffffffffff8082111561497c578283fd5b61498887838801614171565b9350604086015191508082111561499d578283fd5b506143c486828701614171565b600080604083850312156149bc578182fd5b825191506020830151614361816157ff565b600080604083850312156149e0578182fd5b82516001600160e01b031981168114614350578283fd5b600060208284031215614a08578081fd5b813567ffffffffffffffff811115614a1e578182fd5b6111f484828501614123565b600060208284031215614a3b578081fd5b8151610da8816157ea565b600060608284031215614a57578081fd5b614a616060615724565b825160078110614a6f578283fd5b8152602083810151908201526040928301519281019290925250919050565b600080600060608486031215614aa2578081fd5b833567ffffffffffffffff811115614ab8578182fd5b614ac4868287016141b7565b9350506020840135614ad5816157ea565b929592945050506040919091013590565b60008060408385031215614af8578182fd5b823567ffffffffffffffff80821115614b0f578384fd5b614b1b868387016141b7565b93506020850135915080821115614b30578283fd5b5061454485828601614123565b600080600060608486031215614b51578081fd5b833567ffffffffffffffff811115614b67578182fd5b614b73868287016141b7565b935050602084013591506040840135614b8b816157ea565b809150509250925092565b600080600060608486031215614baa578081fd5b833567ffffffffffffffff80821115614bc1578283fd5b81860160a08189031215614bd3578384fd5b614bdd60a0615724565b92508035835260208101356020840152604081013560408401526060810135614c05816157ea565b6060840152608081013582811115614c1b578485fd5b614c2789828401614123565b608085015250919450505060208401359150614c468560408601613f33565b90509250925092565b600060208284031215614c60578081fd5b5051919050565b60008060408385031215614c79578182fd5b8251614c84816157ff565b6020939093015192949293505050565b600080600060608486031215614ca8578081fd5b8351614cb3816157ff565b602085015160408601519194509250614b8b816157ea565b60008060008060808587031215614ce0578182fd5b614cea8686614306565b9350602085015192506040850151614d01816157ea565b606086015190925067ffffffffffffffff811115614d1d578182fd5b6144f487828801614171565b600080600060608486031215614d3d578081fd5b614d478585614306565b925060208401519150604084015167ffffffffffffffff8111156143b8578182fd5b600080600060608486031215614d7d578081fd5b614d878585614306565b925060208401519150604084015190509250925092565b6001600160a01b03169052565b6000815180845260208401935060208301825b82811015614de55781516001600160a01b0316865260209586019590910190600101614dbe565b5093949350505050565b600081518084526020840180819550602083028101915060208501845b84811015614e3a578284038852614e24848351614e77565b6020988901989094509190910190600101614e0c565b50919695505050505050565b6000815180845260208401935060208301825b82811015614de5578151865260209586019590910190600101614e59565b60008151808452614e8f81602086016020860161578f565b601f01601f19169290920160200192915050565b8051614eae816157e0565b825260208181015190830152604090810151910152565b60006101c0614ed5848451614d9e565b6020830151614ee76020860182614d9e565b506040830151614efa6040860182614d9e565b506060830151614f0d6060860182614d9e565b506080830151608085015260a083015160a085015260c083015160c085015260e083015160e0850152610100808401518186015250610120808401518186015250610140808401518282870152614f6683870182614e77565b91505061016091508184015185820383870152614f838282614e77565b925050506101808084015185830382870152614f9f8382614e77565b9150506101a0915081840151858203838701526135d88282614e77565b60008251614fce81846020870161578f565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006001600160a01b03861682526080602083015261504c6080830186614e46565b828103604084015261505e8186614e46565b83810360608501526150708186614e77565b98975050505050505050565b60006001600160a01b03851682526060602083015261509e6060830185614e77565b9050826040830152949350505050565b60006001600160a01b0386168252608060208301526150d06080830186614e77565b828103604084015261505e8186614e77565b6001600160a01b03929092168252602082015260400190565b60006080825261510e6080830187614def565b82810360208401526151208187614dab565b83810360408501526151328187614dab565b91505082810360608401526151478185614e46565b979650505050505050565b602080825282518282018190526000918401906040840190835b818110156151945783516005811061518057fe5b83526020938401939092019160010161516c565b509095945050505050565b606080825284519082018190526000906020906080840190828801845b828110156151e2576151cf848351614ea3565b60609390930192908401906001016151bc565b505050838103828501526151f68187614e46565b84810360408601528551808252908301915082860190845b8181101561522c57825115158452928401929184019160010161520e565b509198975050505050505050565b600060208252610da86020830184614e46565b6000604082526152606040830185614e46565b82810360208401526152728185614def565b95945050505050565b60006040825261528e6040830185614e46565b82810360208401526152728185614e46565b90815260200190565b60008582526001600160a01b0385166020830152608060408301526152d16080830185614e77565b82810360608401526151478185614e77565b918252602082015260400190565b6000838252604060208301526111f46040830184614e77565b6000848252606060208301526153236060830185614e77565b82810360408401526135d88185614e77565b82815260408101615345836157e0565b8260208301529392505050565b6001600160e01b031991909116815260200190565b6001600160e01b03199290921682526001600160a01b0316602082015260400190565b60006001600160e01b0319861682526001600160a01b038086166020840152808516604084015250608060608301526135d86080830184614e77565b60006001600160e01b0319871682526001600160a01b038616602083015260a060408301526153f860a0830186614e46565b828103606084015261540a8186614e46565b83810360808501526111668186614e77565b60006001600160e01b0319861682526001600160a01b03851660208301526080604083015261544e6080830185614e77565b905082606083015295945050505050565b6001600160e01b03199390931683526001600160a01b03919091166020830152604082015260600190565b60006001600160e01b031985168252606060208301526154ad6060830185614e46565b82810360408401526135d88185614def565b600060208252610da86020830184614e77565b6000608082526154e56080830187614e77565b6001600160a01b03958616602084015293909416604082015260ff9190911660609091015292915050565b600061551b856157bf565b848252836020830152606060408301526152726060830184614e77565b60608101615545856157cc565b938152602081019290925260409091015290565b60608101615566856157d6565b93815260208101929092526001600160a01b031660409091015290565b60408101615590846157cc565b9281526020015290565b60608101615545856157d6565b606081016008851061554557fe5b60208101600583106155c357fe5b91905290565b60006155d4866157e0565b8582528460208301526001600160a01b0384166040830152608060608301526135d86080830184614e77565b60408101615590846157bf565b60208082526013908201527f554e4b4e4f574e5f52455455524e5f4441544100000000000000000000000000604082015260600190565b6020808252600c908201527f4241445f53454c4543544f520000000000000000000000000000000000000000604082015260600190565b6020808252600e908201527f57524f4e475f50524f58595f4944000000000000000000000000000000000000604082015260600190565b60a081016156c08286614ea3565b8360608301528215156080830152949350505050565b600060208252610da86020830184614ec5565b6000604082526156fc6040830185614ec5565b82810360208401526152728185614e77565b9283526020830191909152604082015260600190565b60405181810167ffffffffffffffff8111828210171561574357600080fd5b604052919050565b600067ffffffffffffffff821115615761578081fd5b5060209081020190565b600067ffffffffffffffff821115615781578081fd5b50601f01601f191660200190565b60005b838110156157aa578181015183820152602001615792565b838111156157b9576000848401525b50505050565b600281106157c957fe5b50565b600481106157c957fe5b600381106157c957fe5b600781106157c957fe5b6001600160a01b03811681146157c957600080fd5b60ff811681146157c957600080fdfea365627a7a723158208b30592a88d21873c4dfd6857a38b7ac4dafe97621ef7b71779e1157eee973ab6c6578706572696d656e74616cf564736f6c63430005100040"
            }
        }
    },
    "compiler": {
        "name": "solc",
        "version": "soljson-v0.5.16+commit.9c3226ce.js",
        "settings": {
            "optimizer": {
                "enabled": true,
                "runs": 5000,
                "details": { "yul": true, "deduplicate": true, "cse": true, "constantOptimizer": true }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "istanbul"
        }
    },
    "chains": {}
}
