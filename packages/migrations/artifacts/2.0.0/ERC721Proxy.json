{
    "schemaVersion": "2.0.0",
    "contractName": "ERC721Proxy",
    "compilerOutput": {
        "abi": [
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "target",
                        "type": "address"
                    }
                ],
                "name": "addAuthorizedAddress",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "name": "authorities",
                "outputs": [
                    {
                        "name": "",
                        "type": "address"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "assetMetadata",
                        "type": "bytes[]"
                    },
                    {
                        "name": "from",
                        "type": "address[]"
                    },
                    {
                        "name": "to",
                        "type": "address[]"
                    },
                    {
                        "name": "amounts",
                        "type": "uint256[]"
                    }
                ],
                "name": "batchTransferFrom",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "target",
                        "type": "address"
                    }
                ],
                "name": "removeAuthorizedAddress",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "owner",
                "outputs": [
                    {
                        "name": "",
                        "type": "address"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "target",
                        "type": "address"
                    },
                    {
                        "name": "index",
                        "type": "uint256"
                    }
                ],
                "name": "removeAuthorizedAddressAtIndex",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "assetMetadata",
                        "type": "bytes"
                    },
                    {
                        "name": "from",
                        "type": "address"
                    },
                    {
                        "name": "to",
                        "type": "address"
                    },
                    {
                        "name": "amount",
                        "type": "uint256"
                    }
                ],
                "name": "transferFrom",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "getProxyId",
                "outputs": [
                    {
                        "name": "",
                        "type": "uint8"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "name": "",
                        "type": "address"
                    }
                ],
                "name": "authorized",
                "outputs": [
                    {
                        "name": "",
                        "type": "bool"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "getAuthorizedAddresses",
                "outputs": [
                    {
                        "name": "",
                        "type": "address[]"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "newOwner",
                        "type": "address"
                    }
                ],
                "name": "transferOwnership",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "name": "target",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "name": "caller",
                        "type": "address"
                    }
                ],
                "name": "AuthorizedAddressAdded",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "name": "target",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "name": "caller",
                        "type": "address"
                    }
                ],
                "name": "AuthorizedAddressRemoved",
                "type": "event"
            }
        ],
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object":
                    "0x608060405260008054600160a060020a033316600160a060020a0319909116179055611505806100306000396000f3006080604052600436106100ae5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166342f1181e81146100b3578063494503d4146100d5578063563c875d1461010b578063707129391461012b5780638da5cb5b1461014b5780639ad2674414610160578063a85e59e414610180578063ae25532e146101a0578063b9181611146101c2578063d39de6e9146101ef578063f2fde38b14610211575b600080fd5b3480156100bf57600080fd5b506100d36100ce3660046110a9565b610231565b005b3480156100e157600080fd5b506100f56100f0366004611246565b6103a9565b6040516101029190611370565b60405180910390f35b34801561011757600080fd5b506100d3610126366004611109565b6103d1565b34801561013757600080fd5b506100d36101463660046110a9565b6104f4565b34801561015757600080fd5b506100f56106f9565b34801561016c57600080fd5b506100d361017b3660046110cf565b610708565b34801561018c57600080fd5b506100d361019b3660046111c9565b610921565b3480156101ac57600080fd5b506101b56109ff565b60405161010291906113e6565b3480156101ce57600080fd5b506101e26101dd3660046110a9565b610a05565b60405161010291906113b7565b3480156101fb57600080fd5b50610204610a1a565b60405161010291906113a6565b34801561021d57600080fd5b506100d361022c3660046110a9565b610a7c565b60005433600160a060020a0390811691161461026b5760405160e560020a62461bcd028152600401610262906113d6565b60405180910390fd5b600160a060020a038116600090815260016020908152604091829020548251606081018452602681527f546172676574206d757374206e6f7420616c726561647920626520617574686f928101929092527f72697a65642e0000000000000000000000000000000000000000000000000000928201929092529060ff16156103095760405160e560020a62461bcd02815260040161026291906113c5565b50600160a060020a038082166000818152600160208190526040808320805460ff19168317905560028054928301815583527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace909101805473ffffffffffffffffffffffffffffffffffffffff1916841790555133909316927f3147867c59d17e8fa9d522465651d44aae0a9e38f902f3475b97e58072f0ed4c9190a350565b60028054829081106103b757fe5b600091825260209091200154600160a060020a0316905081565b600160a060020a0333166000908152600160209081526040808320548151606081018352602a81527f53656e646572206e6f7420617574686f72697a656420746f2063616c6c207468938101939093527f6973206d6574686f642e000000000000000000000000000000000000000000009183019190915260ff16151561046e5760405160e560020a62461bcd02815260040161026291906113c5565b50600090505b84518110156104ed576104e5858281518110151561048e57fe5b9060200190602002015185838151811015156104a657fe5b9060200190602002015185848151811015156104be57fe5b9060200190602002015185858151811015156104d657fe5b90602001906020020151610ae8565b600101610474565b5050505050565b6000805433600160a060020a039081169116146105265760405160e560020a62461bcd028152600401610262906113d6565b600160a060020a038216600090815260016020908152604091829020548251606081018452602281527f5461726765742061646472657373206d75737420626520617574686f72697a65928101929092527f642e000000000000000000000000000000000000000000000000000000000000928201929092529060ff1615156105c55760405160e560020a62461bcd02815260040161026291906113c5565b5050600160a060020a0381166000908152600160205260408120805460ff191690555b6002548110156106b55781600160a060020a031660028281548110151561060b57fe5b600091825260209091200154600160a060020a031614156106ad5760028054600019810190811061063857fe5b60009182526020909120015460028054600160a060020a03909216918390811061065e57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790556002805460001901906106a79082610e66565b506106b5565b6001016105e8565b33600160a060020a031682600160a060020a03167f1f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b060405160405180910390a35050565b600054600160a060020a031681565b60025460408051606081018252602781527f53706563696669656420617272617920696e646578206973206f7574206f662060208201527f626f756e64732e000000000000000000000000000000000000000000000000009181019190915290821061078a5760405160e560020a62461bcd02815260040161026291906113c5565b5081600160a060020a03166002828154811015156107a457fe5b6000918252602091829020015460408051606081018252603581527f4164647265737320666f756e6420617420696e64657820646f6573206e6f7420938101939093527f6d617463682074617267657420616464726573732e0000000000000000000000908301529091600160a060020a039091161461083a5760405160e560020a62461bcd02815260040161026291906113c5565b50600160a060020a0382166000908152600160205260409020805460ff1916905560028054600019810190811061086d57fe5b60009182526020909120015460028054600160a060020a03909216918390811061089357fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790556002805460001901906108dc9082610e66565b5033600160a060020a031682600160a060020a03167f1f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b060405160405180910390a35050565b600160a060020a033316600090815260016020908152604091829020548251606081018452602a81527f53656e646572206e6f7420617574686f72697a656420746f2063616c6c207468928101929092527f6973206d6574686f642e00000000000000000000000000000000000000000000928201929092529060ff1615156109c05760405160e560020a62461bcd02815260040161026291906113c5565b506104ed85858080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050848484610ae8565b60025b90565b60016020526000908152604090205460ff1681565b60606002805480602002602001604051908101604052809291908181526020018280548015610a7257602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610a54575b5050505050905090565b60005433600160a060020a03908116911614610aad5760405160e560020a62461bcd028152600401610262906113d6565b600160a060020a03811615610ae5576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b600080600260ff16866000815181101515610aff57fe5b90602001015160f860020a900460f860020a0260f860020a900460ff1614606060405190810160405280603281526020017f50726f787920696420696e206d6574616461746120646f6573206e6f74206d6181526020017f74636820746869732070726f78792069642e0000000000000000000000000000815250901515610b9d5760405160e560020a62461bcd02815260040161026291906113c5565b5060408051808201909152601d81527f5472616e7366657220616d6f756e74206d75737420657175616c20312e000000602082015260018414610bf65760405160e560020a62461bcd02815260040161026291906113c5565b50855160408051606081018252602281527f4d65746164617461206d75737420686176652061206c656e677468206f66203560208201527f332e0000000000000000000000000000000000000000000000000000000000009181019190915290603514610c795760405160e560020a62461bcd02815260040161026291906113c5565b50610c85866001610d18565b9150610c92866015610dbf565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152909150600160a060020a038316906323b872dd90610cde9088908890869060040161137e565b600060405180830381600087803b158015610cf857600080fd5b505af1158015610d0c573d6000803e3d6000fd5b50505050505050505050565b60008160140183511015606060405190810160405280602b81526020017f4c656e677468206d7573742062652067726561746572207468616e206f72206581526020017f7175616c20746f2032302e000000000000000000000000000000000000000000815250901515610da25760405160e560020a62461bcd02815260040161026291906113c5565b50506014818301810151910190600160a060020a03165b92915050565b6000610dcb8383610dd2565b9392505050565b60008160200183511015606060405190810160405280602b81526020017f4c656e677468206d7573742062652067726561746572207468616e206f72206581526020017f7175616c20746f2033322e000000000000000000000000000000000000000000815250901515610e5c5760405160e560020a62461bcd02815260040161026291906113c5565b5050016020015190565b815481835581811115610e8a57600083815260209020610e8a918101908301610e8f565b505050565b610a0291905b80821115610ea95760008155600101610e95565b5090565b6000610dcb823561146e565b6000601f82018313610eca57600080fd5b8135610edd610ed88261141b565b6113f4565b91508181835260208401935060208101905083856020840282011115610f0257600080fd5b60005b83811015610f2e5781610f188882610ead565b8452506020928301929190910190600101610f05565b5050505092915050565b6000601f82018313610f4957600080fd5b8135610f57610ed88261141b565b81815260209384019390925082018360005b83811015610f2e5781358601610f7f888261104e565b8452506020928301929190910190600101610f69565b6000601f82018313610fa657600080fd5b8135610fb4610ed88261141b565b91508181835260208401935060208101905083856020840282011115610fd957600080fd5b60005b83811015610f2e5781610fef888261109d565b8452506020928301929190910190600101610fdc565b600080601f8301841361101757600080fd5b50813567ffffffffffffffff81111561102f57600080fd5b60208301915083600182028301111561104757600080fd5b9250929050565b6000601f8201831361105f57600080fd5b813561106d610ed88261143c565b9150808252602083016020830185838301111561108957600080fd5b611094838284611485565b50505092915050565b6000610dcb8235610a02565b6000602082840312156110bb57600080fd5b60006110c78484610ead565b949350505050565b600080604083850312156110e257600080fd5b60006110ee8585610ead565b92505060206110ff8582860161109d565b9150509250929050565b6000806000806080858703121561111f57600080fd5b843567ffffffffffffffff81111561113657600080fd5b61114287828801610f38565b945050602085013567ffffffffffffffff81111561115f57600080fd5b61116b87828801610eb9565b935050604085013567ffffffffffffffff81111561118857600080fd5b61119487828801610eb9565b925050606085013567ffffffffffffffff8111156111b157600080fd5b6111bd87828801610f95565b91505092959194509250565b6000806000806000608086880312156111e157600080fd5b853567ffffffffffffffff8111156111f857600080fd5b61120488828901611005565b9550955050602061121788828901610ead565b935050604061122888828901610ead565b92505060606112398882890161109d565b9150509295509295909350565b60006020828403121561125857600080fd5b60006110c7848461109d565b61126d8161146e565b82525050565b600061127e8261146a565b80845260208401935061129083611464565b60005b828110156112c0576112a6868351611264565b6112af82611464565b602096909601959150600101611293565b5093949350505050565b61126d8161147a565b60006112de8261146a565b8084526112f2816020860160208601611491565b6112fb816114c1565b9093016020019392505050565b603381527f4f6e6c7920636f6e7472616374206f776e657220697320616c6c6f776564207460208201527f6f2063616c6c2074686973206d6574686f642e00000000000000000000000000604082015260600190565b61126d81610a02565b61126d8161147f565b60208101610db98284611264565b6060810161138c8286611264565b6113996020830185611264565b6110c7604083018461135e565b60208082528101610dcb8184611273565b60208101610db982846112ca565b60208082528101610dcb81846112d3565b60208082528101610db981611308565b60208101610db98284611367565b60405181810167ffffffffffffffff8111828210171561141357600080fd5b604052919050565b600067ffffffffffffffff82111561143257600080fd5b5060209081020190565b600067ffffffffffffffff82111561145357600080fd5b506020601f91909101601f19160190565b60200190565b5190565b600160a060020a031690565b151590565b60ff1690565b82818337506000910152565b60005b838110156114ac578181015183820152602001611494565b838111156114bb576000848401525b50505050565b601f01601f1916905600a265627a7a72305820691f241928f76b9b2746c984ebb8e0e32d04102826dbc57fcbb30320fc9fcb9c6c6578706572696d656e74616cf50037",
                "opcodes":
                    "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0x1505 DUP1 PUSH2 0x30 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAE JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x42F1181E DUP2 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x494503D4 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x563C875D EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x70712939 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x9AD26744 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xA85E59E4 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xAE25532E EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xD39DE6E9 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x211 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x231 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x6F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x10CF JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x921 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x13B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x13A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x26B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP1 PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH32 0x546172676574206D757374206E6F7420616C726561647920626520617574686F SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x72697A65642E0000000000000000000000000000000000000000000000000000 SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP4 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 OR SWAP1 SSTORE MLOAD CALLER SWAP1 SWAP4 AND SWAP3 PUSH32 0x3147867C59D17E8FA9D522465651D44AAE0A9E38F902F3475B97E58072F0ED4C SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x3B7 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH32 0x53656E646572206E6F7420617574686F72697A656420746F2063616C6C207468 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x6973206D6574686F642E00000000000000000000000000000000000000000000 SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x46E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4E5 DUP6 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x48E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4A6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4BE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x474 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x526 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP1 PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH32 0x5461726765742061646472657373206D75737420626520617574686F72697A65 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x642E000000000000000000000000000000000000000000000000000000000000 SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x6B5 JUMPI DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x60B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x6AD JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x638 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x65E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x6A7 SWAP1 DUP3 PUSH2 0xE66 JUMP JUMPDEST POP PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x5E8 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0x1F32C1B084E2DE0713B8FB16BD46BB9DF710A3DBEAE2F3CA93AF46E016DCC6B0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH32 0x53706563696669656420617272617920696E646578206973206F7574206F6620 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x626F756E64732E00000000000000000000000000000000000000000000000000 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 LT PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x7A4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH32 0x4164647265737320666F756E6420617420696E64657820646F6573206E6F7420 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x6D617463682074617267657420616464726573732E0000000000000000000000 SWAP1 DUP4 ADD MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND EQ PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x86D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x893 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x8DC SWAP1 DUP3 PUSH2 0xE66 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0x1F32C1B084E2DE0713B8FB16BD46BB9DF710A3DBEAE2F3CA93AF46E016DCC6B0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH32 0x53656E646572206E6F7420617574686F72697A656420746F2063616C6C207468 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x6973206D6574686F642E00000000000000000000000000000000000000000000 SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x9C0 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP PUSH2 0x4ED DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP DUP5 DUP5 DUP5 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x2 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA72 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA54 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xAAD JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP1 PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0xAE5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0xFF AND DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xAFF JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xF8 PUSH1 0x2 EXP MUL PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND EQ PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50726F787920696420696E206D6574616461746120646F6573206E6F74206D61 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x74636820746869732070726F78792069642E0000000000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xB9D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D75737420657175616C20312E000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP5 EQ PUSH2 0xBF6 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP DUP6 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH32 0x4D65746164617461206D75737420686176652061206C656E677468206F662035 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x332E000000000000000000000000000000000000000000000000000000000000 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH1 0x35 EQ PUSH2 0xC79 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP PUSH2 0xC85 DUP7 PUSH1 0x1 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH2 0xC92 DUP7 PUSH1 0x15 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xCDE SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x137E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x14 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7175616C20746F2032302E000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xDA2 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP POP PUSH1 0x14 DUP2 DUP4 ADD DUP2 ADD MLOAD SWAP2 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCB DUP4 DUP4 PUSH2 0xDD2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7175616C20746F2033322E000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xE5C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0xE8A JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0xE8A SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0xE8F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA02 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE95 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCB DUP3 CALLDATALOAD PUSH2 0x146E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xECA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEDD PUSH2 0xED8 DUP3 PUSH2 0x141B JUMP JUMPDEST PUSH2 0x13F4 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0xF02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF2E JUMPI DUP2 PUSH2 0xF18 DUP9 DUP3 PUSH2 0xEAD JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF05 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xF49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF57 PUSH2 0xED8 DUP3 PUSH2 0x141B JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 POP DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF2E JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0xF7F DUP9 DUP3 PUSH2 0x104E JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xFA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFB4 PUSH2 0xED8 DUP3 PUSH2 0x141B JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0xFD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF2E JUMPI DUP2 PUSH2 0xFEF DUP9 DUP3 PUSH2 0x109D JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFDC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0x1017 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x102F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1047 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x105F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x106D PUSH2 0xED8 DUP3 PUSH2 0x143C JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1089 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1094 DUP4 DUP3 DUP5 PUSH2 0x1485 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCB DUP3 CALLDATALOAD PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10C7 DUP5 DUP5 PUSH2 0xEAD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10EE DUP6 DUP6 PUSH2 0xEAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10FF DUP6 DUP3 DUP7 ADD PUSH2 0x109D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x111F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1142 DUP8 DUP3 DUP9 ADD PUSH2 0xF38 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x115F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x116B DUP8 DUP3 DUP9 ADD PUSH2 0xEB9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1194 DUP8 DUP3 DUP9 ADD PUSH2 0xEB9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11BD DUP8 DUP3 DUP9 ADD PUSH2 0xF95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1204 DUP9 DUP3 DUP10 ADD PUSH2 0x1005 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 PUSH2 0x1217 DUP9 DUP3 DUP10 ADD PUSH2 0xEAD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1228 DUP9 DUP3 DUP10 ADD PUSH2 0xEAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1239 DUP9 DUP3 DUP10 ADD PUSH2 0x109D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10C7 DUP5 DUP5 PUSH2 0x109D JUMP JUMPDEST PUSH2 0x126D DUP2 PUSH2 0x146E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x127E DUP3 PUSH2 0x146A JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH2 0x1290 DUP4 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x12C0 JUMPI PUSH2 0x12A6 DUP7 DUP4 MLOAD PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x12AF DUP3 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x20 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 POP PUSH1 0x1 ADD PUSH2 0x1293 JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x126D DUP2 PUSH2 0x147A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DE DUP3 PUSH2 0x146A JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x12F2 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x12FB DUP2 PUSH2 0x14C1 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x33 DUP2 MSTORE PUSH32 0x4F6E6C7920636F6E7472616374206F776E657220697320616C6C6F7765642074 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F2063616C6C2074686973206D6574686F642E00000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0x126D DUP2 PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x126D DUP2 PUSH2 0x147F JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xDB9 DUP3 DUP5 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x138C DUP3 DUP7 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x1399 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x10C7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xDCB DUP2 DUP5 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xDB9 DUP3 DUP5 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xDCB DUP2 DUP5 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xDB9 DUP2 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xDB9 DUP3 DUP5 PUSH2 0x1367 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14AC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1494 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x14BB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH10 0x1F241928F76B9B2746C9 DUP5 0xeb 0xb8 0xe0 0xe3 0x2d DIV LT 0x28 0x26 0xdb 0xc5 PUSH32 0xCBB30320FC9FCB9C6C6578706572696D656E74616CF500370000000000000000 ",
                "sourceMap":
                    "802:1825:0:-;;;363:5:12;:18;;-1:-1:-1;;;;;371:10:12;363:18;-1:-1:-1;;;;;;363:18:12;;;;;;802:1825:0;;;;;;"
            },
            "deployedBytecode": {
                "linkReferences": {},
                "object":
                    "0x6080604052600436106100ae5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166342f1181e81146100b3578063494503d4146100d5578063563c875d1461010b578063707129391461012b5780638da5cb5b1461014b5780639ad2674414610160578063a85e59e414610180578063ae25532e146101a0578063b9181611146101c2578063d39de6e9146101ef578063f2fde38b14610211575b600080fd5b3480156100bf57600080fd5b506100d36100ce3660046110a9565b610231565b005b3480156100e157600080fd5b506100f56100f0366004611246565b6103a9565b6040516101029190611370565b60405180910390f35b34801561011757600080fd5b506100d3610126366004611109565b6103d1565b34801561013757600080fd5b506100d36101463660046110a9565b6104f4565b34801561015757600080fd5b506100f56106f9565b34801561016c57600080fd5b506100d361017b3660046110cf565b610708565b34801561018c57600080fd5b506100d361019b3660046111c9565b610921565b3480156101ac57600080fd5b506101b56109ff565b60405161010291906113e6565b3480156101ce57600080fd5b506101e26101dd3660046110a9565b610a05565b60405161010291906113b7565b3480156101fb57600080fd5b50610204610a1a565b60405161010291906113a6565b34801561021d57600080fd5b506100d361022c3660046110a9565b610a7c565b60005433600160a060020a0390811691161461026b5760405160e560020a62461bcd028152600401610262906113d6565b60405180910390fd5b600160a060020a038116600090815260016020908152604091829020548251606081018452602681527f546172676574206d757374206e6f7420616c726561647920626520617574686f928101929092527f72697a65642e0000000000000000000000000000000000000000000000000000928201929092529060ff16156103095760405160e560020a62461bcd02815260040161026291906113c5565b50600160a060020a038082166000818152600160208190526040808320805460ff19168317905560028054928301815583527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace909101805473ffffffffffffffffffffffffffffffffffffffff1916841790555133909316927f3147867c59d17e8fa9d522465651d44aae0a9e38f902f3475b97e58072f0ed4c9190a350565b60028054829081106103b757fe5b600091825260209091200154600160a060020a0316905081565b600160a060020a0333166000908152600160209081526040808320548151606081018352602a81527f53656e646572206e6f7420617574686f72697a656420746f2063616c6c207468938101939093527f6973206d6574686f642e000000000000000000000000000000000000000000009183019190915260ff16151561046e5760405160e560020a62461bcd02815260040161026291906113c5565b50600090505b84518110156104ed576104e5858281518110151561048e57fe5b9060200190602002015185838151811015156104a657fe5b9060200190602002015185848151811015156104be57fe5b9060200190602002015185858151811015156104d657fe5b90602001906020020151610ae8565b600101610474565b5050505050565b6000805433600160a060020a039081169116146105265760405160e560020a62461bcd028152600401610262906113d6565b600160a060020a038216600090815260016020908152604091829020548251606081018452602281527f5461726765742061646472657373206d75737420626520617574686f72697a65928101929092527f642e000000000000000000000000000000000000000000000000000000000000928201929092529060ff1615156105c55760405160e560020a62461bcd02815260040161026291906113c5565b5050600160a060020a0381166000908152600160205260408120805460ff191690555b6002548110156106b55781600160a060020a031660028281548110151561060b57fe5b600091825260209091200154600160a060020a031614156106ad5760028054600019810190811061063857fe5b60009182526020909120015460028054600160a060020a03909216918390811061065e57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790556002805460001901906106a79082610e66565b506106b5565b6001016105e8565b33600160a060020a031682600160a060020a03167f1f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b060405160405180910390a35050565b600054600160a060020a031681565b60025460408051606081018252602781527f53706563696669656420617272617920696e646578206973206f7574206f662060208201527f626f756e64732e000000000000000000000000000000000000000000000000009181019190915290821061078a5760405160e560020a62461bcd02815260040161026291906113c5565b5081600160a060020a03166002828154811015156107a457fe5b6000918252602091829020015460408051606081018252603581527f4164647265737320666f756e6420617420696e64657820646f6573206e6f7420938101939093527f6d617463682074617267657420616464726573732e0000000000000000000000908301529091600160a060020a039091161461083a5760405160e560020a62461bcd02815260040161026291906113c5565b50600160a060020a0382166000908152600160205260409020805460ff1916905560028054600019810190811061086d57fe5b60009182526020909120015460028054600160a060020a03909216918390811061089357fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790556002805460001901906108dc9082610e66565b5033600160a060020a031682600160a060020a03167f1f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b060405160405180910390a35050565b600160a060020a033316600090815260016020908152604091829020548251606081018452602a81527f53656e646572206e6f7420617574686f72697a656420746f2063616c6c207468928101929092527f6973206d6574686f642e00000000000000000000000000000000000000000000928201929092529060ff1615156109c05760405160e560020a62461bcd02815260040161026291906113c5565b506104ed85858080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050848484610ae8565b60025b90565b60016020526000908152604090205460ff1681565b60606002805480602002602001604051908101604052809291908181526020018280548015610a7257602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610a54575b5050505050905090565b60005433600160a060020a03908116911614610aad5760405160e560020a62461bcd028152600401610262906113d6565b600160a060020a03811615610ae5576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b600080600260ff16866000815181101515610aff57fe5b90602001015160f860020a900460f860020a0260f860020a900460ff1614606060405190810160405280603281526020017f50726f787920696420696e206d6574616461746120646f6573206e6f74206d6181526020017f74636820746869732070726f78792069642e0000000000000000000000000000815250901515610b9d5760405160e560020a62461bcd02815260040161026291906113c5565b5060408051808201909152601d81527f5472616e7366657220616d6f756e74206d75737420657175616c20312e000000602082015260018414610bf65760405160e560020a62461bcd02815260040161026291906113c5565b50855160408051606081018252602281527f4d65746164617461206d75737420686176652061206c656e677468206f66203560208201527f332e0000000000000000000000000000000000000000000000000000000000009181019190915290603514610c795760405160e560020a62461bcd02815260040161026291906113c5565b50610c85866001610d18565b9150610c92866015610dbf565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152909150600160a060020a038316906323b872dd90610cde9088908890869060040161137e565b600060405180830381600087803b158015610cf857600080fd5b505af1158015610d0c573d6000803e3d6000fd5b50505050505050505050565b60008160140183511015606060405190810160405280602b81526020017f4c656e677468206d7573742062652067726561746572207468616e206f72206581526020017f7175616c20746f2032302e000000000000000000000000000000000000000000815250901515610da25760405160e560020a62461bcd02815260040161026291906113c5565b50506014818301810151910190600160a060020a03165b92915050565b6000610dcb8383610dd2565b9392505050565b60008160200183511015606060405190810160405280602b81526020017f4c656e677468206d7573742062652067726561746572207468616e206f72206581526020017f7175616c20746f2033322e000000000000000000000000000000000000000000815250901515610e5c5760405160e560020a62461bcd02815260040161026291906113c5565b5050016020015190565b815481835581811115610e8a57600083815260209020610e8a918101908301610e8f565b505050565b610a0291905b80821115610ea95760008155600101610e95565b5090565b6000610dcb823561146e565b6000601f82018313610eca57600080fd5b8135610edd610ed88261141b565b6113f4565b91508181835260208401935060208101905083856020840282011115610f0257600080fd5b60005b83811015610f2e5781610f188882610ead565b8452506020928301929190910190600101610f05565b5050505092915050565b6000601f82018313610f4957600080fd5b8135610f57610ed88261141b565b81815260209384019390925082018360005b83811015610f2e5781358601610f7f888261104e565b8452506020928301929190910190600101610f69565b6000601f82018313610fa657600080fd5b8135610fb4610ed88261141b565b91508181835260208401935060208101905083856020840282011115610fd957600080fd5b60005b83811015610f2e5781610fef888261109d565b8452506020928301929190910190600101610fdc565b600080601f8301841361101757600080fd5b50813567ffffffffffffffff81111561102f57600080fd5b60208301915083600182028301111561104757600080fd5b9250929050565b6000601f8201831361105f57600080fd5b813561106d610ed88261143c565b9150808252602083016020830185838301111561108957600080fd5b611094838284611485565b50505092915050565b6000610dcb8235610a02565b6000602082840312156110bb57600080fd5b60006110c78484610ead565b949350505050565b600080604083850312156110e257600080fd5b60006110ee8585610ead565b92505060206110ff8582860161109d565b9150509250929050565b6000806000806080858703121561111f57600080fd5b843567ffffffffffffffff81111561113657600080fd5b61114287828801610f38565b945050602085013567ffffffffffffffff81111561115f57600080fd5b61116b87828801610eb9565b935050604085013567ffffffffffffffff81111561118857600080fd5b61119487828801610eb9565b925050606085013567ffffffffffffffff8111156111b157600080fd5b6111bd87828801610f95565b91505092959194509250565b6000806000806000608086880312156111e157600080fd5b853567ffffffffffffffff8111156111f857600080fd5b61120488828901611005565b9550955050602061121788828901610ead565b935050604061122888828901610ead565b92505060606112398882890161109d565b9150509295509295909350565b60006020828403121561125857600080fd5b60006110c7848461109d565b61126d8161146e565b82525050565b600061127e8261146a565b80845260208401935061129083611464565b60005b828110156112c0576112a6868351611264565b6112af82611464565b602096909601959150600101611293565b5093949350505050565b61126d8161147a565b60006112de8261146a565b8084526112f2816020860160208601611491565b6112fb816114c1565b9093016020019392505050565b603381527f4f6e6c7920636f6e7472616374206f776e657220697320616c6c6f776564207460208201527f6f2063616c6c2074686973206d6574686f642e00000000000000000000000000604082015260600190565b61126d81610a02565b61126d8161147f565b60208101610db98284611264565b6060810161138c8286611264565b6113996020830185611264565b6110c7604083018461135e565b60208082528101610dcb8184611273565b60208101610db982846112ca565b60208082528101610dcb81846112d3565b60208082528101610db981611308565b60208101610db98284611367565b60405181810167ffffffffffffffff8111828210171561141357600080fd5b604052919050565b600067ffffffffffffffff82111561143257600080fd5b5060209081020190565b600067ffffffffffffffff82111561145357600080fd5b506020601f91909101601f19160190565b60200190565b5190565b600160a060020a031690565b151590565b60ff1690565b82818337506000910152565b60005b838110156114ac578181015183820152602001611494565b838111156114bb576000848401525b50505050565b601f01601f1916905600a265627a7a72305820691f241928f76b9b2746c984ebb8e0e32d04102826dbc57fcbb30320fc9fcb9c6c6578706572696d656e74616cf50037",
                "opcodes":
                    "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAE JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x42F1181E DUP2 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x494503D4 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x563C875D EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x70712939 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x9AD26744 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xA85E59E4 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xAE25532E EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xD39DE6E9 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x211 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x231 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x6F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x10CF JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x921 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x13B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x13A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x26B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP1 PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH32 0x546172676574206D757374206E6F7420616C726561647920626520617574686F SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x72697A65642E0000000000000000000000000000000000000000000000000000 SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP4 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 OR SWAP1 SSTORE MLOAD CALLER SWAP1 SWAP4 AND SWAP3 PUSH32 0x3147867C59D17E8FA9D522465651D44AAE0A9E38F902F3475B97E58072F0ED4C SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x3B7 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH32 0x53656E646572206E6F7420617574686F72697A656420746F2063616C6C207468 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x6973206D6574686F642E00000000000000000000000000000000000000000000 SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x46E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4E5 DUP6 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x48E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4A6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4BE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x474 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x526 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP1 PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH32 0x5461726765742061646472657373206D75737420626520617574686F72697A65 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x642E000000000000000000000000000000000000000000000000000000000000 SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x6B5 JUMPI DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x60B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x6AD JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x638 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x65E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x6A7 SWAP1 DUP3 PUSH2 0xE66 JUMP JUMPDEST POP PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x5E8 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0x1F32C1B084E2DE0713B8FB16BD46BB9DF710A3DBEAE2F3CA93AF46E016DCC6B0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH32 0x53706563696669656420617272617920696E646578206973206F7574206F6620 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x626F756E64732E00000000000000000000000000000000000000000000000000 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 LT PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x7A4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH32 0x4164647265737320666F756E6420617420696E64657820646F6573206E6F7420 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x6D617463682074617267657420616464726573732E0000000000000000000000 SWAP1 DUP4 ADD MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND EQ PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x86D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x893 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x8DC SWAP1 DUP3 PUSH2 0xE66 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0x1F32C1B084E2DE0713B8FB16BD46BB9DF710A3DBEAE2F3CA93AF46E016DCC6B0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH32 0x53656E646572206E6F7420617574686F72697A656420746F2063616C6C207468 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x6973206D6574686F642E00000000000000000000000000000000000000000000 SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x9C0 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP PUSH2 0x4ED DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP DUP5 DUP5 DUP5 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x2 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA72 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA54 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xAAD JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP1 PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0xAE5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0xFF AND DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xAFF JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xF8 PUSH1 0x2 EXP MUL PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND EQ PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50726F787920696420696E206D6574616461746120646F6573206E6F74206D61 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x74636820746869732070726F78792069642E0000000000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xB9D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D75737420657175616C20312E000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP5 EQ PUSH2 0xBF6 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP DUP6 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH32 0x4D65746164617461206D75737420686176652061206C656E677468206F662035 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x332E000000000000000000000000000000000000000000000000000000000000 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH1 0x35 EQ PUSH2 0xC79 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP PUSH2 0xC85 DUP7 PUSH1 0x1 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH2 0xC92 DUP7 PUSH1 0x15 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xCDE SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x137E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x14 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7175616C20746F2032302E000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xDA2 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP POP PUSH1 0x14 DUP2 DUP4 ADD DUP2 ADD MLOAD SWAP2 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCB DUP4 DUP4 PUSH2 0xDD2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7175616C20746F2033322E000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xE5C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST POP POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0xE8A JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0xE8A SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0xE8F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA02 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE95 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCB DUP3 CALLDATALOAD PUSH2 0x146E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xECA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEDD PUSH2 0xED8 DUP3 PUSH2 0x141B JUMP JUMPDEST PUSH2 0x13F4 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0xF02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF2E JUMPI DUP2 PUSH2 0xF18 DUP9 DUP3 PUSH2 0xEAD JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF05 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xF49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF57 PUSH2 0xED8 DUP3 PUSH2 0x141B JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 POP DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF2E JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0xF7F DUP9 DUP3 PUSH2 0x104E JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xFA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFB4 PUSH2 0xED8 DUP3 PUSH2 0x141B JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0xFD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF2E JUMPI DUP2 PUSH2 0xFEF DUP9 DUP3 PUSH2 0x109D JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFDC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0x1017 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x102F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1047 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x105F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x106D PUSH2 0xED8 DUP3 PUSH2 0x143C JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1089 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1094 DUP4 DUP3 DUP5 PUSH2 0x1485 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCB DUP3 CALLDATALOAD PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10C7 DUP5 DUP5 PUSH2 0xEAD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10EE DUP6 DUP6 PUSH2 0xEAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10FF DUP6 DUP3 DUP7 ADD PUSH2 0x109D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x111F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1142 DUP8 DUP3 DUP9 ADD PUSH2 0xF38 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x115F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x116B DUP8 DUP3 DUP9 ADD PUSH2 0xEB9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1194 DUP8 DUP3 DUP9 ADD PUSH2 0xEB9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11BD DUP8 DUP3 DUP9 ADD PUSH2 0xF95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1204 DUP9 DUP3 DUP10 ADD PUSH2 0x1005 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 PUSH2 0x1217 DUP9 DUP3 DUP10 ADD PUSH2 0xEAD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1228 DUP9 DUP3 DUP10 ADD PUSH2 0xEAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1239 DUP9 DUP3 DUP10 ADD PUSH2 0x109D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10C7 DUP5 DUP5 PUSH2 0x109D JUMP JUMPDEST PUSH2 0x126D DUP2 PUSH2 0x146E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x127E DUP3 PUSH2 0x146A JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH2 0x1290 DUP4 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x12C0 JUMPI PUSH2 0x12A6 DUP7 DUP4 MLOAD PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x12AF DUP3 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x20 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 POP PUSH1 0x1 ADD PUSH2 0x1293 JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x126D DUP2 PUSH2 0x147A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DE DUP3 PUSH2 0x146A JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x12F2 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x12FB DUP2 PUSH2 0x14C1 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x33 DUP2 MSTORE PUSH32 0x4F6E6C7920636F6E7472616374206F776E657220697320616C6C6F7765642074 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F2063616C6C2074686973206D6574686F642E00000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0x126D DUP2 PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x126D DUP2 PUSH2 0x147F JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xDB9 DUP3 DUP5 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x138C DUP3 DUP7 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x1399 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x10C7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xDCB DUP2 DUP5 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xDB9 DUP3 DUP5 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xDCB DUP2 DUP5 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xDB9 DUP2 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xDB9 DUP3 DUP5 PUSH2 0x1367 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14AC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1494 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x14BB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH10 0x1F241928F76B9B2746C9 DUP5 0xeb 0xb8 0xe0 0xe3 0x2d DIV LT 0x28 0x26 0xdb 0xc5 PUSH32 0xCBB30320FC9FCB9C6C6578706572696D656E74616CF500370000000000000000 ",
                "sourceMap":
                    "802:1825:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1650:318:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1650:318:2;;;;;;;;;;;1535:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1535:28:2;;;;;;;;;;;;;;;;;;;;;;;;;1691:438:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1691:438:1;;;;;;;;;2082:542:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2082:542:2;;;;;;;;;292:20:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:20:12;;;;2797:498:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2797:498:2;;;;;;;;;1042:290:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1042:290:1;;;;;;;;;2513:112:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2513:112:0;;;;;;;;;;;;1486:43:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1486:43:2;;;;;;;;;;;;;;;;;3392:138;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3392:138:2;;;;;;;;;;;;566:167:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;566:167:12;;;;;;;;;1650:318:2;460:5:12;;446:10;-1:-1:-1;;;;;446:19:12;;;460:5;;446:19;425:117;;;;-1:-1:-1;;;;;425:117:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1767:18:2;;;;;;:10;:18;;;;;;;;;;1799:25;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:18;;1766:19;1745:89;;;;-1:-1:-1;;;;;1745:89:2;;;;;;;;;;-1:-1:-1;;;;;;1845:18:2;;;;;;;1866:4;1845:18;;;;;;;;:25;;-1:-1:-1;;1845:25:2;;;;;1880:11;27:10:-1;;23:18;;;45:23;;1880:24:2;;;;;;;;-1:-1:-1;;1880:24:2;;;;;1919:42;1950:10;1919:42;;;;;;1845:18;1919:42;1650:318;:::o;1535:28::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1535:28:2;;-1:-1:-1;1535:28:2;:::o;1691:438:1:-;-1:-1:-1;;;;;1406:10:2;1395:22;1908:9:1;1395:22:2;;;:10;:22;;;;;;;;;1431:21;;;;;;;;;;;;;;;;;;;;;;;;;;1395:22;;1374:88;;;;;;-1:-1:-1;;;;;1374:88:2;;;;;;;;;;;1920:1:1;1908:13;;1903:220;1927:13;:20;1923:1;:24;1903:220;;;1968:144;2006:13;2020:1;2006:16;;;;;;;;;;;;;;;;;;2040:4;2045:1;2040:7;;;;;;;;;;;;;;;;;;2065:2;2068:1;2065:5;;;;;;;;;;;;;;;;;;2088:7;2096:1;2088:10;;;;;;;;;;;;;;;;;;1968:20;:144::i;:::-;1949:3;;1903:220;;;1691:438;;;;;:::o;2082:542:2:-;2315:6;460:5:12;;446:10;-1:-1:-1;;;;;446:19:12;;;460:5;;446:19;425:117;;;;-1:-1:-1;;;;;425:117:12;;;;;;;;;-1:-1:-1;;;;;2201:18:2;;;;;;:10;:18;;;;;;;;;;2233:21;;;;;;;;;;;;;;;;;;;;;;;;;;;2201:18;;2180:84;;;;;;-1:-1:-1;;;;;2180:84:2;;;;;;;;;;-1:-1:-1;;;;;;;2282:18:2;;;;;;:10;:18;;;;;2275:25;;-1:-1:-1;;2275:25:2;;;2310:249;2331:11;:18;2327:22;;2310:249;;;2392:6;-1:-1:-1;;;;;2374:24:2;:11;2386:1;2374:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2374:14:2;:24;2370:179;;;2435:11;2447:18;;-1:-1:-1;;2447:22:2;;;2435:35;;;;;;;;;;;;;;;;2418:11;:14;;-1:-1:-1;;;;;2435:35:2;;;;2430:1;;2418:14;;;;;;;;;;;;;;;:52;;-1:-1:-1;;2418:52:2;-1:-1:-1;;;;;2418:52:2;;;;;;;;;;2488:11;:23;;-1:-1:-1;;2488:23:2;;;;;;:::i;:::-;;2529:5;;2370:179;2351:3;;2310:249;;;2606:10;-1:-1:-1;;;;;2573:44:2;2598:6;-1:-1:-1;;;;;2573:44:2;;;;;;;;;;;2082:542;;:::o;292:20:12:-;;;-1:-1:-1;;;;;292:20:12;;:::o;2797:498:2:-;2928:11;:18;2960:19;;;;;;;;;;;;;;;;;;;;;;;;;2920:26;;2899:90;;;;-1:-1:-1;;;;;2899:90:2;;;;;;;;;;;3042:6;-1:-1:-1;;;;;3020:28:2;:11;3032:5;3020:18;;;;;;;;;;;;;;;;;;;;;3062:22;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3020:18:2;;;:28;2999:95;;;;-1:-1:-1;;;;;2999:95:2;;;;;;;;;;-1:-1:-1;;;;;;3112:18:2;;;;;;:10;:18;;;;;3105:25;;-1:-1:-1;;3105:25:2;;;3161:11;3173:18;;-1:-1:-1;;3173:22:2;;;3161:35;;;;;;;;;;;;;;;;3140:11;:18;;-1:-1:-1;;;;;3161:35:2;;;;3152:5;;3140:18;;;;;;;;;;;;;;;:56;;-1:-1:-1;;3140:56:2;-1:-1:-1;;;;;3140:56:2;;;;;;;;;;3206:11;:23;;-1:-1:-1;;3206:23:2;;;;;;:::i;:::-;;3277:10;-1:-1:-1;;;;;3244:44:2;3269:6;-1:-1:-1;;;;;3244:44:2;;;;;;;;;;;2797:498;;:::o;1042:290:1:-;-1:-1:-1;;;;;1406:10:2;1395:22;;;;;:10;:22;;;;;;;;;;1431:21;;;;;;;;;;;;;;;;;;;;;;;;;;;1395:22;;1374:88;;;;;;-1:-1:-1;;;;;1374:88:2;;;;;;;;;;;1214:111:1;1248:13;;1214:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1275:4;1293:2;1309:6;1214:20;:111::i;2513:112:0:-;941:1;2513:112;;:::o;1486:43:2:-;;;;;;;;;;;;;;;:::o;3392:138::-;3473:9;3512:11;3505:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3505:18:2;;;;;;;;;;;;;;;;;;;;;;;3392:138;:::o;566:167:12:-;460:5;;446:10;-1:-1:-1;;;;;446:19:12;;;460:5;;446:19;425:117;;;;-1:-1:-1;;;;;425:117:12;;;;;;;;;-1:-1:-1;;;;;662:22:12;;;658:69;;700:5;:16;;-1:-1:-1;;700:16:12;-1:-1:-1;;;;;700:16:12;;;;;658:69;566:167;:::o;1478:937:0:-;2066:13;2121:15;941:1;1712:35;;1718:13;1732:1;1718:16;;;;;;;;;;;;;;;-1:-1:-1;;;1718:16:0;;-1:-1:-1;;;1718:16:0;-1:-1:-1;;;1712:23:0;;:35;;;1761:17;;;;;;;;;;;;;;;;;;;;;;;1691:97;;;;;;;-1:-1:-1;;;;;1691:97:0;;;;;;;;;;-1:-1:-1;1891:23:0;;;;;;;;;;;;;;;;;1876:1;1866:11;;1845:79;;;;-1:-1:-1;;;;;1845:79:0;;;;;;;;;;-1:-1:-1;1983:20:0;;2023:23;;;;;;;;;;;;;;;;;;;;;;;;;2007:2;1983:26;1962:94;;;;-1:-1:-1;;;;;1962:94:0;;;;;;;;;;;2082:29;2094:13;2109:1;2082:11;:29::i;:::-;2066:45;;2139:30;2151:13;2166:2;2139:11;:30::i;:::-;2358:50;;;;;2121:48;;-1:-1:-1;;;;;;2358:31:0;;;;;:50;;2390:4;;2396:2;;2121:48;;2358:50;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2358:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2358:50:0;;;;1478:937;;;;;;:::o;2158:864:10:-;2274:14;2337:5;2345:2;2337:10;2325:1;:8;:22;;2389;;;;;;;;;;;;;;;;;;;;;;;2304:117;;;;;;;-1:-1:-1;;;;;2304:117:10;;;;;;;;;;-1:-1:-1;;2669:2:10;2924:13;;;;;2918:20;2660:11;;;-1:-1:-1;;;;;2914:69:10;2158:864;;;;;:::o;6274:190::-;6390:14;6435:21;6447:1;6450:5;6435:11;:21::i;:::-;6427:30;6274:190;-1:-1:-1;;;6274:190:10:o;4902:467::-;5018:14;5081:5;5089:2;5081:10;5069:1;:8;:22;;5105;;;;;;;;;;;;;;;;;;;;;;;5048:89;;;;;;;-1:-1:-1;;;;;5048:89:10;;;;;;;;;;-1:-1:-1;;5316:13:10;5218:2;5316:13;5310:20;;4902:467::o;802:1825:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;5:118:-1;;72:46;110:6;97:20;72:46;;148:707;;258:4;246:17;;242:27;-1:-1;232:2;;283:1;280;273:12;232:2;320:6;307:20;342:80;357:64;414:6;357:64;;;342:80;;;333:89;;439:5;464:6;457:5;450:21;494:4;486:6;482:17;472:27;;516:4;511:3;507:14;500:21;;569:6;616:3;608:4;600:6;596:17;591:3;587:27;584:36;581:2;;;633:1;630;623:12;581:2;658:1;643:206;668:6;665:1;662:13;643:206;;;726:3;748:37;781:3;769:10;748:37;;;736:50;;-1:-1;809:4;800:14;;;;828;;;;;690:1;683:9;643:206;;;647:14;225:630;;;;;;;;879:693;;994:4;982:17;;978:27;-1:-1;968:2;;1019:1;1016;1009:12;968:2;1056:6;1043:20;1078:85;1093:69;1155:6;1093:69;;1078:85;1191:21;;;1235:4;1223:17;;;;1069:94;;-1:-1;1248:14;;1223:17;1343:1;1328:238;1353:6;1350:1;1347:13;1328:238;;;1436:3;1423:17;1415:6;1411:30;1460:42;1498:3;1486:10;1460:42;;;1448:55;;-1:-1;1526:4;1517:14;;;;1545;;;;;1375:1;1368:9;1328:238;;1598:707;;1708:4;1696:17;;1692:27;-1:-1;1682:2;;1733:1;1730;1723:12;1682:2;1770:6;1757:20;1792:80;1807:64;1864:6;1807:64;;1792:80;1783:89;;1889:5;1914:6;1907:5;1900:21;1944:4;1936:6;1932:17;1922:27;;1966:4;1961:3;1957:14;1950:21;;2019:6;2066:3;2058:4;2050:6;2046:17;2041:3;2037:27;2034:36;2031:2;;;2083:1;2080;2073:12;2031:2;2108:1;2093:206;2118:6;2115:1;2112:13;2093:206;;;2176:3;2198:37;2231:3;2219:10;2198:37;;;2186:50;;-1:-1;2259:4;2250:14;;;;2278;;;;;2140:1;2133:9;2093:206;;2327:335;;;2434:4;2422:17;;2418:27;-1:-1;2408:2;;2459:1;2456;2449:12;2408:2;-1:-1;2479:20;;2519:18;2508:30;;2505:2;;;2551:1;2548;2541:12;2505:2;2585:4;2577:6;2573:17;2561:29;;2635:3;2628;2620:6;2616:16;2606:8;2602:31;2599:40;2596:2;;;2652:1;2649;2642:12;2596:2;2401:261;;;;;;2671:432;;2761:4;2749:17;;2745:27;-1:-1;2735:2;;2786:1;2783;2776:12;2735:2;2823:6;2810:20;2845:60;2860:44;2897:6;2860:44;;2845:60;2836:69;;2925:6;2918:5;2911:21;2961:4;2953:6;2949:17;2994:4;2987:5;2983:16;3029:3;3020:6;3015:3;3011:16;3008:25;3005:2;;;3046:1;3043;3036:12;3005:2;3056:41;3090:6;3085:3;3080;3056:41;;;2728:375;;;;;;;;3111:118;;3178:46;3216:6;3203:20;3178:46;;3236:241;;3340:2;3328:9;3319:7;3315:23;3311:32;3308:2;;;3356:1;3353;3346:12;3308:2;3391:1;3408:53;3453:7;3433:9;3408:53;;;3398:63;3302:175;-1:-1;;;;3302:175;3484:366;;;3605:2;3593:9;3584:7;3580:23;3576:32;3573:2;;;3621:1;3618;3611:12;3573:2;3656:1;3673:53;3718:7;3698:9;3673:53;;;3663:63;;3635:97;3763:2;3781:53;3826:7;3817:6;3806:9;3802:22;3781:53;;;3771:63;;3742:98;3567:283;;;;;;3857:1171;;;;;4117:3;4105:9;4096:7;4092:23;4088:33;4085:2;;;4134:1;4131;4124:12;4085:2;4169:31;;4220:18;4209:30;;4206:2;;;4252:1;4249;4242:12;4206:2;4272:83;4347:7;4338:6;4327:9;4323:22;4272:83;;;4262:93;;4148:213;4420:2;4409:9;4405:18;4392:32;4444:18;4436:6;4433:30;4430:2;;;4476:1;4473;4466:12;4430:2;4496:78;4566:7;4557:6;4546:9;4542:22;4496:78;;;4486:88;;4371:209;4639:2;4628:9;4624:18;4611:32;4663:18;4655:6;4652:30;4649:2;;;4695:1;4692;4685:12;4649:2;4715:78;4785:7;4776:6;4765:9;4761:22;4715:78;;;4705:88;;4590:209;4858:2;4847:9;4843:18;4830:32;4882:18;4874:6;4871:30;4868:2;;;4914:1;4911;4904:12;4868:2;4934:78;5004:7;4995:6;4984:9;4980:22;4934:78;;;4924:88;;4809:209;4079:949;;;;;;;;5035:741;;;;;;5209:3;5197:9;5188:7;5184:23;5180:33;5177:2;;;5226:1;5223;5216:12;5177:2;5261:31;;5312:18;5301:30;;5298:2;;;5344:1;5341;5334:12;5298:2;5372:64;5428:7;5419:6;5408:9;5404:22;5372:64;;;5354:82;;;;5240:202;5473:2;5491:53;5536:7;5527:6;5516:9;5512:22;5491:53;;;5481:63;;5452:98;5581:2;5599:53;5644:7;5635:6;5624:9;5620:22;5599:53;;;5589:63;;5560:98;5689:2;5707:53;5752:7;5743:6;5732:9;5728:22;5707:53;;;5697:63;;5668:98;5171:605;;;;;;;;;5783:241;;5887:2;5875:9;5866:7;5862:23;5858:32;5855:2;;;5903:1;5900;5893:12;5855:2;5938:1;5955:53;6000:7;5980:9;5955:53;;6031:110;6104:31;6129:5;6104:31;;;6099:3;6092:44;6086:55;;;6179:590;;6314:54;6362:5;6314:54;;;6386:6;6381:3;6374:19;6410:4;6405:3;6401:14;6394:21;;6455:56;6505:5;6455:56;;;6532:1;6517:230;6542:6;6539:1;6536:13;6517:230;;;6582:53;6631:3;6622:6;6616:13;6582:53;;;6652:60;6705:6;6652:60;;;6735:4;6726:14;;;;;6642:70;-1:-1;6564:1;6557:9;6517:230;;;-1:-1;6760:3;;6293:476;-1:-1;;;;6293:476;6777:101;6844:28;6866:5;6844:28;;6885:292;;6983:35;7012:5;6983:35;;;7035:6;7030:3;7023:19;7047:63;7103:6;7096:4;7091:3;7087:14;7080:4;7073:5;7069:16;7047:63;;;7142:29;7164:6;7142:29;;;7122:50;;;7135:4;7122:50;;6963:214;-1:-1;;;6963:214;7185:397;7340:2;7328:15;;7377:66;7372:2;7363:12;;7356:88;7478:66;7473:2;7464:12;;7457:88;7573:2;7564:12;;7321:261;7590:110;7663:31;7688:5;7663:31;;7707:104;7776:29;7799:5;7776:29;;7818:193;7926:2;7911:18;;7940:61;7915:9;7974:6;7940:61;;8018:395;8182:2;8167:18;;8196:61;8171:9;8230:6;8196:61;;;8268:62;8326:2;8315:9;8311:18;8302:6;8268:62;;;8341;8399:2;8388:9;8384:18;8375:6;8341:62;;8420:341;8578:2;8592:47;;;8563:18;;8653:98;8563:18;8737:6;8653:98;;8768:181;8870:2;8855:18;;8884:55;8859:9;8912:6;8884:55;;8956:273;9080:2;9094:47;;;9065:18;;9155:64;9065:18;9205:6;9155:64;;9236:387;9417:2;9431:47;;;9402:18;;9492:121;9402:18;9492:121;;9630:185;9734:2;9719:18;;9748:57;9723:9;9778:6;9748:57;;9822:256;9884:2;9878:9;9910:17;;;9985:18;9970:34;;10006:22;;;9967:62;9964:2;;;10042:1;10039;10032:12;9964:2;10058;10051:22;9862:216;;-1:-1;9862:216;10085:258;;10244:18;10236:6;10233:30;10230:2;;;10276:1;10273;10266:12;10230:2;-1:-1;10305:4;10293:17;;;10323:15;;10167:176;10885:254;;11024:18;11016:6;11013:30;11010:2;;;11056:1;11053;11046:12;11010:2;-1:-1;11129:4;11100;11077:17;;;;-1:-1;;11073:33;11119:15;;10947:192;11148:121;11257:4;11245:17;;11226:43;11278:107;11368:12;;11352:33;11618:128;-1:-1;;;;;11687:54;;11670:76;11753:92;11826:13;11819:21;;11802:43;11938:88;12016:4;12005:16;;11988:38;12255:145;12336:6;12331:3;12326;12313:30;-1:-1;12392:1;12374:16;;12367:27;12306:94;12409:268;12474:1;12481:101;12495:6;12492:1;12489:13;12481:101;;;12562:11;;;12556:18;12543:11;;;12536:39;12517:2;12510:10;12481:101;;;12597:6;12594:1;12591:13;12588:2;;;12662:1;12653:6;12648:3;12644:16;12637:27;12588:2;12458:219;;;;;12685:97;12773:2;12753:14;-1:-1;;12749:28;;12733:49"
            }
        }
    },
    "sources": {
        "current/protocol/AssetProxy/ERC721Proxy.sol": {
            "id": 0
        },
        "current/protocol/AssetProxy/MixinAssetProxy.sol": {
            "id": 1
        },
        "current/protocol/AssetProxy/MixinAuthorizable.sol": {
            "id": 2
        },
        "current/protocol/AssetProxy/interfaces/IAssetProxy.sol": {
            "id": 3
        },
        "current/protocol/AssetProxy/interfaces/IAuthorizable.sol": {
            "id": 4
        },
        "current/protocol/AssetProxy/mixins/MAssetProxy.sol": {
            "id": 5
        },
        "current/protocol/AssetProxy/mixins/MAuthorizable.sol": {
            "id": 6
        },
        "current/tokens/ERC721Token/ERC721Token.sol": {
            "id": 7
        },
        "current/tokens/ERC721Token/IERC721Receiver.sol": {
            "id": 8
        },
        "current/tokens/ERC721Token/IERC721Token.sol": {
            "id": 9
        },
        "current/utils/LibBytes/LibBytes.sol": {
            "id": 10
        },
        "current/utils/Ownable/IOwnable.sol": {
            "id": 11
        },
        "current/utils/Ownable/Ownable.sol": {
            "id": 12
        },
        "current/utils/SafeMath/SafeMath.sol": {
            "id": 13
        }
    },
    "sourceCodes": {
        "current/protocol/AssetProxy/ERC721Proxy.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\nimport \"../../utils/LibBytes/LibBytes.sol\";\nimport \"../../tokens/ERC721Token/ERC721Token.sol\";\nimport \"./MixinAssetProxy.sol\";\nimport \"./MixinAuthorizable.sol\";\n\ncontract ERC721Proxy is\n    LibBytes,\n    MixinAssetProxy,\n    MixinAuthorizable\n{\n\n    // Id of this proxy.\n    uint8 constant PROXY_ID = 2;\n\n    // Revert reasons\n    string constant INVALID_TRANSFER_AMOUNT = \"Transfer amount must equal 1.\";\n    string constant INVALID_METADATA_LENGTH = \"Metadata must have a length of 53.\";\n    string constant PROXY_ID_MISMATCH = \"Proxy id in metadata does not match this proxy id.\";\n\n    /// @dev Internal version of `transferFrom`.\n    /// @param assetMetadata Encoded byte array.\n    /// @param from Address to transfer asset from.\n    /// @param to Address to transfer asset to.\n    /// @param amount Amount of asset to transfer.\n    function transferFromInternal(\n        bytes memory assetMetadata,\n        address from,\n        address to,\n        uint256 amount)\n        internal\n    {\n        // Data must be intended for this proxy.\n        require(\n            uint8(assetMetadata[0]) == PROXY_ID,\n            PROXY_ID_MISMATCH\n        );\n\n        // There exists only 1 of each token.\n        require(\n            amount == 1,\n            INVALID_TRANSFER_AMOUNT\n        );\n\n        // Decode metadata\n        require(\n            assetMetadata.length == 53,\n            INVALID_METADATA_LENGTH\n        );\n        address token = readAddress(assetMetadata, 1);\n        uint256 tokenId = readUint256(assetMetadata, 21);\n\n        // Transfer token.\n        // Either succeeds or throws.\n        // @TODO: Call safeTransferFrom if there is additional\n        //        data stored in `assetMetadata`.\n        ERC721Token(token).transferFrom(from, to, tokenId);\n    }\n\n    /// @dev Gets the proxy id associated with the proxy address.\n    /// @return Proxy id.\n    function getProxyId()\n        external\n        view\n        returns (uint8)\n    {\n        return PROXY_ID;\n    }\n}\n",
        "current/protocol/AssetProxy/MixinAssetProxy.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\nimport \"./mixins/MAssetProxy.sol\";\nimport \"./mixins/MAuthorizable.sol\";\n\ncontract MixinAssetProxy is \n    MAuthorizable,\n    MAssetProxy\n{\n\n    /// @dev Transfers assets. Either succeeds or throws.\n    /// @param assetMetadata Encoded byte array.\n    /// @param from Address to transfer asset from.\n    /// @param to Address to transfer asset to.\n    /// @param amount Amount of asset to transfer.\n    function transferFrom(\n        bytes assetMetadata,\n        address from,\n        address to,\n        uint256 amount)\n        external\n        onlyAuthorized\n    {\n        transferFromInternal(\n            assetMetadata,\n            from,\n            to,\n            amount\n        );\n    }\n\n    /// @dev Makes multiple transfers of assets. Either succeeds or throws.\n    /// @param assetMetadata Array of byte arrays encoded for the respective asset proxy.\n    /// @param from Array of addresses to transfer assets from.\n    /// @param to Array of addresses to transfer assets to.\n    /// @param amounts Array of amounts of assets to transfer.\n    function batchTransferFrom(\n        bytes[] memory assetMetadata,\n        address[] memory from,\n        address[] memory to,\n        uint256[] memory amounts)\n        public\n        onlyAuthorized\n    {\n        for (uint256 i = 0; i < assetMetadata.length; i++) {\n            transferFromInternal(\n                assetMetadata[i],\n                from[i],\n                to[i],\n                amounts[i]\n            );\n        }\n    }\n}\n",
        "current/protocol/AssetProxy/MixinAuthorizable.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\nimport \"./mixins/MAuthorizable.sol\";\nimport \"../../utils/Ownable/Ownable.sol\";\n\ncontract MixinAuthorizable is\n    Ownable,\n    MAuthorizable\n{\n\n    // Revert reasons\n    string constant SENDER_NOT_AUTHORIZED = \"Sender not authorized to call this method.\";\n    string constant TARGET_NOT_AUTHORIZED = \"Target address must be authorized.\";\n    string constant TARGET_ALREADY_AUTHORIZED = \"Target must not already be authorized.\";\n    string constant INDEX_OUT_OF_BOUNDS = \"Specified array index is out of bounds.\";\n    string constant INDEX_ADDRESS_MISMATCH = \"Address found at index does not match target address.\";\n\n    /// @dev Only authorized addresses can invoke functions with this modifier.\n    modifier onlyAuthorized {\n        require(\n            authorized[msg.sender],\n            SENDER_NOT_AUTHORIZED\n        );\n        _;\n    }\n\n    mapping (address => bool) public authorized;\n    address[] public authorities;\n\n    /// @dev Authorizes an address.\n    /// @param target Address to authorize.\n    function addAuthorizedAddress(address target)\n        external\n        onlyOwner\n    {\n        require(\n            !authorized[target],\n            TARGET_ALREADY_AUTHORIZED\n        );\n\n        authorized[target] = true;\n        authorities.push(target);\n        emit AuthorizedAddressAdded(target, msg.sender);\n    }\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    function removeAuthorizedAddress(address target)\n        external\n        onlyOwner\n    {\n        require(\n            authorized[target],\n            TARGET_NOT_AUTHORIZED\n        );\n\n        delete authorized[target];\n        for (uint i = 0; i < authorities.length; i++) {\n            if (authorities[i] == target) {\n                authorities[i] = authorities[authorities.length - 1];\n                authorities.length -= 1;\n                break;\n            }\n        }\n        emit AuthorizedAddressRemoved(target, msg.sender);\n    }\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    /// @param index Index of target in authorities array.\n    function removeAuthorizedAddressAtIndex(address target, uint256 index)\n        external\n    {\n        require(\n            index < authorities.length,\n            INDEX_OUT_OF_BOUNDS\n        );\n        require(\n            authorities[index] == target,\n            INDEX_ADDRESS_MISMATCH\n        );\n\n        delete authorized[target];\n        authorities[index] = authorities[authorities.length - 1];\n        authorities.length -= 1;\n        emit AuthorizedAddressRemoved(target, msg.sender);\n    }\n\n    /// @dev Gets all authorized addresses.\n    /// @return Array of authorized addresses.\n    function getAuthorizedAddresses()\n        external\n        view\n        returns (address[] memory)\n    {\n        return authorities;\n    }\n}\n",
        "current/protocol/AssetProxy/interfaces/IAssetProxy.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\nimport \"./IAuthorizable.sol\";\n\ncontract IAssetProxy is\n    IAuthorizable\n{\n\n    /// @dev Transfers assets. Either succeeds or throws.\n    /// @param assetMetadata Byte array encoded for the respective asset proxy.\n    /// @param from Address to transfer asset from.\n    /// @param to Address to transfer asset to.\n    /// @param amount Amount of asset to transfer.\n    function transferFrom(\n        bytes assetMetadata,\n        address from,\n        address to,\n        uint256 amount)\n        external;\n    \n    /// @dev Makes multiple transfers of assets. Either succeeds or throws.\n    /// @param assetMetadata Array of byte arrays encoded for the respective asset proxy.\n    /// @param from Array of addresses to transfer assets from.\n    /// @param to Array of addresses to transfer assets to.\n    /// @param amounts Array of amounts of assets to transfer.\n    function batchTransferFrom(\n        bytes[] memory assetMetadata,\n        address[] memory from,\n        address[] memory to,\n        uint256[] memory amounts)\n        public;\n\n    /// @dev Gets the proxy id associated with the proxy address.\n    /// @return Proxy id.\n    function getProxyId()\n        external\n        view\n        returns (uint8);\n}\n\n",
        "current/protocol/AssetProxy/interfaces/IAuthorizable.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\nimport \"../../../utils/Ownable/IOwnable.sol\";\n\ncontract IAuthorizable is\n    IOwnable\n{\n\n    /// @dev Gets all authorized addresses.\n    /// @return Array of authorized addresses.\n    function getAuthorizedAddresses()\n        external\n        view\n        returns (address[]);\n\n    /// @dev Authorizes an address.\n    /// @param target Address to authorize.\n    function addAuthorizedAddress(address target)\n        external;\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    function removeAuthorizedAddress(address target)\n        external;\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    /// @param index Index of target in authorities array.\n    function removeAuthorizedAddressAtIndex(address target, uint256 index)\n        external;\n}\n",
        "current/protocol/AssetProxy/mixins/MAssetProxy.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\nimport \"../interfaces/IAssetProxy.sol\";\n\ncontract MAssetProxy is\n    IAssetProxy\n{\n\n    /// @dev Internal version of `transferFrom`.\n    /// @param assetMetadata Encoded byte array.\n    /// @param from Address to transfer asset from.\n    /// @param to Address to transfer asset to.\n    /// @param amount Amount of asset to transfer.\n    function transferFromInternal(\n        bytes memory assetMetadata,\n        address from,\n        address to,\n        uint256 amount)\n        internal;\n}\n",
        "current/protocol/AssetProxy/mixins/MAuthorizable.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\nimport \"../interfaces/IAuthorizable.sol\";\n\ncontract MAuthorizable is\n    IAuthorizable\n{\n\n    // Event logged when a new address is authorized.\n    event AuthorizedAddressAdded(\n        address indexed target,\n        address indexed caller\n    );\n\n    // Event logged when a currently authorized address is unauthorized.\n    event AuthorizedAddressRemoved(\n        address indexed target,\n        address indexed caller\n    );\n\n    /// @dev Only authorized addresses can invoke functions with this modifier.\n    modifier onlyAuthorized { _; }\n}\n",
        "current/tokens/ERC721Token/ERC721Token.sol":
            "/*\nThe MIT License (MIT)\n\nCopyright (c) 2016 Smart Contract Solutions, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\npragma solidity ^0.4.23;\n\nimport \"./IERC721Token.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"../../utils/SafeMath/SafeMath.sol\";\n\n/**\n * @title ERC721 Non-Fungible Token Standard basic implementation\n * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n * Modified from https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/token/ERC721/ERC721BasicToken.sol\n */\ncontract ERC721Token is\n    IERC721Token,\n    SafeMath\n{\n    // Equals to `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`\n    // which can be also obtained as `ERC721Receiver(0).onERC721Received.selector`\n    bytes4 constant ERC721_RECEIVED = 0xf0b9e5ba;\n\n    // Mapping from token ID to owner\n    mapping (uint256 => address) internal tokenOwner;\n\n    // Mapping from token ID to approved address\n    mapping (uint256 => address) internal tokenApprovals;\n\n    // Mapping from owner to number of owned token\n    mapping (address => uint256) internal ownedTokensCount;\n\n    // Mapping from owner to operator approvals\n    mapping (address => mapping (address => bool)) internal operatorApprovals;\n\n    /**\n    * @dev Guarantees msg.sender is owner of the given token\n    * @param _tokenId uint256 ID of the token to validate its ownership belongs to msg.sender\n    */\n    modifier onlyOwnerOf(uint256 _tokenId) {\n        require(ownerOf(_tokenId) == msg.sender);\n        _;\n    }\n\n    /**\n    * @dev Checks msg.sender can transfer a token, by being owner, approved, or operator\n    * @param _tokenId uint256 ID of the token to validate\n    */\n    modifier canTransfer(uint256 _tokenId) {\n        require(isApprovedOrOwner(msg.sender, _tokenId));\n        _;\n    }\n\n    function ERC721Token(\n        string _name,\n        string _symbol)\n        public\n    {\n        name_ = _name;\n        symbol_ = _symbol;\n    }\n\n    /**\n    * @dev Gets the token name\n    * @return string representing the token name\n    */\n    function name()\n        public\n        view\n        returns (string)\n    {\n        return name_;\n    }\n\n    /**\n    * @dev Gets the token symbol\n    * @return string representing the token symbol\n    */\n    function symbol()\n        public\n        view\n        returns (string)\n    {\n        return symbol_;\n    }\n\n    /**\n    * @dev Gets the balance of the specified address\n    * @param _owner address to query the balance of\n    * @return uint256 representing the amount owned by the passed address\n    */\n    function balanceOf(address _owner)\n        public\n        view\n        returns (uint256)\n    {\n        require(_owner != address(0));\n        return ownedTokensCount[_owner];\n    }\n\n    /**\n    * @dev Gets the owner of the specified token ID\n    * @param _tokenId uint256 ID of the token to query the owner of\n    * @return owner address currently marked as the owner of the given token ID\n    */\n    function ownerOf(uint256 _tokenId)\n        public\n        view\n        returns (address)\n    {\n        address owner = tokenOwner[_tokenId];\n        require(owner != address(0));\n        return owner;\n    }\n\n    /**\n    * @dev Returns whether the specified token exists\n    * @param _tokenId uint256 ID of the token to query the existance of\n    * @return whether the token exists\n    */\n    function exists(uint256 _tokenId)\n        public\n        view\n        returns (bool)\n    {\n        address owner = tokenOwner[_tokenId];\n        return owner != address(0);\n    }\n\n    /**\n    * @dev Approves another address to transfer the given token ID\n    * @dev The zero address indicates there is no approved address.\n    * @dev There can only be one approved address per token at a given time.\n    * @dev Can only be called by the token owner or an approved operator.\n    * @param _to address to be approved for the given token ID\n    * @param _tokenId uint256 ID of the token to be approved\n    */\n    function approve(address _to, uint256 _tokenId)\n        public\n    {\n        address owner = ownerOf(_tokenId);\n        require(_to != owner);\n        require(msg.sender == owner || isApprovedForAll(owner, msg.sender));\n\n        if (getApproved(_tokenId) != address(0) || _to != address(0)) {\n            tokenApprovals[_tokenId] = _to;\n            emit Approval(owner, _to, _tokenId);\n        }\n    }\n\n    /**\n    * @dev Gets the approved address for a token ID, or zero if no address set\n    * @param _tokenId uint256 ID of the token to query the approval of\n    * @return address currently approved for a the given token ID\n    */\n    function getApproved(uint256 _tokenId)\n        public\n        view\n        returns (address)\n    {\n        return tokenApprovals[_tokenId];\n    }\n\n    /**\n    * @dev Sets or unsets the approval of a given operator\n    * @dev An operator is allowed to transfer all tokens of the sender on their behalf\n    * @param _to operator address to set the approval\n    * @param _approved representing the status of the approval to be set\n    */\n    function setApprovalForAll(address _to, bool _approved)\n        public\n    {\n        require(_to != msg.sender);\n        operatorApprovals[msg.sender][_to] = _approved;\n        emit ApprovalForAll(msg.sender, _to, _approved);\n    }\n\n    /**\n    * @dev Tells whether an operator is approved by a given owner\n    * @param _owner owner address which you want to query the approval of\n    * @param _operator operator address which you want to query the approval of\n    * @return bool whether the given operator is approved by the given owner\n    */\n    function isApprovedForAll(address _owner, address _operator)\n        public\n        view\n        returns (bool)\n    {\n        return operatorApprovals[_owner][_operator];\n    }\n\n    /**\n    * @dev Transfers the ownership of a given token ID to another address\n    * @dev Usage of this method is discouraged, use `safeTransferFrom` whenever possible\n    * @dev Requires the msg sender to be the owner, approved, or operator\n    * @param _from current owner of the token\n    * @param _to address to receive the ownership of the given token ID\n    * @param _tokenId uint256 ID of the token to be transferred\n    */\n    function transferFrom(address _from, address _to, uint256 _tokenId)\n        public\n        canTransfer(_tokenId)\n    {\n        require(_from != address(0));\n        require(_to != address(0));\n\n        clearApproval(_from, _tokenId);\n        removeTokenFrom(_from, _tokenId);\n        addTokenTo(_to, _tokenId);\n\n        emit Transfer(_from, _to, _tokenId);\n    }\n\n    /**\n    * @dev Safely transfers the ownership of a given token ID to another address\n    * @dev If the target address is a contract, it must implement `onERC721Received`,\n    *  which is called upon a safe transfer, and return the magic value\n    *  `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`; otherwise,\n    *  the transfer is reverted.\n    * @dev Requires the msg sender to be the owner, approved, or operator\n    * @param _from current owner of the token\n    * @param _to address to receive the ownership of the given token ID\n    * @param _tokenId uint256 ID of the token to be transferred\n    */\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId)\n        public\n        canTransfer(_tokenId)\n    {\n        // solium-disable-next-line arg-overflow\n        safeTransferFrom(_from, _to, _tokenId, \"\");\n    }\n\n    /**\n    * @dev Safely transfers the ownership of a given token ID to another address\n    * @dev If the target address is a contract, it must implement `onERC721Received`,\n    *  which is called upon a safe transfer, and return the magic value\n    *  `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`; otherwise,\n    *  the transfer is reverted.\n    * @dev Requires the msg sender to be the owner, approved, or operator\n    * @param _from current owner of the token\n    * @param _to address to receive the ownership of the given token ID\n    * @param _tokenId uint256 ID of the token to be transferred\n    * @param _data bytes data to send along with a safe transfer check\n    */\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId,\n        bytes _data)\n        public\n        canTransfer(_tokenId)\n    {\n        transferFrom(_from, _to, _tokenId);\n        // solium-disable-next-line arg-overflow\n        require(checkAndCallSafeTransfer(_from, _to, _tokenId, _data));\n    }\n\n    /**\n    * @dev Returns whether the given spender can transfer a given token ID\n    * @param _spender address of the spender to query\n    * @param _tokenId uint256 ID of the token to be transferred\n    * @return bool whether the msg.sender is approved for the given token ID,\n    *  is an operator of the owner, or is the owner of the token\n    */\n    function isApprovedOrOwner(address _spender, uint256 _tokenId)\n        internal\n        view\n        returns (bool)\n    {\n        address owner = ownerOf(_tokenId);\n        return _spender == owner || getApproved(_tokenId) == _spender || isApprovedForAll(owner, _spender);\n    }\n\n    /**\n    * @dev Internal function to mint a new token\n    * @dev Reverts if the given token ID already exists\n    * @param _to The address that will own the minted token\n    * @param _tokenId uint256 ID of the token to be minted by the msg.sender\n    */\n    function _mint(address _to, uint256 _tokenId)\n        internal\n    {\n        require(_to != address(0));\n        addTokenTo(_to, _tokenId);\n        emit Transfer(address(0), _to, _tokenId);\n    }\n\n    /**\n    * @dev Internal function to burn a specific token\n    * @dev Reverts if the token does not exist\n    * @param _tokenId uint256 ID of the token being burned by the msg.sender\n    */\n    function _burn(address _owner, uint256 _tokenId)\n        internal\n    {\n        clearApproval(_owner, _tokenId);\n        removeTokenFrom(_owner, _tokenId);\n        emit Transfer(_owner, address(0), _tokenId);\n    }\n\n    /**\n    * @dev Internal function to clear current approval of a given token ID\n    * @dev Reverts if the given address is not indeed the owner of the token\n    * @param _owner owner of the token\n    * @param _tokenId uint256 ID of the token to be transferred\n    */\n    function clearApproval(address _owner, uint256 _tokenId)\n        internal\n    {\n        require(ownerOf(_tokenId) == _owner);\n        if (tokenApprovals[_tokenId] != address(0)) {\n            tokenApprovals[_tokenId] = address(0);\n            emit Approval(_owner, address(0), _tokenId);\n        }\n    }\n\n    /**\n    * @dev Internal function to add a token ID to the list of a given address\n    * @param _to address representing the new owner of the given token ID\n    * @param _tokenId uint256 ID of the token to be added to the tokens list of the given address\n    */\n    function addTokenTo(address _to, uint256 _tokenId)\n        internal\n    {\n        require(tokenOwner[_tokenId] == address(0));\n        tokenOwner[_tokenId] = _to;\n        ownedTokensCount[_to] = safeAdd(ownedTokensCount[_to], 1);\n    }\n\n    /**\n    * @dev Internal function to remove a token ID from the list of a given address\n    * @param _from address representing the previous owner of the given token ID\n    * @param _tokenId uint256 ID of the token to be removed from the tokens list of the given address\n    */\n    function removeTokenFrom(address _from, uint256 _tokenId)\n        internal\n    {\n        require(ownerOf(_tokenId) == _from);\n        ownedTokensCount[_from] = safeSub(ownedTokensCount[_from], 1);\n        tokenOwner[_tokenId] = address(0);\n    }\n\n    /**\n    * @dev Internal function to invoke `onERC721Received` on a target address\n    * @dev The call is not executed if the target address is not a contract\n    * @param _from address representing the previous owner of the given token ID\n    * @param _to target address that will receive the tokens\n    * @param _tokenId uint256 ID of the token to be transferred\n    * @param _data bytes optional data to send along with the call\n    * @return whether the call correctly returned the expected magic value\n    */\n    function checkAndCallSafeTransfer(\n        address _from,\n        address _to,\n        uint256 _tokenId,\n        bytes _data)\n        internal\n        returns (bool)\n    {\n        if (!isContract(_to)) {\n            return true;\n        }\n        bytes4 retval = IERC721Receiver(_to).onERC721Received(_from, _tokenId, _data);\n        return (retval == ERC721_RECEIVED);\n    }\n\n    function isContract(address addr)\n        internal\n        view\n        returns (bool)\n    {\n        uint256 size;\n        // XXX Currently there is no better way to check if there is a contract in an address\n        // than to check the size of the code at that address.\n        // See https://ethereum.stackexchange.com/a/14016/36603\n        // for more details about how this works.\n        // TODO Check this again before the Serenity release, because all addresses will be\n        // contracts then.\n        assembly { size := extcodesize(addr) }  // solium-disable-line security/no-inline-assembly\n        return size > 0;\n    }\n}",
        "current/tokens/ERC721Token/IERC721Receiver.sol":
            "/*\nThe MIT License (MIT)\n\nCopyright (c) 2016 Smart Contract Solutions, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\npragma solidity ^0.4.23;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n *      rom ERC721 asset contracts.\n * Modified from https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/token/ERC721/ERC721Receiver.sol\n */\ncontract IERC721Receiver {\n    /**\n    * @dev Magic value to be returned upon successful reception of an NFT\n    *  Equals to `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`,\n    *  which can be also obtained as `ERC721Receiver(0).onERC721Received.selector`\n    */\n    bytes4 constant ERC721_RECEIVED = 0xf0b9e5ba;\n\n    /**\n    * @notice Handle the receipt of an NFT\n    * @dev The ERC721 smart contract calls this function on the recipient\n    *  after a `safetransfer`. This function MAY throw to revert and reject the\n    *  transfer. This function MUST use 50,000 gas or less. Return of other\n    *  than the magic value MUST result in the transaction being reverted.\n    *  Note: the contract address is always the message sender.\n    * @param _from The sending address\n    * @param _tokenId The NFT identifier which is being transfered\n    * @param _data Additional data with no specified format\n    * @return `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`\n    */\n    function onERC721Received(\n        address _from,\n        uint256 _tokenId,\n        bytes _data)\n        public\n        returns (bytes4);\n}",
        "current/tokens/ERC721Token/IERC721Token.sol":
            "/*\nThe MIT License (MIT)\n\nCopyright (c) 2016 Smart Contract Solutions, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\npragma solidity ^0.4.23;\n\n/**\n * @title ERC721 Non-Fungible Token Standard basic interface\n * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n * Modified from https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/token/ERC721/ERC721Basic.sol\n */\ncontract IERC721Token {\n    string internal name_;\n    string internal symbol_;\n\n    event Transfer(\n        address indexed _from,\n        address indexed _to,\n        uint256 _tokenId\n    );\n    event Approval(\n        address indexed _owner,\n        address indexed _approved,\n        uint256 _tokenId\n    );\n    event ApprovalForAll(\n        address indexed _owner,\n        address indexed _operator,\n        bool _approved\n    );\n\n    function name()\n        public\n        view\n        returns (string);\n    function symbol()\n        public\n        view\n        returns (string);\n\n    function balanceOf(address _owner)\n        public\n        view\n        returns (uint256 _balance);\n    function ownerOf(uint256 _tokenId)\n        public\n        view\n        returns (address _owner);\n    function exists(uint256 _tokenId)\n        public\n        view\n        returns (bool _exists);\n\n    function approve(address _to, uint256 _tokenId)\n        public;\n    function getApproved(uint256 _tokenId)\n        public\n        view\n        returns (address _operator);\n\n    function setApprovalForAll(address _operator, bool _approved)\n        public;\n    function isApprovedForAll(address _owner, address _operator)\n        public\n        view\n        returns (bool);\n\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId)\n        public;\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId)\n        public;\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId,\n        bytes _data)\n        public;\n}",
        "current/utils/LibBytes/LibBytes.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\ncontract LibBytes {\n\n    // Revert reasons\n    string constant GTE_20_LENGTH_REQUIRED = \"Length must be greater than or equal to 20.\";\n    string constant GTE_32_LENGTH_REQUIRED = \"Length must be greater than or equal to 32.\";\n\n    /// @dev Tests equality of two byte arrays.\n    /// @param lhs First byte array to compare.\n    /// @param rhs Second byte array to compare.\n    /// @return True if arrays are the same. False otherwise.\n    function areBytesEqual(bytes memory lhs, bytes memory rhs)\n        internal\n        pure\n        returns (bool equal)\n    {\n        assembly {\n            // Get the number of words occupied by <lhs>\n            let lenFullWords := div(add(mload(lhs), 0x1F), 0x20)\n\n            // Add 1 to the number of words, to account for the length field\n            lenFullWords := add(lenFullWords, 0x1)\n\n            // Test equality word-by-word.\n            // Terminates early if there is a mismatch.\n            for {let i := 0} lt(i, lenFullWords) {i := add(i, 1)} {\n                let lhsWord := mload(add(lhs, mul(i, 0x20)))\n                let rhsWord := mload(add(rhs, mul(i, 0x20)))\n                equal := eq(lhsWord, rhsWord)\n                if eq(equal, 0) {\n                    // Break\n                    i := lenFullWords\n                }\n            }\n       }\n\n       return equal;\n    }\n\n    /// @dev Reads an address from a position in a byte array.\n    /// @param b Byte array containing an address.\n    /// @param index Index in byte array of address.\n    /// @return address from byte array.\n    function readAddress(\n        bytes memory b,\n        uint256 index)\n        internal\n        pure\n        returns (address result)\n    {\n        require(\n            b.length >= index + 20,  // 20 is length of address\n            GTE_20_LENGTH_REQUIRED\n        ); \n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Read address from array memory\n        assembly {\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 20-byte mask to obtain address\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n        return result;\n    }\n\n    /// @dev Writes an address into a specific position in a byte array.\n    /// @param b Byte array to insert address into.\n    /// @param index Index in byte array of address.\n    /// @param input Address to put into byte array.\n    function writeAddress(\n        bytes memory b,\n        uint256 index,\n        address input)\n        internal\n        pure\n    {\n        require(\n            b.length >= index + 20,  // 20 is length of address\n            GTE_20_LENGTH_REQUIRED\n        ); \n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Store address into array memory\n        assembly {\n            // The address occupies 20 bytes and mstore stores 32 bytes.\n            // First fetch the 32-byte word where we'll be storing the address, then\n            // apply a mask so we have only the bytes in the word that the address will not occupy.\n            // Then combine these bytes with the address and store the 32 bytes back to memory with mstore.\n\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 12-byte mask to obtain extra bytes occupying word of memory where we'll store the address\n            let neighbors := and(mload(add(b, index)), 0xffffffffffffffffffffffff0000000000000000000000000000000000000000)\n\n            // Store the neighbors and address into memory\n            mstore(add(b, index), xor(input, neighbors))\n        }\n    }\n\n    /// @dev Reads a bytes32 value from a position in a byte array.\n    /// @param b Byte array containing a bytes32 value.\n    /// @param index Index in byte array of bytes32 value.\n    /// @return bytes32 value from byte array.\n    function readBytes32(\n        bytes memory b,\n        uint256 index)\n        internal\n        pure\n        returns (bytes32 result)\n    {\n        require(\n            b.length >= index + 32,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            result := mload(add(b, index))\n        }\n        return result;\n    }\n\n    /// @dev Writes a bytes32 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input bytes32 to put into byte array.\n    function writeBytes32(\n        bytes memory b,\n        uint256 index,\n        bytes32 input)\n        internal\n        pure\n    {\n        require(\n            b.length >= index + 32,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            mstore(add(b, index), input)\n        }\n    }\n\n    /// @dev Reads a uint256 value from a position in a byte array.\n    /// @param b Byte array containing a uint256 value.\n    /// @param index Index in byte array of uint256 value.\n    /// @return uint256 value from byte array.\n    function readUint256(\n        bytes memory b,\n        uint256 index)\n        internal\n        pure\n        returns (uint256 result)\n    {\n        return uint256(readBytes32(b, index));\n    }\n\n    /// @dev Writes a uint256 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input uint256 to put into byte array.\n    function writeUint256(\n        bytes memory b,\n        uint256 index,\n        uint256 input)\n        internal\n        pure\n    {\n        writeBytes32(b, index, bytes32(input));\n    }\n}\n",
        "current/utils/Ownable/IOwnable.sol":
            "pragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\n/*\n * Ownable\n *\n * Base contract with an owner.\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\n */\n\ncontract IOwnable {\n    function transferOwnership(address newOwner)\n        public;\n}\n",
        "current/utils/Ownable/Ownable.sol":
            "pragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\n/*\n * Ownable\n *\n * Base contract with an owner.\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\n */\n\nimport \"./IOwnable.sol\";\n\ncontract Ownable is IOwnable {\n    address public owner;\n\n    constructor ()\n        public\n    {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(\n            msg.sender == owner,\n            \"Only contract owner is allowed to call this method.\"\n        );\n        _;\n    }\n\n    function transferOwnership(address newOwner)\n        public\n        onlyOwner\n    {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n}\n",
        "current/utils/SafeMath/SafeMath.sol":
            "pragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\ncontract SafeMath {\n    function safeMul(uint a, uint b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function safeDiv(uint a, uint b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint c = a / b;\n        return c;\n    }\n\n    function safeSub(uint a, uint b)\n        internal\n        pure\n        returns (uint256)\n    {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function safeAdd(uint a, uint b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint c = a + b;\n        assert(c >= a);\n        return c;\n    }\n\n    function max64(uint64 a, uint64 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a >= b ? a : b;\n    }\n\n    function min64(uint64 a, uint64 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a < b ? a : b;\n    }\n\n    function max256(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a >= b ? a : b;\n    }\n\n    function min256(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a < b ? a : b;\n    }\n}\n"
    },
    "sourceTreeHashHex": "0x75cd443fb18865d5c29ea5198d73a03ebdab2b25042e1c31c0ad01567431561a",
    "compiler": {
        "name": "solc",
        "version": "0.4.23",
        "settings": {
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            }
        }
    },
    "networks": {}
}
