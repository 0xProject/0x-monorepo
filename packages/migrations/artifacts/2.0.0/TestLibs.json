{
    "schemaVersion": "2.0.0",
    "contractName": "TestLibs",
    "compilerOutput": {
        "abi": [
            {
                "constant": true,
                "inputs": [
                    {
                        "name": "numerator",
                        "type": "uint256"
                    },
                    {
                        "name": "denominator",
                        "type": "uint256"
                    },
                    {
                        "name": "target",
                        "type": "uint256"
                    }
                ],
                "name": "publicGetPartialAmount",
                "outputs": [
                    {
                        "name": "partialAmount",
                        "type": "uint256"
                    }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "components": [
                            {
                                "name": "makerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFeePaid",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFeePaid",
                                "type": "uint256"
                            }
                        ],
                        "name": "totalFillResults",
                        "type": "tuple"
                    },
                    {
                        "components": [
                            {
                                "name": "makerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFeePaid",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFeePaid",
                                "type": "uint256"
                            }
                        ],
                        "name": "singleFillResults",
                        "type": "tuple"
                    }
                ],
                "name": "publicAddFillResults",
                "outputs": [
                    {
                        "components": [
                            {
                                "name": "makerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFeePaid",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFeePaid",
                                "type": "uint256"
                            }
                        ],
                        "name": "",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "name": "numerator",
                        "type": "uint256"
                    },
                    {
                        "name": "denominator",
                        "type": "uint256"
                    },
                    {
                        "name": "target",
                        "type": "uint256"
                    }
                ],
                "name": "publicIsRoundingError",
                "outputs": [
                    {
                        "name": "isError",
                        "type": "bool"
                    }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "components": [
                            {
                                "name": "makerAddress",
                                "type": "address"
                            },
                            {
                                "name": "takerAddress",
                                "type": "address"
                            },
                            {
                                "name": "feeRecipientAddress",
                                "type": "address"
                            },
                            {
                                "name": "senderAddress",
                                "type": "address"
                            },
                            {
                                "name": "makerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "expirationTimeSeconds",
                                "type": "uint256"
                            },
                            {
                                "name": "salt",
                                "type": "uint256"
                            },
                            {
                                "name": "makerAssetData",
                                "type": "bytes"
                            },
                            {
                                "name": "takerAssetData",
                                "type": "bytes"
                            }
                        ],
                        "name": "order",
                        "type": "tuple"
                    }
                ],
                "name": "publicGetOrderHash",
                "outputs": [
                    {
                        "name": "orderHash",
                        "type": "bytes32"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            }
        ],
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object":
                    "0x608060405234801561001057600080fd5b50610a56806100206000396000f3006080604052600436106100485763ffffffff60e060020a600035041663041e63fe811461004d57806366758d7b146100835780638ae63316146100b0578063d9802088146100dd575b600080fd5b34801561005957600080fd5b5061006d6100683660046108d0565b6100fd565b60405161007a9190610993565b60405180910390f35b34801561008f57600080fd5b506100a361009e366004610861565b610112565b60405161007a91906109a1565b3480156100bc57600080fd5b506100d06100cb3660046108d0565b61012d565b60405161007a9190610985565b3480156100e957600080fd5b5061006d6100f836600461089c565b61013a565b600061010a848484610145565b949350505050565b61011a610616565b610124838361015a565b50815b92915050565b600061010a8484846101bc565b600061012782610212565b600061010a61015485846105c5565b846105f0565b815181516101689190610607565b82526020808301519082015161017e9190610607565b6020830152604080830151908201516101979190610607565b6040830152606080830151908201516101b09190610607565b60609092019190915250565b6000806000848015156101cb57fe5b86850991508115156101e05760009250610209565b6101ff6101f083620f42406105c5565b6101fa88876105c5565b6105f0565b6103e88111935090505b50509392505050565b60006040518080604860020a76616464726573732065786368616e6765416464726573730281525060170180606060020a7361646472657373206d616b6572416464726573730281525060140180606060020a73616464726573732074616b65724164647265737302815250601401807f6164647265737320666565526563697069656e74416464726573730000000000815250601b0180605860020a74616464726573732073656e646572416464726573730281525060150180604260020a771d5a5b9d0c8d4d881b585ad95c905cdcd95d105b5bdd5b9d0281525060180180604260020a771d5a5b9d0c8d4d881d185ad95c905cdcd95d105b5bdd5b9d0281525060180180608060020a6f75696e74323536206d616b65724665650281525060100180608060020a6f75696e743235362074616b657246656502815250601001807f75696e743235362065787069726174696f6e54696d655365636f6e6473000000815250601d018060a260020a6b1d5a5b9d0c8d4d881cd85b1d02815250600c0180606060020a736279746573206d616b65724173736574446174610281525060140180606060020a7362797465732074616b6572417373657444617461028152506014019050604051809103902030836000015184602001518560400151866060015187608001518860a001518960c001518a60e001518b61010001518c61012001518d61014001518e6101600151604051808e600160a060020a0316600160a060020a0316606060020a0281526014018d600160a060020a0316600160a060020a0316606060020a0281526014018c600160a060020a0316600160a060020a0316606060020a0281526014018b600160a060020a0316600160a060020a0316606060020a0281526014018a600160a060020a0316600160a060020a0316606060020a02815260140189815260200188815260200187815260200186815260200185815260200184815260200183805190602001908083835b6020831061050e5780518252601f1990920191602091820191016104ef565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106105565780518252601f199092019160209182019101610537565b6001836020036101000a0380198251168184511680821785525050505050509050019d5050505050505050505050505050604051809103902060405180836000191660001916815260200182600019166000191681526020019250505060405180910390209050809050919050565b60008282028315806105e157508284828115156105de57fe5b04145b15156105e957fe5b9392505050565b60008082848115156105fe57fe5b04949350505050565b6000828201838110156105e957fe5b608060405190810160405280600081526020016000815260200160008152602001600081525090565b60006105e98235610a04565b6000601f8201831361065c57600080fd5b813561066f61066a826109d5565b6109af565b9150808252602083016020830185838301111561068b57600080fd5b610696838284610a10565b50505092915050565b6000608082840312156106b157600080fd5b6106bb60806109af565b905060006106c98484610855565b82525060206106da84848301610855565b60208301525060406106ee84828501610855565b604083015250606061070284828501610855565b60608301525092915050565b6000610180828403121561072157600080fd5b61072c6101806109af565b9050600061073a848461063f565b825250602061074b8484830161063f565b602083015250604061075f8482850161063f565b60408301525060606107738482850161063f565b606083015250608061078784828501610855565b60808301525060a061079b84828501610855565b60a08301525060c06107af84828501610855565b60c08301525060e06107c384828501610855565b60e0830152506101006107d884828501610855565b610100830152506101206107ee84828501610855565b610120830152506101408201356001604060020a0381111561080f57600080fd5b61081b8482850161064b565b610140830152506101608201356001604060020a0381111561083c57600080fd5b6108488482850161064b565b6101608301525092915050565b60006105e98235610a01565b600080610100838503121561087557600080fd5b6000610881858561069f565b92505060806108928582860161069f565b9150509250929050565b6000602082840312156108ae57600080fd5b81356001604060020a038111156108c457600080fd5b61010a8482850161070e565b6000806000606084860312156108e557600080fd5b60006108f18686610855565b935050602061090286828701610855565b925050604061091386828701610855565b9150509250925092565b610926816109fc565b82525050565b61092681610a01565b80516080830190610946848261092c565b506020820151610959602085018261092c565b50604082015161096c604085018261092c565b50606082015161097f606085018261092c565b50505050565b60208101610127828461091d565b60208101610127828461092c565b608081016101278284610935565b6040518181016001604060020a03811182821017156109cd57600080fd5b604052919050565b60006001604060020a038211156109eb57600080fd5b506020601f91909101601f19160190565b151590565b90565b600160a060020a031690565b828183375060009101525600a265627a7a723058204280f30d9bf208fd230bd32f6b5e64acbc85baa18aa853d7799b73257a722afc6c6578706572696d656e74616cf50037",
                "opcodes":
                    "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA56 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x48 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x41E63FE DUP2 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x66758D7B EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x8AE63316 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xD9802088 EQ PUSH2 0xDD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D PUSH2 0x68 CALLDATASIZE PUSH1 0x4 PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA3 PUSH2 0x9E CALLDATASIZE PUSH1 0x4 PUSH2 0x861 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A SWAP2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0x12D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D PUSH2 0xF8 CALLDATASIZE PUSH1 0x4 PUSH2 0x89C JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A DUP5 DUP5 DUP5 PUSH2 0x145 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x11A PUSH2 0x616 JUMP JUMPDEST PUSH2 0x124 DUP4 DUP4 PUSH2 0x15A JUMP JUMPDEST POP DUP2 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A DUP5 DUP5 DUP5 PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x127 DUP3 PUSH2 0x212 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A PUSH2 0x154 DUP6 DUP5 PUSH2 0x5C5 JUMP JUMPDEST DUP5 PUSH2 0x5F0 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP1 ISZERO ISZERO PUSH2 0x1CB JUMPI INVALID JUMPDEST DUP7 DUP6 MULMOD SWAP2 POP DUP2 ISZERO ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x209 JUMP JUMPDEST PUSH2 0x1FF PUSH2 0x1F0 DUP4 PUSH3 0xF4240 PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x1FA DUP9 DUP8 PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT SWAP4 POP SWAP1 POP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x48 PUSH1 0x2 EXP PUSH23 0x616464726573732065786368616E676541646472657373 MUL DUP2 MSTORE POP PUSH1 0x17 ADD DUP1 PUSH1 0x60 PUSH1 0x2 EXP PUSH20 0x61646472657373206D616B657241646472657373 MUL DUP2 MSTORE POP PUSH1 0x14 ADD DUP1 PUSH1 0x60 PUSH1 0x2 EXP PUSH20 0x616464726573732074616B657241646472657373 MUL DUP2 MSTORE POP PUSH1 0x14 ADD DUP1 PUSH32 0x6164647265737320666565526563697069656E74416464726573730000000000 DUP2 MSTORE POP PUSH1 0x1B ADD DUP1 PUSH1 0x58 PUSH1 0x2 EXP PUSH21 0x616464726573732073656E64657241646472657373 MUL DUP2 MSTORE POP PUSH1 0x15 ADD DUP1 PUSH1 0x42 PUSH1 0x2 EXP PUSH24 0x1D5A5B9D0C8D4D881B585AD95C905CDCD95D105B5BDD5B9D MUL DUP2 MSTORE POP PUSH1 0x18 ADD DUP1 PUSH1 0x42 PUSH1 0x2 EXP PUSH24 0x1D5A5B9D0C8D4D881D185AD95C905CDCD95D105B5BDD5B9D MUL DUP2 MSTORE POP PUSH1 0x18 ADD DUP1 PUSH1 0x80 PUSH1 0x2 EXP PUSH16 0x75696E74323536206D616B6572466565 MUL DUP2 MSTORE POP PUSH1 0x10 ADD DUP1 PUSH1 0x80 PUSH1 0x2 EXP PUSH16 0x75696E743235362074616B6572466565 MUL DUP2 MSTORE POP PUSH1 0x10 ADD DUP1 PUSH32 0x75696E743235362065787069726174696F6E54696D655365636F6E6473000000 DUP2 MSTORE POP PUSH1 0x1D ADD DUP1 PUSH1 0xA2 PUSH1 0x2 EXP PUSH12 0x1D5A5B9D0C8D4D881CD85B1D MUL DUP2 MSTORE POP PUSH1 0xC ADD DUP1 PUSH1 0x60 PUSH1 0x2 EXP PUSH20 0x6279746573206D616B6572417373657444617461 MUL DUP2 MSTORE POP PUSH1 0x14 ADD DUP1 PUSH1 0x60 PUSH1 0x2 EXP PUSH20 0x62797465732074616B6572417373657444617461 MUL DUP2 MSTORE POP PUSH1 0x14 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 ADDRESS DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x80 ADD MLOAD DUP9 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0xC0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH2 0x100 ADD MLOAD DUP13 PUSH2 0x120 ADD MLOAD DUP14 PUSH2 0x140 ADD MLOAD DUP15 PUSH2 0x160 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP15 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x14 ADD DUP14 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x14 ADD DUP13 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x14 ADD DUP12 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x14 ADD DUP11 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x14 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x50E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x4EF JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE DUP6 MLOAD SWAP2 SWAP1 SWAP4 ADD SWAP3 DUP6 ADD SWAP2 POP DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x556 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x537 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x5E1 JUMPI POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x5DE JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x5E9 JUMPI INVALID JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x5FE JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x5E9 JUMPI INVALID JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E9 DUP3 CALLDATALOAD PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x66F PUSH2 0x66A DUP3 PUSH2 0x9D5 JUMP JUMPDEST PUSH2 0x9AF JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x68B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x696 DUP4 DUP3 DUP5 PUSH2 0xA10 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6BB PUSH1 0x80 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6C9 DUP5 DUP5 PUSH2 0x855 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 PUSH2 0x6DA DUP5 DUP5 DUP4 ADD PUSH2 0x855 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x6EE DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x702 DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72C PUSH2 0x180 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x73A DUP5 DUP5 PUSH2 0x63F JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 PUSH2 0x74B DUP5 DUP5 DUP4 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x75F DUP5 DUP3 DUP6 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x773 DUP5 DUP3 DUP6 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x787 DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x79B DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x7AF DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x7C3 DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x7D8 DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0x7EE DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP PUSH2 0x140 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x80F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81B DUP5 DUP3 DUP6 ADD PUSH2 0x64B JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE POP PUSH2 0x160 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x848 DUP5 DUP3 DUP6 ADD PUSH2 0x64B JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E9 DUP3 CALLDATALOAD PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x100 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x875 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x881 DUP6 DUP6 PUSH2 0x69F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x892 DUP6 DUP3 DUP7 ADD PUSH2 0x69F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x8C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10A DUP5 DUP3 DUP6 ADD PUSH2 0x70E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8F1 DUP7 DUP7 PUSH2 0x855 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x902 DUP7 DUP3 DUP8 ADD PUSH2 0x855 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x913 DUP7 DUP3 DUP8 ADD PUSH2 0x855 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x926 DUP2 PUSH2 0x9FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x926 DUP2 PUSH2 0xA01 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x946 DUP5 DUP3 PUSH2 0x92C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x959 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x92C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x96C PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x92C JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x97F PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x92C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x127 DUP3 DUP5 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x127 DUP3 DUP5 PUSH2 0x92C JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x127 DUP3 DUP5 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x9EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP STOP LOG2 PUSH6 0x627A7A723058 KECCAK256 TIMESTAMP DUP1 RETURN 0xd SWAP12 CALLCODE ADDMOD REVERT 0x23 SIGNEXTEND 0xd3 0x2f PUSH12 0x5E64ACBC85BAA18AA853D779 SWAP12 PUSH20 0x257A722AFC6C6578706572696D656E74616CF500 CALLDATACOPY ",
                "sourceMap": "802:1220:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;802:1220:3;;;;;;;"
            },
            "deployedBytecode": {
                "linkReferences": {},
                "object":
                    "0x6080604052600436106100485763ffffffff60e060020a600035041663041e63fe811461004d57806366758d7b146100835780638ae63316146100b0578063d9802088146100dd575b600080fd5b34801561005957600080fd5b5061006d6100683660046108d0565b6100fd565b60405161007a9190610993565b60405180910390f35b34801561008f57600080fd5b506100a361009e366004610861565b610112565b60405161007a91906109a1565b3480156100bc57600080fd5b506100d06100cb3660046108d0565b61012d565b60405161007a9190610985565b3480156100e957600080fd5b5061006d6100f836600461089c565b61013a565b600061010a848484610145565b949350505050565b61011a610616565b610124838361015a565b50815b92915050565b600061010a8484846101bc565b600061012782610212565b600061010a61015485846105c5565b846105f0565b815181516101689190610607565b82526020808301519082015161017e9190610607565b6020830152604080830151908201516101979190610607565b6040830152606080830151908201516101b09190610607565b60609092019190915250565b6000806000848015156101cb57fe5b86850991508115156101e05760009250610209565b6101ff6101f083620f42406105c5565b6101fa88876105c5565b6105f0565b6103e88111935090505b50509392505050565b60006040518080604860020a76616464726573732065786368616e6765416464726573730281525060170180606060020a7361646472657373206d616b6572416464726573730281525060140180606060020a73616464726573732074616b65724164647265737302815250601401807f6164647265737320666565526563697069656e74416464726573730000000000815250601b0180605860020a74616464726573732073656e646572416464726573730281525060150180604260020a771d5a5b9d0c8d4d881b585ad95c905cdcd95d105b5bdd5b9d0281525060180180604260020a771d5a5b9d0c8d4d881d185ad95c905cdcd95d105b5bdd5b9d0281525060180180608060020a6f75696e74323536206d616b65724665650281525060100180608060020a6f75696e743235362074616b657246656502815250601001807f75696e743235362065787069726174696f6e54696d655365636f6e6473000000815250601d018060a260020a6b1d5a5b9d0c8d4d881cd85b1d02815250600c0180606060020a736279746573206d616b65724173736574446174610281525060140180606060020a7362797465732074616b6572417373657444617461028152506014019050604051809103902030836000015184602001518560400151866060015187608001518860a001518960c001518a60e001518b61010001518c61012001518d61014001518e6101600151604051808e600160a060020a0316600160a060020a0316606060020a0281526014018d600160a060020a0316600160a060020a0316606060020a0281526014018c600160a060020a0316600160a060020a0316606060020a0281526014018b600160a060020a0316600160a060020a0316606060020a0281526014018a600160a060020a0316600160a060020a0316606060020a02815260140189815260200188815260200187815260200186815260200185815260200184815260200183805190602001908083835b6020831061050e5780518252601f1990920191602091820191016104ef565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106105565780518252601f199092019160209182019101610537565b6001836020036101000a0380198251168184511680821785525050505050509050019d5050505050505050505050505050604051809103902060405180836000191660001916815260200182600019166000191681526020019250505060405180910390209050809050919050565b60008282028315806105e157508284828115156105de57fe5b04145b15156105e957fe5b9392505050565b60008082848115156105fe57fe5b04949350505050565b6000828201838110156105e957fe5b608060405190810160405280600081526020016000815260200160008152602001600081525090565b60006105e98235610a04565b6000601f8201831361065c57600080fd5b813561066f61066a826109d5565b6109af565b9150808252602083016020830185838301111561068b57600080fd5b610696838284610a10565b50505092915050565b6000608082840312156106b157600080fd5b6106bb60806109af565b905060006106c98484610855565b82525060206106da84848301610855565b60208301525060406106ee84828501610855565b604083015250606061070284828501610855565b60608301525092915050565b6000610180828403121561072157600080fd5b61072c6101806109af565b9050600061073a848461063f565b825250602061074b8484830161063f565b602083015250604061075f8482850161063f565b60408301525060606107738482850161063f565b606083015250608061078784828501610855565b60808301525060a061079b84828501610855565b60a08301525060c06107af84828501610855565b60c08301525060e06107c384828501610855565b60e0830152506101006107d884828501610855565b610100830152506101206107ee84828501610855565b610120830152506101408201356001604060020a0381111561080f57600080fd5b61081b8482850161064b565b610140830152506101608201356001604060020a0381111561083c57600080fd5b6108488482850161064b565b6101608301525092915050565b60006105e98235610a01565b600080610100838503121561087557600080fd5b6000610881858561069f565b92505060806108928582860161069f565b9150509250929050565b6000602082840312156108ae57600080fd5b81356001604060020a038111156108c457600080fd5b61010a8482850161070e565b6000806000606084860312156108e557600080fd5b60006108f18686610855565b935050602061090286828701610855565b925050604061091386828701610855565b9150509250925092565b610926816109fc565b82525050565b61092681610a01565b80516080830190610946848261092c565b506020820151610959602085018261092c565b50604082015161096c604085018261092c565b50606082015161097f606085018261092c565b50505050565b60208101610127828461091d565b60208101610127828461092c565b608081016101278284610935565b6040518181016001604060020a03811182821017156109cd57600080fd5b604052919050565b60006001604060020a038211156109eb57600080fd5b506020601f91909101601f19160190565b151590565b90565b600160a060020a031690565b828183375060009101525600a265627a7a723058204280f30d9bf208fd230bd32f6b5e64acbc85baa18aa853d7799b73257a722afc6c6578706572696d656e74616cf50037",
                "opcodes":
                    "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x48 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x41E63FE DUP2 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x66758D7B EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x8AE63316 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xD9802088 EQ PUSH2 0xDD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D PUSH2 0x68 CALLDATASIZE PUSH1 0x4 PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA3 PUSH2 0x9E CALLDATASIZE PUSH1 0x4 PUSH2 0x861 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A SWAP2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0x12D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D PUSH2 0xF8 CALLDATASIZE PUSH1 0x4 PUSH2 0x89C JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A DUP5 DUP5 DUP5 PUSH2 0x145 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x11A PUSH2 0x616 JUMP JUMPDEST PUSH2 0x124 DUP4 DUP4 PUSH2 0x15A JUMP JUMPDEST POP DUP2 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A DUP5 DUP5 DUP5 PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x127 DUP3 PUSH2 0x212 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A PUSH2 0x154 DUP6 DUP5 PUSH2 0x5C5 JUMP JUMPDEST DUP5 PUSH2 0x5F0 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP1 ISZERO ISZERO PUSH2 0x1CB JUMPI INVALID JUMPDEST DUP7 DUP6 MULMOD SWAP2 POP DUP2 ISZERO ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x209 JUMP JUMPDEST PUSH2 0x1FF PUSH2 0x1F0 DUP4 PUSH3 0xF4240 PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x1FA DUP9 DUP8 PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT SWAP4 POP SWAP1 POP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x48 PUSH1 0x2 EXP PUSH23 0x616464726573732065786368616E676541646472657373 MUL DUP2 MSTORE POP PUSH1 0x17 ADD DUP1 PUSH1 0x60 PUSH1 0x2 EXP PUSH20 0x61646472657373206D616B657241646472657373 MUL DUP2 MSTORE POP PUSH1 0x14 ADD DUP1 PUSH1 0x60 PUSH1 0x2 EXP PUSH20 0x616464726573732074616B657241646472657373 MUL DUP2 MSTORE POP PUSH1 0x14 ADD DUP1 PUSH32 0x6164647265737320666565526563697069656E74416464726573730000000000 DUP2 MSTORE POP PUSH1 0x1B ADD DUP1 PUSH1 0x58 PUSH1 0x2 EXP PUSH21 0x616464726573732073656E64657241646472657373 MUL DUP2 MSTORE POP PUSH1 0x15 ADD DUP1 PUSH1 0x42 PUSH1 0x2 EXP PUSH24 0x1D5A5B9D0C8D4D881B585AD95C905CDCD95D105B5BDD5B9D MUL DUP2 MSTORE POP PUSH1 0x18 ADD DUP1 PUSH1 0x42 PUSH1 0x2 EXP PUSH24 0x1D5A5B9D0C8D4D881D185AD95C905CDCD95D105B5BDD5B9D MUL DUP2 MSTORE POP PUSH1 0x18 ADD DUP1 PUSH1 0x80 PUSH1 0x2 EXP PUSH16 0x75696E74323536206D616B6572466565 MUL DUP2 MSTORE POP PUSH1 0x10 ADD DUP1 PUSH1 0x80 PUSH1 0x2 EXP PUSH16 0x75696E743235362074616B6572466565 MUL DUP2 MSTORE POP PUSH1 0x10 ADD DUP1 PUSH32 0x75696E743235362065787069726174696F6E54696D655365636F6E6473000000 DUP2 MSTORE POP PUSH1 0x1D ADD DUP1 PUSH1 0xA2 PUSH1 0x2 EXP PUSH12 0x1D5A5B9D0C8D4D881CD85B1D MUL DUP2 MSTORE POP PUSH1 0xC ADD DUP1 PUSH1 0x60 PUSH1 0x2 EXP PUSH20 0x6279746573206D616B6572417373657444617461 MUL DUP2 MSTORE POP PUSH1 0x14 ADD DUP1 PUSH1 0x60 PUSH1 0x2 EXP PUSH20 0x62797465732074616B6572417373657444617461 MUL DUP2 MSTORE POP PUSH1 0x14 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 ADDRESS DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x80 ADD MLOAD DUP9 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0xC0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH2 0x100 ADD MLOAD DUP13 PUSH2 0x120 ADD MLOAD DUP14 PUSH2 0x140 ADD MLOAD DUP15 PUSH2 0x160 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP15 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x14 ADD DUP14 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x14 ADD DUP13 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x14 ADD DUP12 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x14 ADD DUP11 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x14 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x50E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x4EF JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE DUP6 MLOAD SWAP2 SWAP1 SWAP4 ADD SWAP3 DUP6 ADD SWAP2 POP DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x556 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x537 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x5E1 JUMPI POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x5DE JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x5E9 JUMPI INVALID JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x5FE JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x5E9 JUMPI INVALID JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E9 DUP3 CALLDATALOAD PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x66F PUSH2 0x66A DUP3 PUSH2 0x9D5 JUMP JUMPDEST PUSH2 0x9AF JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x68B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x696 DUP4 DUP3 DUP5 PUSH2 0xA10 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6BB PUSH1 0x80 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6C9 DUP5 DUP5 PUSH2 0x855 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 PUSH2 0x6DA DUP5 DUP5 DUP4 ADD PUSH2 0x855 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x6EE DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x702 DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72C PUSH2 0x180 PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x73A DUP5 DUP5 PUSH2 0x63F JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 PUSH2 0x74B DUP5 DUP5 DUP4 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x75F DUP5 DUP3 DUP6 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x773 DUP5 DUP3 DUP6 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x787 DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x79B DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x7AF DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x7C3 DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x7D8 DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0x7EE DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP PUSH2 0x140 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x80F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81B DUP5 DUP3 DUP6 ADD PUSH2 0x64B JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE POP PUSH2 0x160 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x848 DUP5 DUP3 DUP6 ADD PUSH2 0x64B JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E9 DUP3 CALLDATALOAD PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x100 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x875 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x881 DUP6 DUP6 PUSH2 0x69F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x892 DUP6 DUP3 DUP7 ADD PUSH2 0x69F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x8C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10A DUP5 DUP3 DUP6 ADD PUSH2 0x70E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8F1 DUP7 DUP7 PUSH2 0x855 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x902 DUP7 DUP3 DUP8 ADD PUSH2 0x855 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x913 DUP7 DUP3 DUP8 ADD PUSH2 0x855 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x926 DUP2 PUSH2 0x9FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x926 DUP2 PUSH2 0xA01 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x946 DUP5 DUP3 PUSH2 0x92C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x959 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x92C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x96C PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x92C JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x97F PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x92C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x127 DUP3 DUP5 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x127 DUP3 DUP5 PUSH2 0x92C JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x127 DUP3 DUP5 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x9EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP STOP LOG2 PUSH6 0x627A7A723058 KECCAK256 TIMESTAMP DUP1 RETURN 0xd SWAP12 CALLCODE ADDMOD REVERT 0x23 SIGNEXTEND 0xd3 0x2f PUSH12 0x5E64ACBC85BAA18AA853D779 SWAP12 PUSH20 0x257A722AFC6C6578706572696D656E74616CF500 CALLDATACOPY ",
                "sourceMap":
                    "802:1220:3:-;;;;;;;;;-1:-1:-1;;;802:1220:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;876:342;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;876:342:3;;;;;;;;;;;;;;;;;;;;;;;;;1745:275;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1745:275:3;;;;;;;;;;;;;;;;;1224:319;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1224:319:3;;;;;;;;;;;;;;;;;1549:190;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1549:190:3;;;;;;;;;876:342;1034:21;1087:94;1117:9;1140:11;1165:6;1087:16;:94::i;:::-;1071:110;876:342;-1:-1:-1;;;;876:342:3:o;1745:275::-;1895:11;;:::i;:::-;1929:51;1944:16;1962:17;1929:14;:51::i;:::-;-1:-1:-1;1997:16:3;1745:275;;;;;:::o;1224:319::-;1381:12;1419:93;1448:9;1471:11;1496:6;1419:15;:93::i;1549:190::-;1642:17;1687:19;1700:5;1687:12;:19::i;1064:326:1:-;1218:21;1271:82;1292:26;1300:9;1311:6;1292:7;:26::i;:::-;1332:11;1271:7;:82::i;1326:648:0:-;1519:39;;1560:40;;1511:90;;1519:39;1511:7;:90::i;:::-;1469:132;;1661:39;;;;;1702:40;;;;1653:90;;1661:39;1653:7;:90::i;:::-;1611:39;;;:132;1793:29;;;;;1824:30;;;;1785:70;;1793:29;1785:7;:70::i;:::-;1753:29;;;:102;1905:29;;;;;1936:30;;;;1897:70;;1905:29;1897:7;:70::i;:::-;1865:29;;;;:102;;;;-1:-1:-1;1326:648:0:o;2312:555:1:-;2465:12;2493:17;2650:33;2539:11;2513:38;;;;;;;2528:9;2520:6;2513:38;2493:58;-1:-1:-1;2565:14:1;;2561:79;;;2602:5;2595:12;;;;2561:79;2686:98;2707:27;2715:9;2726:7;2707;:27::i;:::-;2748:26;2756:9;2767:6;2748:7;:26::i;:::-;2686:7;:98::i;:::-;2832:4;2804:32;;;-1:-1:-1;2650:134:1;-1:-1:-1;2312:555:1;;;;;;;;:::o;1956:836:2:-;2045:17;668:443;;;;-1:-1:-1;;;;;668:443:2;;;;;;-1:-1:-1;;;;;668:443:2;;;;;;-1:-1:-1;;;;;668:443:2;;;;;;;;;;;;;-1:-1:-1;;;;;668:443:2;;;;;;-1:-1:-1;;;;;668:443:2;;;;;;-1:-1:-1;;;;;668:443:2;;;;;;-1:-1:-1;;;;;668:443:2;;;;;;-1:-1:-1;;;;;668:443:2;;;;;;;;;;;;;-1:-1:-1;;;;;668:443:2;;;;;;-1:-1:-1;;;;;668:443:2;;;;;;-1:-1:-1;;;;;668:443:2;;;;;;;;;;;;;;2285:4;2308:5;:18;;;2344:5;:18;;;2380:5;:25;;;2423:5;:19;;;2460:5;:22;;;2500:5;:22;;;2540:5;:14;;;2572:5;:14;;;2604:5;:27;;;2649:5;:10;;;2677:5;:20;;;2715:5;:20;;;2250:499;;;;-1:-1:-1;;;;;2250:499:2;-1:-1:-1;;;;;2250:499:2;-1:-1:-1;;;2250:499:2;;;;;;-1:-1:-1;;;;;2250:499:2;-1:-1:-1;;;;;2250:499:2;-1:-1:-1;;;2250:499:2;;;;;;-1:-1:-1;;;;;2250:499:2;-1:-1:-1;;;;;2250:499:2;-1:-1:-1;;;2250:499:2;;;;;;-1:-1:-1;;;;;2250:499:2;-1:-1:-1;;;;;2250:499:2;-1:-1:-1;;;2250:499:2;;;;;;-1:-1:-1;;;;;2250:499:2;-1:-1:-1;;;;;2250:499:2;-1:-1:-1;;;2250:499:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2250:499:2;;;;;;;;;;-1:-1:-1;2250:499:2;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2250:499:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2196:563;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2184:575;;2776:9;2769:16;;1956:836;;;:::o;84:180:4:-;164:7;196:5;;;218:6;;;:20;;;237:1;232;228;:5;;;;;;;;:10;218:20;211:28;;;;;;256:1;84:180;-1:-1:-1;;;84:180:4:o;270:142::-;350:7;373:6;386:1;382;:5;;;;;;;;;270:142;-1:-1:-1;;;;270:142:4:o;570:166::-;650:7;682:5;;;704:6;;;;697:14;;;802:1220:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;131:432;;221:4;209:17;;205:27;-1:-1;195:2;;246:1;243;236:12;195:2;283:6;270:20;305:60;320:44;357:6;320:44;;;305:60;;;296:69;;385:6;378:5;371:21;421:4;413:6;409:17;454:4;447:5;443:16;489:3;480:6;475:3;471:16;468:25;465:2;;;506:1;503;496:12;465:2;516:41;550:6;545:3;540;516:41;;;188:375;;;;;;;;611:809;;728:4;716:9;711:3;707:19;703:30;700:2;;;746:1;743;736:12;700:2;764:20;779:4;764:20;;;755:29;-1:-1;852:1;883:49;928:3;908:9;883:49;;;859:74;;-1:-1;1012:2;1045:49;1090:3;1066:22;;;1045:49;;;1038:4;1031:5;1027:16;1020:75;954:152;1164:2;1197:49;1242:3;1233:6;1222:9;1218:22;1197:49;;;1190:4;1183:5;1179:16;1172:75;1116:142;1316:2;1349:49;1394:3;1385:6;1374:9;1370:22;1349:49;;;1342:4;1335:5;1331:16;1324:75;1268:142;694:726;;;;;1455:2208;;1566:5;1554:9;1549:3;1545:19;1541:31;1538:2;;;1585:1;1582;1575:12;1538:2;1603:21;1618:5;1603:21;;;1594:30;-1:-1;1682:1;1713:49;1758:3;1738:9;1713:49;;;1689:74;;-1:-1;1832:2;1865:49;1910:3;1886:22;;;1865:49;;;1858:4;1851:5;1847:16;1840:75;1784:142;1991:2;2024:49;2069:3;2060:6;2049:9;2045:22;2024:49;;;2017:4;2010:5;2006:16;1999:75;1936:149;2144:2;2177:49;2222:3;2213:6;2202:9;2198:22;2177:49;;;2170:4;2163:5;2159:16;2152:75;2095:143;2300:3;2334:49;2379:3;2370:6;2359:9;2355:22;2334:49;;;2327:4;2320:5;2316:16;2309:75;2248:147;2457:3;2491:49;2536:3;2527:6;2516:9;2512:22;2491:49;;;2484:4;2477:5;2473:16;2466:75;2405:147;2606:3;2640:49;2685:3;2676:6;2665:9;2661:22;2640:49;;;2633:4;2626:5;2622:16;2615:75;2562:139;2755:3;2789:49;2834:3;2825:6;2814:9;2810:22;2789:49;;;2782:4;2775:5;2771:16;2764:75;2711:139;2917:3;2952:49;2997:3;2988:6;2977:9;2973:22;2952:49;;;2944:5;2937;2933:17;2926:76;2860:153;3063:3;3098:49;3143:3;3134:6;3123:9;3119:22;3098:49;;;3090:5;3083;3079:17;3072:76;3023:136;3247:3;3236:9;3232:19;3219:33;-1:-1;;;;;3264:6;3261:30;3258:2;;;3304:1;3301;3294:12;3258:2;3340:54;3390:3;3381:6;3370:9;3366:22;3340:54;;;3332:5;3325;3321:17;3314:81;3169:237;3494:3;3483:9;3479:19;3466:33;-1:-1;;;;;3511:6;3508:30;3505:2;;;3551:1;3548;3541:12;3505:2;3587:54;3637:3;3628:6;3617:9;3613:22;3587:54;;;3579:5;3572;3568:17;3561:81;3416:237;1532:2131;;;;;3670:118;;3737:46;3775:6;3762:20;3737:46;;3795:480;;;3972:3;3960:9;3951:7;3947:23;3943:33;3940:2;;;3989:1;3986;3979:12;3940:2;4024:1;4041:81;4114:7;4094:9;4041:81;;;4031:91;;4003:125;4159:3;4178:81;4251:7;4242:6;4231:9;4227:22;4178:81;;;4168:91;;4138:127;3934:341;;;;;;4282:371;;4408:2;4396:9;4387:7;4383:23;4379:32;4376:2;;;4424:1;4421;4414:12;4376:2;4459:31;;-1:-1;;;;;4499:30;;4496:2;;;4542:1;4539;4532:12;4496:2;4562:75;4629:7;4620:6;4609:9;4605:22;4562:75;;4660:491;;;;4798:2;4786:9;4777:7;4773:23;4769:32;4766:2;;;4814:1;4811;4804:12;4766:2;4849:1;4866:53;4911:7;4891:9;4866:53;;;4856:63;;4828:97;4956:2;4974:53;5019:7;5010:6;4999:9;4995:22;4974:53;;;4964:63;;4935:98;5064:2;5082:53;5127:7;5118:6;5107:9;5103:22;5082:53;;;5072:63;;5043:98;4760:391;;;;;;5158:101;5225:28;5247:5;5225:28;;;5220:3;5213:41;5207:52;;;5266:110;5339:31;5364:5;5339:31;;5460:886;5686:22;;5599:4;5590:14;;;5720:61;5594:3;5686:22;5720:61;;;5619:174;5887:4;5880:5;5876:16;5870:23;5905:62;5961:4;5956:3;5952:14;5939:11;5905:62;;;5803:176;6063:4;6056:5;6052:16;6046:23;6081:62;6137:4;6132:3;6128:14;6115:11;6081:62;;;5989:166;6239:4;6232:5;6228:16;6222:23;6257:62;6313:4;6308:3;6304:14;6291:11;6257:62;;;6165:166;5572:774;;;;6470:181;6572:2;6557:18;;6586:55;6561:9;6614:6;6586:55;;6658:193;6766:2;6751:18;;6780:61;6755:9;6814:6;6780:61;;6858:306;7022:3;7007:19;;7037:117;7011:9;7127:6;7037:117;;7371:256;7433:2;7427:9;7459:17;;;-1:-1;;;;;7519:34;;7555:22;;;7516:62;7513:2;;;7591:1;7588;7581:12;7513:2;7607;7600:22;7411:216;;-1:-1;7411:216;7634:254;;-1:-1;;;;;7765:6;7762:30;7759:2;;;7805:1;7802;7795:12;7759:2;-1:-1;7878:4;7849;7826:17;;;;-1:-1;;7822:33;7868:15;;7696:192;7895:92;7968:13;7961:21;;7944:43;7994:79;8063:5;8046:27;8166:128;-1:-1;;;;;8235:54;;8218:76;8388:145;8469:6;8464:3;8459;8446:30;-1:-1;8525:1;8507:16;;8500:27;8439:94"
            }
        }
    },
    "sources": {
        "current/protocol/Exchange/libs/LibFillResults.sol": {
            "id": 0
        },
        "current/protocol/Exchange/libs/LibMath.sol": {
            "id": 1
        },
        "current/protocol/Exchange/libs/LibOrder.sol": {
            "id": 2
        },
        "current/test/TestLibs/TestLibs.sol": {
            "id": 3
        },
        "current/utils/SafeMath/SafeMath.sol": {
            "id": 4
        }
    },
    "sourceCodes": {
        "current/protocol/Exchange/libs/LibFillResults.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\nimport \"../../../utils/SafeMath/SafeMath.sol\";\n\ncontract LibFillResults is\n    SafeMath\n{\n\n    struct FillResults {\n        uint256 makerAssetFilledAmount;\n        uint256 takerAssetFilledAmount;\n        uint256 makerFeePaid;\n        uint256 takerFeePaid;\n    }\n\n    struct MatchedFillResults {\n        LibFillResults.FillResults left;\n        LibFillResults.FillResults right;\n        uint256 takerFillAmount;\n    }\n\n    /// @dev Adds properties of both FillResults instances.\n    ///      Modifies the first FillResults instance specified.\n    /// @param totalFillResults Fill results instance that will be added onto.\n    /// @param singleFillResults Fill results instance that will be added to totalFillResults.\n    function addFillResults(FillResults memory totalFillResults, FillResults memory singleFillResults)\n        internal\n        pure\n    {\n        totalFillResults.makerAssetFilledAmount = safeAdd(totalFillResults.makerAssetFilledAmount, singleFillResults.makerAssetFilledAmount);\n        totalFillResults.takerAssetFilledAmount = safeAdd(totalFillResults.takerAssetFilledAmount, singleFillResults.takerAssetFilledAmount);\n        totalFillResults.makerFeePaid = safeAdd(totalFillResults.makerFeePaid, singleFillResults.makerFeePaid);\n        totalFillResults.takerFeePaid = safeAdd(totalFillResults.takerFeePaid, singleFillResults.takerFeePaid);\n    }\n\n    /// @dev Returns a null fill results struct\n    function getNullFillResults()\n        internal\n        pure\n        returns (FillResults memory)\n    {\n        // returns zeroed out FillResults instance\n        return FillResults({\n            makerAssetFilledAmount: 0,\n            takerAssetFilledAmount: 0,\n            makerFeePaid: 0,\n            takerFeePaid: 0\n        });\n    }\n}\n",
        "current/protocol/Exchange/libs/LibMath.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\nimport \"../../../utils/SafeMath/SafeMath.sol\";\n\ncontract LibMath is\n    SafeMath\n{\n    string constant ROUNDING_ERROR_ON_PARTIAL_AMOUNT = \"A rounding error occurred when calculating partial transfer amounts.\";\n\n    /// @dev Calculates partial value given a numerator and denominator.\n    /// @param numerator Numerator.\n    /// @param denominator Denominator.\n    /// @param target Value to calculate partial of.\n    /// @return Partial value of target.\n    function getPartialAmount(\n        uint256 numerator,\n        uint256 denominator,\n        uint256 target)\n        internal\n        pure\n        returns (uint256 partialAmount)\n    {\n        partialAmount = safeDiv(\n            safeMul(numerator, target),\n            denominator\n        );\n        return partialAmount;\n    }\n\n    /// @dev Calculates partial value given a numerator and denominator.\n    ///      Throws if there is a rounding error.\n    /// @param numerator Numerator.\n    /// @param denominator Denominator.\n    /// @param target Value to calculate partial of.\n    /// @return Partial value of target.\n    function safeGetPartialAmount(\n        uint256 numerator,\n        uint256 denominator,\n        uint256 target)\n        internal pure\n        returns (uint256 partialAmount)\n    {\n        require(\n            !isRoundingError(numerator, denominator, target),\n            ROUNDING_ERROR_ON_PARTIAL_AMOUNT\n        );\n        return getPartialAmount(numerator, denominator, target);\n    }\n\n    /// @dev Checks if rounding error > 0.1%.\n    /// @param numerator Numerator.\n    /// @param denominator Denominator.\n    /// @param target Value to multiply with numerator/denominator.\n    /// @return Rounding error is present.\n    function isRoundingError(\n        uint256 numerator,\n        uint256 denominator,\n        uint256 target)\n        internal\n        pure\n        returns (bool isError)\n    {\n        uint256 remainder = mulmod(target, numerator, denominator);\n        if (remainder == 0) {\n            return false; // No rounding error.\n        }\n\n        uint256 errPercentageTimes1000000 = safeDiv(\n            safeMul(remainder, 1000000),\n            safeMul(numerator, target)\n        );\n        isError = errPercentageTimes1000000 > 1000;\n        return isError;\n    }\n}\n",
        "current/protocol/Exchange/libs/LibOrder.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\ncontract LibOrder {\n\n    bytes32 constant ORDER_SCHEMA_HASH = keccak256(\n        \"address exchangeAddress\",\n        \"address makerAddress\",\n        \"address takerAddress\",\n        \"address feeRecipientAddress\",\n        \"address senderAddress\",\n        \"uint256 makerAssetAmount\",\n        \"uint256 takerAssetAmount\",\n        \"uint256 makerFee\",\n        \"uint256 takerFee\",\n        \"uint256 expirationTimeSeconds\",\n        \"uint256 salt\",\n        \"bytes makerAssetData\",\n        \"bytes takerAssetData\"\n    );\n\n    struct Order {\n        address makerAddress;\n        address takerAddress;\n        address feeRecipientAddress;\n        address senderAddress;\n        uint256 makerAssetAmount;\n        uint256 takerAssetAmount;\n        uint256 makerFee;\n        uint256 takerFee;\n        uint256 expirationTimeSeconds;\n        uint256 salt;\n        bytes makerAssetData;\n        bytes takerAssetData;\n    }\n\n    struct OrderInfo {\n        // See LibStatus for a complete description of order statuses\n        uint8 orderStatus;\n        // Keccak-256 EIP712 hash of the order\n        bytes32 orderHash;\n        // Amount of order that has been filled\n        uint256 orderTakerAssetFilledAmount;\n    }\n\n    /// @dev Calculates Keccak-256 hash of the order.\n    /// @param order The order structure.\n    /// @return Keccak-256 EIP712 hash of the order.\n    function getOrderHash(Order memory order)\n        internal\n        view\n        returns (bytes32 orderHash)\n    {\n        // TODO: EIP712 is not finalized yet\n        // Source: https://github.com/ethereum/EIPs/pull/712\n        orderHash = keccak256(\n            ORDER_SCHEMA_HASH,\n            keccak256(\n                address(this),\n                order.makerAddress,\n                order.takerAddress,\n                order.feeRecipientAddress,\n                order.senderAddress,\n                order.makerAssetAmount,\n                order.takerAssetAmount,\n                order.makerFee,\n                order.takerFee,\n                order.expirationTimeSeconds,\n                order.salt,\n                order.makerAssetData,\n                order.takerAssetData\n            )\n        );\n        return orderHash;\n    }\n}\n",
        "current/test/TestLibs/TestLibs.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../../protocol/Exchange/libs/LibMath.sol\";\nimport \"../../protocol/Exchange/libs/LibOrder.sol\";\nimport \"../../protocol/Exchange/libs/LibFillResults.sol\";\n\ncontract TestLibs is \n    LibMath,\n    LibOrder,\n    LibFillResults\n{\n    function publicGetPartialAmount(\n        uint256 numerator,\n        uint256 denominator,\n        uint256 target)\n        public\n        pure\n        returns (uint256 partialAmount)\n    {\n        partialAmount = getPartialAmount(\n            numerator,\n            denominator,\n            target\n        );\n        return partialAmount;\n    }\n\n    function publicIsRoundingError(\n        uint256 numerator,\n        uint256 denominator,\n        uint256 target)\n        public\n        pure\n        returns (bool isError)\n    {\n        isError = isRoundingError(\n            numerator,\n            denominator,\n            target\n        );\n        return isError;\n    }\n\n    function publicGetOrderHash(Order memory order)\n        public\n        view\n        returns (bytes32 orderHash)\n    {\n        orderHash = getOrderHash(order);\n        return orderHash;\n    }\n\n    function publicAddFillResults(FillResults memory totalFillResults, FillResults memory singleFillResults)\n        public\n        pure\n        returns (FillResults memory)\n    {\n        addFillResults(totalFillResults, singleFillResults);\n        return totalFillResults;\n    }\n}\n",
        "current/utils/SafeMath/SafeMath.sol":
            "pragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\ncontract SafeMath {\n    function safeMul(uint a, uint b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function safeDiv(uint a, uint b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint c = a / b;\n        return c;\n    }\n\n    function safeSub(uint a, uint b)\n        internal\n        pure\n        returns (uint256)\n    {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function safeAdd(uint a, uint b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint c = a + b;\n        assert(c >= a);\n        return c;\n    }\n\n    function max64(uint64 a, uint64 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a >= b ? a : b;\n    }\n\n    function min64(uint64 a, uint64 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a < b ? a : b;\n    }\n\n    function max256(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a >= b ? a : b;\n    }\n\n    function min256(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a < b ? a : b;\n    }\n}\n"
    },
    "sourceTreeHashHex": "0x4d865b51a26cf8b4130f5a4afb7c3f16d132f4c194c468ba74d4b14f550cb6c6",
    "compiler": {
        "name": "solc",
        "version": "0.4.24",
        "settings": {
            "optimizer": {
                "enabled": true,
                "runs": 0
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            }
        }
    },
    "networks": {}
}
