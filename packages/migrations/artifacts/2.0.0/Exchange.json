{
    "schemaVersion": "2.0.0",
    "contractName": "Exchange",
    "compilerOutput": {
        "abi": [
            {
                "constant": true,
                "inputs": [
                    {
                        "name": "",
                        "type": "bytes32"
                    }
                ],
                "name": "filled",
                "outputs": [
                    {
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {
                                "name": "makerAddress",
                                "type": "address"
                            },
                            {
                                "name": "takerAddress",
                                "type": "address"
                            },
                            {
                                "name": "feeRecipientAddress",
                                "type": "address"
                            },
                            {
                                "name": "senderAddress",
                                "type": "address"
                            },
                            {
                                "name": "makerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "expirationTimeSeconds",
                                "type": "uint256"
                            },
                            {
                                "name": "salt",
                                "type": "uint256"
                            },
                            {
                                "name": "makerAssetData",
                                "type": "bytes"
                            },
                            {
                                "name": "takerAssetData",
                                "type": "bytes"
                            }
                        ],
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    {
                        "name": "takerAssetFillAmounts",
                        "type": "uint256[]"
                    },
                    {
                        "name": "signatures",
                        "type": "bytes[]"
                    }
                ],
                "name": "batchFillOrders",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "name": "",
                        "type": "bytes32"
                    }
                ],
                "name": "cancelled",
                "outputs": [
                    {
                        "name": "",
                        "type": "bool"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "hash",
                        "type": "bytes32"
                    },
                    {
                        "name": "signer",
                        "type": "address"
                    },
                    {
                        "name": "signature",
                        "type": "bytes"
                    }
                ],
                "name": "preSign",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "name": "",
                        "type": "uint8"
                    }
                ],
                "name": "assetProxies",
                "outputs": [
                    {
                        "name": "",
                        "type": "address"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {
                                "name": "makerAddress",
                                "type": "address"
                            },
                            {
                                "name": "takerAddress",
                                "type": "address"
                            },
                            {
                                "name": "feeRecipientAddress",
                                "type": "address"
                            },
                            {
                                "name": "senderAddress",
                                "type": "address"
                            },
                            {
                                "name": "makerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "expirationTimeSeconds",
                                "type": "uint256"
                            },
                            {
                                "name": "salt",
                                "type": "uint256"
                            },
                            {
                                "name": "makerAssetData",
                                "type": "bytes"
                            },
                            {
                                "name": "takerAssetData",
                                "type": "bytes"
                            }
                        ],
                        "name": "order",
                        "type": "tuple"
                    },
                    {
                        "name": "takerAssetFillAmount",
                        "type": "uint256"
                    },
                    {
                        "name": "signature",
                        "type": "bytes"
                    }
                ],
                "name": "fillOrderNoThrow",
                "outputs": [
                    {
                        "components": [
                            {
                                "name": "makerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFeePaid",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFeePaid",
                                "type": "uint256"
                            }
                        ],
                        "name": "fillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {
                                "name": "makerAddress",
                                "type": "address"
                            },
                            {
                                "name": "takerAddress",
                                "type": "address"
                            },
                            {
                                "name": "feeRecipientAddress",
                                "type": "address"
                            },
                            {
                                "name": "senderAddress",
                                "type": "address"
                            },
                            {
                                "name": "makerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "expirationTimeSeconds",
                                "type": "uint256"
                            },
                            {
                                "name": "salt",
                                "type": "uint256"
                            },
                            {
                                "name": "makerAssetData",
                                "type": "bytes"
                            },
                            {
                                "name": "takerAssetData",
                                "type": "bytes"
                            }
                        ],
                        "name": "orders",
                        "type": "tuple[]"
                    }
                ],
                "name": "batchCancelOrders",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {
                                "name": "makerAddress",
                                "type": "address"
                            },
                            {
                                "name": "takerAddress",
                                "type": "address"
                            },
                            {
                                "name": "feeRecipientAddress",
                                "type": "address"
                            },
                            {
                                "name": "senderAddress",
                                "type": "address"
                            },
                            {
                                "name": "makerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "expirationTimeSeconds",
                                "type": "uint256"
                            },
                            {
                                "name": "salt",
                                "type": "uint256"
                            },
                            {
                                "name": "makerAssetData",
                                "type": "bytes"
                            },
                            {
                                "name": "takerAssetData",
                                "type": "bytes"
                            }
                        ],
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    {
                        "name": "takerAssetFillAmounts",
                        "type": "uint256[]"
                    },
                    {
                        "name": "signatures",
                        "type": "bytes[]"
                    }
                ],
                "name": "batchFillOrKillOrders",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "salt",
                        "type": "uint256"
                    }
                ],
                "name": "cancelOrdersUpTo",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {
                                "name": "makerAddress",
                                "type": "address"
                            },
                            {
                                "name": "takerAddress",
                                "type": "address"
                            },
                            {
                                "name": "feeRecipientAddress",
                                "type": "address"
                            },
                            {
                                "name": "senderAddress",
                                "type": "address"
                            },
                            {
                                "name": "makerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "expirationTimeSeconds",
                                "type": "uint256"
                            },
                            {
                                "name": "salt",
                                "type": "uint256"
                            },
                            {
                                "name": "makerAssetData",
                                "type": "bytes"
                            },
                            {
                                "name": "takerAssetData",
                                "type": "bytes"
                            }
                        ],
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    {
                        "name": "takerAssetFillAmounts",
                        "type": "uint256[]"
                    },
                    {
                        "name": "signatures",
                        "type": "bytes[]"
                    }
                ],
                "name": "batchFillOrdersNoThrow",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "assetProxyId",
                        "type": "uint8"
                    },
                    {
                        "name": "newAssetProxy",
                        "type": "address"
                    },
                    {
                        "name": "oldAssetProxy",
                        "type": "address"
                    }
                ],
                "name": "registerAssetProxy",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "zrxProxyData",
                "outputs": [
                    {
                        "name": "",
                        "type": "bytes"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "name": "",
                        "type": "bytes32"
                    }
                ],
                "name": "transactions",
                "outputs": [
                    {
                        "name": "",
                        "type": "bool"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {
                                "name": "makerAddress",
                                "type": "address"
                            },
                            {
                                "name": "takerAddress",
                                "type": "address"
                            },
                            {
                                "name": "feeRecipientAddress",
                                "type": "address"
                            },
                            {
                                "name": "senderAddress",
                                "type": "address"
                            },
                            {
                                "name": "makerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "expirationTimeSeconds",
                                "type": "uint256"
                            },
                            {
                                "name": "salt",
                                "type": "uint256"
                            },
                            {
                                "name": "makerAssetData",
                                "type": "bytes"
                            },
                            {
                                "name": "takerAssetData",
                                "type": "bytes"
                            }
                        ],
                        "name": "order",
                        "type": "tuple"
                    },
                    {
                        "name": "takerAssetFillAmount",
                        "type": "uint256"
                    },
                    {
                        "name": "signature",
                        "type": "bytes"
                    }
                ],
                "name": "fillOrKillOrder",
                "outputs": [
                    {
                        "components": [
                            {
                                "name": "makerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFeePaid",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFeePaid",
                                "type": "uint256"
                            }
                        ],
                        "name": "fillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "name": "",
                        "type": "address"
                    }
                ],
                "name": "makerEpoch",
                "outputs": [
                    {
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {
                                "name": "makerAddress",
                                "type": "address"
                            },
                            {
                                "name": "takerAddress",
                                "type": "address"
                            },
                            {
                                "name": "feeRecipientAddress",
                                "type": "address"
                            },
                            {
                                "name": "senderAddress",
                                "type": "address"
                            },
                            {
                                "name": "makerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "expirationTimeSeconds",
                                "type": "uint256"
                            },
                            {
                                "name": "salt",
                                "type": "uint256"
                            },
                            {
                                "name": "makerAssetData",
                                "type": "bytes"
                            },
                            {
                                "name": "takerAssetData",
                                "type": "bytes"
                            }
                        ],
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    {
                        "name": "takerAssetFillAmount",
                        "type": "uint256"
                    },
                    {
                        "name": "signatures",
                        "type": "bytes[]"
                    }
                ],
                "name": "marketSellOrders",
                "outputs": [
                    {
                        "components": [
                            {
                                "name": "makerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFeePaid",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFeePaid",
                                "type": "uint256"
                            }
                        ],
                        "name": "totalFillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "owner",
                "outputs": [
                    {
                        "name": "",
                        "type": "address"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "name": "assetProxyId",
                        "type": "uint8"
                    }
                ],
                "name": "getAssetProxy",
                "outputs": [
                    {
                        "name": "",
                        "type": "address"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {
                                "name": "makerAddress",
                                "type": "address"
                            },
                            {
                                "name": "takerAddress",
                                "type": "address"
                            },
                            {
                                "name": "feeRecipientAddress",
                                "type": "address"
                            },
                            {
                                "name": "senderAddress",
                                "type": "address"
                            },
                            {
                                "name": "makerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "expirationTimeSeconds",
                                "type": "uint256"
                            },
                            {
                                "name": "salt",
                                "type": "uint256"
                            },
                            {
                                "name": "makerAssetData",
                                "type": "bytes"
                            },
                            {
                                "name": "takerAssetData",
                                "type": "bytes"
                            }
                        ],
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    {
                        "name": "makerAssetFillAmount",
                        "type": "uint256"
                    },
                    {
                        "name": "signatures",
                        "type": "bytes[]"
                    }
                ],
                "name": "marketBuyOrdersNoThrow",
                "outputs": [
                    {
                        "components": [
                            {
                                "name": "makerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFeePaid",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFeePaid",
                                "type": "uint256"
                            }
                        ],
                        "name": "totalFillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {
                                "name": "makerAddress",
                                "type": "address"
                            },
                            {
                                "name": "takerAddress",
                                "type": "address"
                            },
                            {
                                "name": "feeRecipientAddress",
                                "type": "address"
                            },
                            {
                                "name": "senderAddress",
                                "type": "address"
                            },
                            {
                                "name": "makerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "expirationTimeSeconds",
                                "type": "uint256"
                            },
                            {
                                "name": "salt",
                                "type": "uint256"
                            },
                            {
                                "name": "makerAssetData",
                                "type": "bytes"
                            },
                            {
                                "name": "takerAssetData",
                                "type": "bytes"
                            }
                        ],
                        "name": "order",
                        "type": "tuple"
                    },
                    {
                        "name": "takerAssetFillAmount",
                        "type": "uint256"
                    },
                    {
                        "name": "signature",
                        "type": "bytes"
                    }
                ],
                "name": "fillOrder",
                "outputs": [
                    {
                        "components": [
                            {
                                "name": "makerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFeePaid",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFeePaid",
                                "type": "uint256"
                            }
                        ],
                        "name": "fillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "salt",
                        "type": "uint256"
                    },
                    {
                        "name": "signer",
                        "type": "address"
                    },
                    {
                        "name": "data",
                        "type": "bytes"
                    },
                    {
                        "name": "signature",
                        "type": "bytes"
                    }
                ],
                "name": "executeTransaction",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {
                                "name": "makerAddress",
                                "type": "address"
                            },
                            {
                                "name": "takerAddress",
                                "type": "address"
                            },
                            {
                                "name": "feeRecipientAddress",
                                "type": "address"
                            },
                            {
                                "name": "senderAddress",
                                "type": "address"
                            },
                            {
                                "name": "makerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "expirationTimeSeconds",
                                "type": "uint256"
                            },
                            {
                                "name": "salt",
                                "type": "uint256"
                            },
                            {
                                "name": "makerAssetData",
                                "type": "bytes"
                            },
                            {
                                "name": "takerAssetData",
                                "type": "bytes"
                            }
                        ],
                        "name": "order",
                        "type": "tuple"
                    }
                ],
                "name": "cancelOrder",
                "outputs": [
                    {
                        "name": "",
                        "type": "bool"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {
                                "name": "makerAddress",
                                "type": "address"
                            },
                            {
                                "name": "takerAddress",
                                "type": "address"
                            },
                            {
                                "name": "feeRecipientAddress",
                                "type": "address"
                            },
                            {
                                "name": "senderAddress",
                                "type": "address"
                            },
                            {
                                "name": "makerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "expirationTimeSeconds",
                                "type": "uint256"
                            },
                            {
                                "name": "salt",
                                "type": "uint256"
                            },
                            {
                                "name": "makerAssetData",
                                "type": "bytes"
                            },
                            {
                                "name": "takerAssetData",
                                "type": "bytes"
                            }
                        ],
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    {
                        "name": "takerAssetFillAmount",
                        "type": "uint256"
                    },
                    {
                        "name": "signatures",
                        "type": "bytes[]"
                    }
                ],
                "name": "marketSellOrdersNoThrow",
                "outputs": [
                    {
                        "components": [
                            {
                                "name": "makerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFeePaid",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFeePaid",
                                "type": "uint256"
                            }
                        ],
                        "name": "totalFillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {
                                "name": "makerAddress",
                                "type": "address"
                            },
                            {
                                "name": "takerAddress",
                                "type": "address"
                            },
                            {
                                "name": "feeRecipientAddress",
                                "type": "address"
                            },
                            {
                                "name": "senderAddress",
                                "type": "address"
                            },
                            {
                                "name": "makerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFee",
                                "type": "uint256"
                            },
                            {
                                "name": "expirationTimeSeconds",
                                "type": "uint256"
                            },
                            {
                                "name": "salt",
                                "type": "uint256"
                            },
                            {
                                "name": "makerAssetData",
                                "type": "bytes"
                            },
                            {
                                "name": "takerAssetData",
                                "type": "bytes"
                            }
                        ],
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    {
                        "name": "makerAssetFillAmount",
                        "type": "uint256"
                    },
                    {
                        "name": "signatures",
                        "type": "bytes[]"
                    }
                ],
                "name": "marketBuyOrders",
                "outputs": [
                    {
                        "components": [
                            {
                                "name": "makerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "takerAssetFilledAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "makerFeePaid",
                                "type": "uint256"
                            },
                            {
                                "name": "takerFeePaid",
                                "type": "uint256"
                            }
                        ],
                        "name": "totalFillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "currentContextAddress",
                "outputs": [
                    {
                        "name": "",
                        "type": "address"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "newOwner",
                        "type": "address"
                    }
                ],
                "name": "transferOwnership",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "VERSION",
                "outputs": [
                    {
                        "name": "",
                        "type": "string"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "name": "_zrxProxyData",
                        "type": "bytes"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "constructor"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": false,
                        "name": "id",
                        "type": "uint8"
                    },
                    {
                        "indexed": false,
                        "name": "newAssetProxy",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "name": "oldAssetProxy",
                        "type": "address"
                    }
                ],
                "name": "AssetProxySet",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "name": "makerAddress",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "name": "takerAddress",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "name": "feeRecipientAddress",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "name": "makerAssetFilledAmount",
                        "type": "uint256"
                    },
                    {
                        "indexed": false,
                        "name": "takerAssetFilledAmount",
                        "type": "uint256"
                    },
                    {
                        "indexed": false,
                        "name": "makerFeePaid",
                        "type": "uint256"
                    },
                    {
                        "indexed": false,
                        "name": "takerFeePaid",
                        "type": "uint256"
                    },
                    {
                        "indexed": true,
                        "name": "orderHash",
                        "type": "bytes32"
                    },
                    {
                        "indexed": false,
                        "name": "makerAssetData",
                        "type": "bytes"
                    },
                    {
                        "indexed": false,
                        "name": "takerAssetData",
                        "type": "bytes"
                    }
                ],
                "name": "Fill",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "name": "makerAddress",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "name": "feeRecipientAddress",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "name": "orderHash",
                        "type": "bytes32"
                    },
                    {
                        "indexed": false,
                        "name": "makerAssetData",
                        "type": "bytes"
                    },
                    {
                        "indexed": false,
                        "name": "takerAssetData",
                        "type": "bytes"
                    }
                ],
                "name": "Cancel",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "name": "makerAddress",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "name": "makerEpoch",
                        "type": "uint256"
                    }
                ],
                "name": "CancelUpTo",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "name": "errorId",
                        "type": "uint8"
                    },
                    {
                        "indexed": true,
                        "name": "orderHash",
                        "type": "bytes32"
                    }
                ],
                "name": "ExchangeError",
                "type": "event"
            }
        ],
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object":
                    "",
                "opcodes":
                    "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3B15 CODESIZE SUB DUP1 PUSH3 0x3B15 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE PUSH3 0x37 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH3 0x173 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND OR SWAP1 SSTORE DUP1 MLOAD DUP2 SWAP1 PUSH3 0x69 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x72 JUMP JUMPDEST POP POP POP PUSH3 0x235 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x114 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xFE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH3 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x140 PUSH3 0x13A DUP3 PUSH3 0x1DA JUMP JUMPDEST PUSH3 0x1B3 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH3 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x16A DUP4 DUP3 DUP5 PUSH3 0x202 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH3 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1AB DUP5 DUP3 DUP6 ADD PUSH3 0x117 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x21F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x205 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x22F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x38D0 DUP1 PUSH3 0x245 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x15E JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x288CDC91 DUP2 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x297BB70B EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x2AC12622 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x3683EF8E EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x38077164 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x3E228BAE EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x4AC14782 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x4D0AE546 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x4F9559B1 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x50DDE190 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x5C78D0C7 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x63589905 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x642F2EAF EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x64A3BC15 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x6F3627F8 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x7E1D9808 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x92C1421E EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xA3E20380 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xB4BE83D5 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xBFC8BFCE EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xD46B02C3 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0xDD1C7D18 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xE5FA431B EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0xEEA086BA EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x4DB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0x31BA JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x3705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x30BF JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DB PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x31BA JUMP JUMPDEST PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x35EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x31D8 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0x3380 JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x36B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x3275 JUMP JUMPDEST PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x36F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0x308A JUMP JUMPDEST PUSH2 0x876 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x30BF JUMP JUMPDEST PUSH2 0x8AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x31BA JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x30BF JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0x33BC JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DB PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x31BA JUMP JUMPDEST PUSH2 0xDAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x35F CALLDATASIZE PUSH1 0x4 PUSH2 0x3275 JUMP JUMPDEST PUSH2 0xDC4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x306C JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0x3153 JUMP JUMPDEST PUSH2 0xE7A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x3567 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3380 JUMP JUMPDEST PUSH2 0xFB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x401 CALLDATASIZE PUSH1 0x4 PUSH2 0x3153 JUMP JUMPDEST PUSH2 0xFD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x3275 JUMP JUMPDEST PUSH2 0x1144 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x32E7 JUMP JUMPDEST PUSH2 0x1577 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DB PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x3240 JUMP JUMPDEST PUSH2 0x1812 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x481 CALLDATASIZE PUSH1 0x4 PUSH2 0x3153 JUMP JUMPDEST PUSH2 0x1AC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x4A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3153 JUMP JUMPDEST PUSH2 0x1BB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x1CB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x306C JUMP JUMPDEST PUSH2 0x1CC8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x567 JUMPI PUSH2 0x55E DUP5 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x51F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x537 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x54F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1144 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x505 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x5BD DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x1D6B SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x5369676E61747572652076616C69646174696F6E206661696C65642E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x61D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH2 0x673 PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xB4BE83D500000000000000000000000000000000000000000000000000000000 DUP1 DUP3 MSTORE PUSH1 0x60 PUSH1 0x4 DUP4 ADD DUP2 DUP2 MSTORE DUP9 MLOAD PUSH1 0x64 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 DUP12 ADD MLOAD PUSH1 0x84 DUP8 ADD MSTORE SWAP6 DUP11 ADD MLOAD PUSH1 0xA4 DUP7 ADD MSTORE SWAP2 DUP10 ADD MLOAD PUSH1 0xC4 DUP6 ADD MSTORE PUSH1 0x80 DUP10 ADD MLOAD PUSH1 0xE4 DUP6 ADD MSTORE PUSH1 0xA0 DUP10 ADD MLOAD PUSH2 0x104 DUP6 ADD MSTORE PUSH1 0xC0 DUP10 ADD MLOAD PUSH2 0x124 DUP6 ADD MSTORE PUSH1 0xE0 DUP10 ADD MLOAD PUSH2 0x144 DUP6 ADD MSTORE PUSH2 0x100 DUP10 ADD MLOAD PUSH2 0x164 DUP6 ADD MSTORE PUSH2 0x120 DUP10 ADD MLOAD PUSH2 0x184 DUP6 ADD MSTORE PUSH2 0x140 DUP10 ADD MLOAD PUSH2 0x1A4 DUP6 ADD SWAP1 DUP2 MSTORE PUSH2 0x160 DUP11 ADD MLOAD PUSH2 0x1C4 DUP7 ADD MSTORE PUSH2 0x180 SWAP1 DUP2 SWAP1 MSTORE DUP10 ADD MLOAD PUSH2 0x1E4 DUP6 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP5 SWAP1 SWAP3 DUP4 SWAP3 SWAP2 PUSH1 0x24 DUP7 ADD SWAP2 DUP4 SWAP2 PUSH2 0x204 DUP9 ADD SWAP2 PUSH2 0x1A0 DUP15 ADD SWAP2 PUSH1 0x1F DUP3 ADD DIV PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x779 JUMPI DUP4 MLOAD DUP6 MSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x75B JUMP JUMPDEST POP POP POP DUP3 DUP3 SUB PUSH2 0x160 DUP5 ADD MSTORE DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 DUP3 ADD SWAP2 PUSH1 0x1F DUP3 ADD DIV PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7BA JUMPI DUP4 MLOAD DUP6 MSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x79C JUMP JUMPDEST POP POP POP DUP12 DUP5 MSTORE POP DUP5 DUP2 SUB PUSH1 0x20 SWAP4 DUP5 ADD SWAP1 DUP2 MSTORE DUP11 MLOAD DUP1 DUP4 MSTORE SWAP1 SWAP4 SWAP2 DUP3 ADD SWAP2 DUP12 DUP2 ADD SWAP2 SWAP1 PUSH1 0x1F DUP3 ADD DIV PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x802 JUMPI DUP4 MLOAD DUP6 MSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x7E4 JUMP JUMPDEST POP PUSH1 0x80 DUP11 DUP12 DUP7 SUB DUP13 ADDRESS GAS DELEGATECALL DUP1 DUP1 ISZERO PUSH2 0x821 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x83F JUMPI PUSH2 0x862 JUMP JUMPDEST PUSH1 0x0 DUP15 MSTORE PUSH1 0x0 PUSH1 0x20 DUP16 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP16 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP16 ADD MSTORE PUSH2 0x862 JUMP JUMPDEST DUP12 MLOAD DUP15 MSTORE PUSH1 0x20 DUP13 ADD MLOAD PUSH1 0x20 DUP16 ADD MSTORE PUSH1 0x40 DUP13 ADD MLOAD PUSH1 0x40 DUP16 ADD MSTORE PUSH1 0x60 DUP13 ADD MLOAD PUSH1 0x60 DUP16 ADD MSTORE JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x8AB JUMPI PUSH2 0x8A2 DUP3 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x893 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1812 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x879 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x567 JUMPI PUSH2 0x90B DUP5 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x8CC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x8E4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x8FC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0xDC4 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE PUSH1 0x44 DUP2 MSTORE PUSH32 0x5370656369666965642073616C74206D75737420626520677265617465722074 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x68616E206F7220657175616C20746F206578697374696E67206D616B65724570 SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x6F63682E00000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 DUP4 ADD SWAP2 DUP3 GT PUSH2 0x9DA JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0x666A5047451D0C744E58819166260F8048FE2786E33B3C1115AF94887A451CA7 SWAP1 PUSH2 0xA26 SWAP1 DUP5 SWAP1 PUSH2 0x3705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x567 JUMPI PUSH2 0xA8E DUP5 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xA4F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xA67 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xA7F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x66B JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xACD JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP1 PUSH2 0x36E7 JUMP JUMPDEST PUSH1 0xFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x37 DUP2 MSTORE PUSH32 0x4F6C642061737365742070726F787920646F6573206E6F74206D617463682061 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x737365742070726F787920617420676976656E2069642E000000000000000000 SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 DUP2 AND SWAP2 AND EQ PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP DUP4 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO PUSH2 0xC9E JUMPI DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0xAE25532E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xC11 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x339E JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND EQ PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E65772061737365742070726F787920696420646F6573206E6F74206D617463 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6820676976656E2069642E000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP JUMPDEST PUSH1 0xFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND OR SWAP1 SSTORE MLOAD PUSH32 0x27EF5F484E50F2DAF7C2D82C60FE4CE409009541176EB64095BEAC369DB1D260 SWAP1 PUSH2 0xD0A SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x3713 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xDA5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD7A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDA5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD88 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xDCC PUSH2 0x2CED JUMP JUMPDEST PUSH2 0xDD7 DUP5 DUP5 DUP5 PUSH2 0x1144 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x20 ADD MLOAD EQ PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446573697265642066696C6C20616D6F756E7420636F756C64206E6F74206265 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x20636F6D706C6574656C792066696C6C65642E00000000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xE60 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE82 PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE8D PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 SWAP3 POP JUMPDEST DUP7 MLOAD DUP4 LT ISZERO PUSH2 0xF9D JUMPI PUSH2 0xEDE DUP8 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xEAC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x160 ADD MLOAD DUP9 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xECA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x160 ADD MLOAD PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3877 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3857 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xF3A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH2 0xF49 DUP7 DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x235A JUMP JUMPDEST SWAP2 POP PUSH2 0xF75 DUP8 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF5C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP4 DUP8 DUP7 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x54F JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0xF81 DUP5 DUP3 PUSH2 0x236C JUMP JUMPDEST DUP6 DUP5 PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0xF92 JUMPI PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0xE92 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xFDC PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xFE9 PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP8 MLOAD DUP5 LT ISZERO PUSH2 0x1139 JUMPI PUSH2 0x103A DUP9 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1008 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x140 ADD MLOAD DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1026 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x140 ADD MLOAD PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3877 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3857 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1096 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH2 0x10A5 DUP8 DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0x235A JUMP JUMPDEST SWAP3 POP PUSH2 0x10E8 DUP9 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x10B8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0xA0 ADD MLOAD DUP10 DUP7 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x10D4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x80 ADD MLOAD DUP6 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1114 DUP9 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x10FB JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP4 DUP9 DUP8 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xA7F JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x1120 DUP6 DUP3 PUSH2 0x236C JUMP JUMPDEST DUP5 MLOAD DUP8 EQ ISZERO PUSH2 0x112E JUMPI PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 PUSH2 0xFEE JUMP JUMPDEST POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x114C PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x115A DUP8 PUSH2 0x23EB JUMP JUMPDEST DUP8 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x120 DUP10 ADD MLOAD SWAP2 SWAP5 POP GT ISZERO PUSH2 0x11BB JUMPI DUP3 PUSH1 0x2 JUMPDEST PUSH1 0xFF AND PUSH32 0x21320C5EF8EE97B846AB83C18FE2743EF678215F5EFEBB892BDDAA25C4C7DDD2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11DA JUMPI DUP3 PUSH1 0x2 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x12EF JUMPI PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3817 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 LT PUSH2 0x123A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3817 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 LT PUSH2 0x1286 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH2 0x1296 DUP4 DUP9 PUSH1 0x0 ADD MLOAD DUP8 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x5369676E61747572652076616C69646174696F6E206661696C65642E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x12ED JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH2 0x1376 JUMPI CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420606D73672E73656E646572602E0000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1374 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP JUMPDEST PUSH2 0x137E PUSH2 0x2811 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH2 0x142F JUMPI DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP8 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46756E6374696F6E2063616C6C656420696E20616E20696E76616C696420636F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E746578742E0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x142D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3817 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP8 GT PUSH2 0x1475 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH2 0x100 DUP8 ADD MLOAD TIMESTAMP LT PUSH2 0x148A JUMPI DUP3 PUSH1 0x0 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x14A8 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST SWAP1 POP DUP1 ISZERO ISZERO PUSH2 0x14B9 JUMPI DUP3 PUSH1 0x1 PUSH2 0x1187 JUMP JUMPDEST PUSH2 0x14C3 DUP7 DUP3 PUSH2 0x283F JUMP JUMPDEST PUSH1 0x20 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0x80 DUP10 ADD MLOAD PUSH2 0x14DF SWAP3 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST ISZERO PUSH2 0x151E JUMPI PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x3 SWAP1 PUSH32 0x21320C5EF8EE97B846AB83C18FE2743EF678215F5EFEBB892BDDAA25C4C7DDD2 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 DUP6 ADD MLOAD PUSH2 0x153C SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP5 ADD MLOAD PUSH2 0x155F SWAP1 DUP9 SWAP1 DUP5 SWAP1 PUSH2 0x28BC JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE DUP5 MSTORE PUSH2 0xF9D DUP8 DUP4 DUP6 DUP8 PUSH2 0x2A6F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH2 0x1590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP4 ADD DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP1 DUP6 SWAP1 KECCAK256 SLOAD PUSH1 0x60 DUP5 ADD DUP7 MSTORE PUSH1 0x26 DUP5 MSTORE PUSH32 0x5472616E73616374696F6E2068617320616C7265616479206265656E20657865 SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x63757465642E0000000000000000000000000000000000000000000000000000 SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP9 POP SWAP7 POP POP PUSH1 0xFF AND ISZERO SWAP4 POP PUSH2 0x1672 SWAP3 POP POP POP JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO ISZERO PUSH2 0x174A JUMPI PUSH2 0x16C9 DUP2 DUP8 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x1D6B SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x5369676E61747572652076616C69646174696F6E206661696C65642E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x1720 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB ADDRESS AND SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E73616374696F6E20657865637574696F6E206661696C65642E000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP3 POP ISZERO ISZERO SWAP1 POP PUSH2 0x17EB JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1820 DUP5 PUSH2 0x23EB JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3817 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP4 POP PUSH1 0x0 LT PUSH2 0x186D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3817 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 LT PUSH2 0x18B9 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH2 0x1941 JUMPI CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420606D73672E73656E646572602E0000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x193F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP JUMPDEST PUSH2 0x1949 PUSH2 0x2811 JUMP JUMPDEST DUP5 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH32 0x46756E6374696F6E2063616C6C656420696E20616E20696E76616C696420636F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6E746578742E0000000000000000000000000000000000000000000000000000 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP2 AND EQ PUSH2 0x19D8 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH2 0x100 DUP5 ADD MLOAD TIMESTAMP LT PUSH2 0x1A21 JUMPI DUP2 PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH32 0x21320C5EF8EE97B846AB83C18FE2743EF678215F5EFEBB892BDDAA25C4C7DDD2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SWAP3 POP PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1A40 JUMPI DUP2 PUSH1 0x2 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP5 DUP2 ADD MLOAD DUP6 MLOAD PUSH2 0x140 DUP8 ADD MLOAD PUSH2 0x160 DUP9 ADD MLOAD SWAP4 MLOAD DUP7 SWAP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP4 AND SWAP3 PUSH32 0xB1AD640E9E79B6FDBC3C415DC2914AB54E753D2971F51EAB910F7AA317A3163A SWAP3 PUSH2 0x1AB1 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x3694 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1AD8 PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 SWAP3 POP JUMPDEST DUP7 MLOAD DUP4 LT ISZERO PUSH2 0xF9D JUMPI PUSH2 0x1AF7 DUP8 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xEAC JUMPI INVALID JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3877 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3857 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1B53 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH2 0x1B62 DUP7 DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x235A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8E DUP8 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1B75 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP4 DUP8 DUP7 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xA7F JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x1B9A DUP5 DUP3 PUSH2 0x236C JUMP JUMPDEST DUP6 DUP5 PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0x1BAB JUMPI PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x1ADD JUMP JUMPDEST PUSH2 0x1BBE PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1BCB PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP8 MLOAD DUP5 LT ISZERO PUSH2 0x1139 JUMPI PUSH2 0x1BEA DUP9 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1008 JUMPI INVALID JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3877 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3857 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1C46 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH2 0x1C55 DUP8 DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0x235A JUMP JUMPDEST SWAP3 POP PUSH2 0x1C68 DUP9 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x10B8 JUMPI INVALID JUMPDEST SWAP2 POP PUSH2 0x1C94 DUP9 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1C7B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP4 DUP9 DUP8 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x54F JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x1CA0 DUP6 DUP3 PUSH2 0x236C JUMP JUMPDEST DUP5 MLOAD DUP8 EQ ISZERO PUSH2 0x1CAE JUMPI PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1CF9 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP1 PUSH2 0x36E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x1D31 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH32 0x322E302E312D616C706861000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 DUP8 MLOAD LT ISZERO PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3837 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1DC1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1DD1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xF8 PUSH1 0x2 EXP MUL PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1DF9 JUMPI INVALID JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1E09 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1E2A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP1 PUSH2 0x36D7 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1E38 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1E90 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3837 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x1E86 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 POP PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1E9E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1F0C JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3837 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x1EEC JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP9 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ SWAP6 POP DUP6 SWAP6 POP PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x3 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1F1A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2047 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3837 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x1F68 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1F78 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x1F96 DUP8 PUSH1 0x2 PUSH2 0x2AF3 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FA3 DUP8 PUSH1 0x22 PUSH2 0x2AF3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3C ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x1FFF SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x3618 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2023 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 DUP2 AND SWAP1 DUP3 AND EQ SWAP8 POP SWAP2 POP PUSH2 0x2306 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2055 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2103 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3837 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x20A3 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x20B3 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x20D1 DUP8 PUSH1 0x2 PUSH2 0x2AF3 JUMP JUMPDEST SWAP3 POP PUSH2 0x20DE DUP8 PUSH1 0x22 PUSH2 0x2AF3 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP10 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1FFF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST PUSH1 0x5 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2111 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x21F6 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3837 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x215F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x216F JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x218D DUP8 PUSH1 0x2 PUSH2 0x2AF3 JUMP JUMPDEST SWAP3 POP PUSH2 0x219A DUP8 PUSH1 0x22 PUSH2 0x2AF3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A410000000000 DUP2 MSTORE PUSH1 0x1B DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3B ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x1FFF SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x3618 JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2204 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x22AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND SWAP1 PUSH4 0x1626BA7E SWAP1 PUSH2 0x2251 SWAP1 DUP13 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x35F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x226B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x227F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x22A3 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x319C JUMP JUMPDEST SWAP6 POP PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x7 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x22B8 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x22EB JUMPI PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP6 POP PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP1 PUSH2 0x36C7 JUMP JUMPDEST POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP5 MLOAD ADD DIV PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2351 JUMPI PUSH1 0x20 DUP2 MUL DUP6 DUP2 ADD MLOAD SWAP1 DUP6 ADD MLOAD DUP1 DUP3 EQ SWAP5 POP DUP5 PUSH2 0x2347 JUMPI DUP4 SWAP3 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x2325 JUMP JUMPDEST POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2366 JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH2 0x237A SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MLOAD PUSH2 0x2390 SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MLOAD PUSH2 0x23A9 SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MLOAD PUSH2 0x23C2 SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E3 PUSH2 0x23DD DUP6 DUP5 PUSH2 0x2B87 JUMP JUMPDEST DUP5 PUSH2 0x2BAB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x616464726573732065786368616E676541646472657373000000000000000000 DUP2 MSTORE POP PUSH1 0x17 ADD DUP1 PUSH32 0x61646472657373206D616B657241646472657373000000000000000000000000 DUP2 MSTORE POP PUSH1 0x14 ADD DUP1 PUSH32 0x616464726573732074616B657241646472657373000000000000000000000000 DUP2 MSTORE POP PUSH1 0x14 ADD DUP1 PUSH32 0x6164647265737320666565526563697069656E74416464726573730000000000 DUP2 MSTORE POP PUSH1 0x1B ADD DUP1 PUSH32 0x616464726573732073656E646572416464726573730000000000000000000000 DUP2 MSTORE POP PUSH1 0x15 ADD DUP1 PUSH32 0x75696E74323536206D616B65724173736574416D6F756E740000000000000000 DUP2 MSTORE POP PUSH1 0x18 ADD DUP1 PUSH32 0x75696E743235362074616B65724173736574416D6F756E740000000000000000 DUP2 MSTORE POP PUSH1 0x18 ADD DUP1 PUSH32 0x75696E74323536206D616B657246656500000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x10 ADD DUP1 PUSH32 0x75696E743235362074616B657246656500000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x10 ADD DUP1 PUSH32 0x75696E743235362065787069726174696F6E54696D655365636F6E6473000000 DUP2 MSTORE POP PUSH1 0x1D ADD DUP1 PUSH32 0x75696E743235362073616C740000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xC ADD DUP1 PUSH32 0x6279746573206D616B6572417373657444617461000000000000000000000000 DUP2 MSTORE POP PUSH1 0x14 ADD DUP1 PUSH32 0x62797465732074616B6572417373657444617461000000000000000000000000 DUP2 MSTORE POP PUSH1 0x14 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 ADDRESS DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x80 ADD MLOAD DUP9 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0xC0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH2 0x100 ADD MLOAD DUP13 PUSH2 0x120 ADD MLOAD DUP14 PUSH2 0x140 ADD MLOAD DUP15 PUSH2 0x160 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP15 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP14 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP13 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP12 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP11 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x275A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x273B JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE DUP6 MLOAD SWAP2 SWAP1 SWAP4 ADD SWAP3 DUP6 ADD SWAP2 POP DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x27A2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH2 0x2838 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x2354 JUMP JUMPDEST CALLER SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x284E JUMPI DUP2 PUSH2 0x2850 JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP1 ISZERO ISZERO PUSH2 0x2866 JUMPI INVALID JUMPDEST DUP7 DUP6 MULMOD SWAP2 POP DUP2 ISZERO ISZERO PUSH2 0x287B JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x28A4 JUMP JUMPDEST PUSH2 0x289A PUSH2 0x288B DUP4 PUSH3 0xF4240 PUSH2 0x2B87 JUMP JUMPDEST PUSH2 0x2895 DUP9 DUP8 PUSH2 0x2B87 JUMP JUMPDEST PUSH2 0x2BAB JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT SWAP4 POP SWAP1 POP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x2850 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x28D4 DUP5 DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0x80 ADD MLOAD PUSH2 0x23CE JUMP JUMPDEST SWAP3 POP PUSH2 0x28EB DUP7 PUSH2 0x140 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD DUP8 DUP7 PUSH2 0x2BC2 JUMP JUMPDEST PUSH2 0x2900 DUP7 PUSH2 0x160 ADD MLOAD DUP7 DUP9 PUSH1 0x0 ADD MLOAD DUP8 PUSH2 0x2BC2 JUMP JUMPDEST PUSH2 0x2913 DUP5 DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD PUSH2 0x23CE JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP4 SWAP6 POP PUSH2 0x29B5 SWAP4 SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x29A0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2975 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x29A0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2983 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD DUP6 PUSH2 0x2BC2 JUMP JUMPDEST PUSH2 0x29C8 DUP5 DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0xE0 ADD MLOAD PUSH2 0x23CE JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP4 SWAP5 POP PUSH2 0x2A66 SWAP4 SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2A55 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A2A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A55 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A38 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP7 DUP9 PUSH1 0x40 ADD MLOAD DUP5 PUSH2 0x2BC2 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x0 NOT AND DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0xDE19F18E1B56E6EADA7ED95CCA8398B602BE32F5864640537EE9A9A3532BB29D DUP7 DUP6 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD DUP9 PUSH1 0x60 ADD MLOAD DUP13 PUSH2 0x140 ADD MLOAD DUP14 PUSH2 0x160 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x2AE5 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3575 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7175616C20746F2033322E000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x2B7D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x2BA3 JUMPI POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x2BA0 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x2850 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x2BB9 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x2CE5 JUMPI DUP6 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E20302E0000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 GT ISZERO PUSH2 0x2C29 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2C39 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD PUSH32 0xA85E59E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 PUSH4 0xA85E59E4 SWAP1 PUSH2 0x2CB2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x3667 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2850 DUP3 CALLDATALOAD PUSH2 0x37AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x2D33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D46 PUSH2 0x2D41 DUP3 PUSH2 0x3762 JUMP JUMPDEST PUSH2 0x373B JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 POP DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D84 JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0x2D6E DUP9 DUP3 PUSH2 0x2EBC JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2D58 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x2D9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2DAD PUSH2 0x2D41 DUP3 PUSH2 0x3762 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 POP DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D84 JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0x2DD5 DUP9 DUP3 PUSH2 0x2F0B JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2DBF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x2DFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2E0A PUSH2 0x2D41 DUP3 PUSH2 0x3762 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x2E2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D84 JUMPI DUP2 PUSH2 0x2E45 DUP9 DUP3 PUSH2 0x2E67 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2E32 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2850 DUP3 MLOAD PUSH2 0x37BB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2850 DUP3 CALLDATALOAD PUSH2 0x37C0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0x2E85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2EB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x2ECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2EDB PUSH2 0x2D41 DUP3 PUSH2 0x3783 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x2EF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F02 DUP4 DUP3 DUP5 PUSH2 0x37D4 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F29 PUSH2 0x180 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F37 DUP5 DUP5 PUSH2 0x2D16 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 PUSH2 0x2F48 DUP5 DUP5 DUP4 ADD PUSH2 0x2D16 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x2F5C DUP5 DUP3 DUP6 ADD PUSH2 0x2D16 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x2F70 DUP5 DUP3 DUP6 ADD PUSH2 0x2D16 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x2F84 DUP5 DUP3 DUP6 ADD PUSH2 0x2E67 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x2F98 DUP5 DUP3 DUP6 ADD PUSH2 0x2E67 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x2FAC DUP5 DUP3 DUP6 ADD PUSH2 0x2E67 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x2FC0 DUP5 DUP3 DUP6 ADD PUSH2 0x2E67 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x2FD5 DUP5 DUP3 DUP6 ADD PUSH2 0x2E67 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0x2FEB DUP5 DUP3 DUP6 ADD PUSH2 0x2E67 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP PUSH2 0x140 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x300D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3019 DUP5 DUP3 DUP6 ADD PUSH2 0x2EBC JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE POP PUSH2 0x160 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x303B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3047 DUP5 DUP3 DUP6 ADD PUSH2 0x2EBC JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2850 DUP3 CALLDATALOAD PUSH2 0x37C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2850 DUP3 MLOAD PUSH2 0x37C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x307E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23E3 DUP5 DUP5 PUSH2 0x2D16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x309C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23E3 DUP5 DUP3 DUP6 ADD PUSH2 0x2D8E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x30D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30F7 DUP7 DUP3 DUP8 ADD PUSH2 0x2D8E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3120 DUP7 DUP3 DUP8 ADD PUSH2 0x2DEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x313D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3149 DUP7 DUP3 DUP8 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x317F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x318B DUP7 DUP3 DUP8 ADD PUSH2 0x2D8E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3120 DUP7 DUP3 DUP8 ADD PUSH2 0x2E67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23E3 DUP5 DUP5 PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23E3 DUP5 DUP5 PUSH2 0x2E67 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x31EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x31FA DUP8 DUP8 PUSH2 0x2E67 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x320B DUP8 DUP3 DUP9 ADD PUSH2 0x2D16 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3234 DUP8 DUP3 DUP9 ADD PUSH2 0x2E73 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23E3 DUP5 DUP3 DUP6 ADD PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x328A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32AD DUP7 DUP3 DUP8 ADD PUSH2 0x2F0B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x32BE DUP7 DUP3 DUP8 ADD PUSH2 0x2E67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3149 DUP7 DUP3 DUP8 ADD PUSH2 0x2EBC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x330C DUP10 DUP10 PUSH2 0x2E67 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x331D DUP10 DUP3 DUP11 ADD PUSH2 0x2D16 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x333A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3346 DUP10 DUP3 DUP11 ADD PUSH2 0x2E73 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3371 DUP10 DUP3 DUP11 ADD PUSH2 0x2E73 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23E3 DUP5 DUP5 PUSH2 0x3054 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23E3 DUP5 DUP5 PUSH2 0x3060 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x33D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33DD DUP7 DUP7 PUSH2 0x3054 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x33EE DUP7 DUP3 DUP8 ADD PUSH2 0x2D16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3149 DUP7 DUP3 DUP8 ADD PUSH2 0x2D16 JUMP JUMPDEST PUSH2 0x3408 DUP2 PUSH2 0x37AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3408 DUP2 PUSH2 0x37BB JUMP JUMPDEST PUSH2 0x3408 DUP2 PUSH2 0x37C0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x342B DUP3 PUSH2 0x37AB JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x343F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x37E0 JUMP JUMPDEST PUSH2 0x3448 DUP2 PUSH2 0x380C JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3408 DUP2 PUSH2 0x37C9 JUMP JUMPDEST PUSH1 0x1B DUP2 MSTORE PUSH32 0x556E737570706F72746564207369676E617475726520747970652E0000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH32 0x496C6C6567616C207369676E617475726520747970652E000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x33 DUP2 MSTORE PUSH32 0x4F6E6C7920636F6E7472616374206F776E657220697320616C6C6F7765642074 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F2063616C6C2074686973206D6574686F642E00000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x3525 DUP5 DUP3 PUSH2 0x3417 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3538 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3417 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x354B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3417 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x567 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x3408 DUP2 PUSH2 0x37C3 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x2354 DUP3 DUP5 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD PUSH2 0x3583 DUP3 DUP11 PUSH2 0x33FF JUMP JUMPDEST PUSH2 0x3590 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x359D PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x35AA PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x35B7 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x3417 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x35C9 DUP2 DUP6 PUSH2 0x3420 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x35DD DUP2 DUP5 PUSH2 0x3420 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x2354 DUP3 DUP5 PUSH2 0x340E JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x3606 DUP3 DUP6 PUSH2 0x3417 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x23E3 DUP2 DUP5 PUSH2 0x3420 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x3626 DUP3 DUP8 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x3633 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x355E JUMP JUMPDEST PUSH2 0x3640 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x364D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3417 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x2850 DUP2 DUP5 PUSH2 0x3420 JUMP JUMPDEST PUSH1 0x80 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x3678 DUP2 DUP8 PUSH2 0x3420 JUMP JUMPDEST SWAP1 POP PUSH2 0x3687 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x33FF JUMP JUMPDEST PUSH2 0x3640 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x36A5 DUP2 DUP6 PUSH2 0x3420 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x23E3 DUP2 DUP5 PUSH2 0x3420 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x2354 DUP3 DUP5 PUSH2 0x3455 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x2354 DUP2 PUSH2 0x345E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x2354 DUP2 PUSH2 0x348E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x2354 DUP2 PUSH2 0x34BE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x2354 DUP3 DUP5 PUSH2 0x3514 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x2354 DUP3 DUP5 PUSH2 0x3417 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x3721 DUP3 DUP7 PUSH2 0x355E JUMP JUMPDEST PUSH2 0x372E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x33FF JUMP JUMPDEST PUSH2 0x23E3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x375A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x379A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2354 DUP3 PUSH2 0x37AF JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x37FB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x37E3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x567 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP COINBASE PUSH14 0x6F756E74206D7573742062652067 PUSH19 0x6561746572207468616E20302E0000496E7661 PUSH13 0x6964207369676E617475726520 PUSH13 0x656E6774682E00000000000000 PUSH6 0x616368206F72 PUSH5 0x65722E0000 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP COINBASE PUSH20 0x7365742064617461206D75737420626520746865 KECCAK256 PUSH20 0x616D6520666F7220A265627A7A723058200666B2 0x3f SELFDESTRUCT MSTORE8 BYTE 0xf 0xb1 PC 0xec SHR ADDMOD DELEGATECALL LOG1 SMOD 0x2a EXTCODECOPY 0xf 0xf8 PUSH21 0x3D63E1DC295C6289296CFC6C6578706572696D656E PUSH21 0x616CF5003700000000000000000000000000000000 ",
                "sourceMap":
                    "861:494:2:-;;;1094:259;8:9:-1;5:2;;;30:1;27;20:12;5:2;1094:259:2;;;;;;;;;;;;;;;;;;;;;;;;363:5:25;:18;;-1:-1:-1;;;;;;363:18:25;371:10;-1:-1:-1;;;;;363:18:25;;;;1569:30:5;;;;;;:14;;:30;;;;;:::i;:::-;;1499:107;1094:259:2;861:494;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;861:494:2;;;-1:-1:-1;861:494:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;6:442:-1:-;;111:4;99:17;;95:27;-1:-1;85:2;;136:1;133;126:12;85:2;166:6;160:13;188:64;203:48;244:6;203:48;;;188:64;;;179:73;;272:6;265:5;258:21;308:4;300:6;296:17;341:4;334:5;330:16;376:3;367:6;362:3;358:16;355:25;352:2;;;393:1;390;383:12;352:2;403:39;435:6;430:3;425;403:39;;;78:370;;;;;;;;456:360;;580:2;568:9;559:7;555:23;551:32;548:2;;;596:1;593;586:12;548:2;631:24;;-1:-1;;;;;664:30;;661:2;;;707:1;704;697:12;661:2;727:73;792:7;783:6;772:9;768:22;727:73;;;717:83;542:274;-1:-1;;;;542:274;823:256;885:2;879:9;911:17;;;-1:-1;;;;;971:34;;1007:22;;;968:62;965:2;;;1043:1;1040;1033:12;965:2;1059;1052:22;863:216;;-1:-1;863:216;1086:258;;-1:-1;;;;;1221:6;1218:30;1215:2;;;1261:1;1258;1251:12;1215:2;-1:-1;1334:4;1305;1282:17;;;;-1:-1;;1278:33;1324:15;;1152:192;1352:268;1417:1;1424:101;1438:6;1435:1;1432:13;1424:101;;;1505:11;;;1499:18;1486:11;;;1479:39;1460:2;1453:10;1424:101;;;1540:6;1537:1;1534:13;1531:2;;;1605:1;1596:6;1591:3;1587:16;1580:27;1531:2;1401:219;;;;;;861:494:2;;;;;;"
            },
            "deployedBytecode": {
                "linkReferences": {},
                "object":
                    "0x60806040526004361061015e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663288cdc918114610163578063297bb70b146101995780632ac12622146101bb5780633683ef8e146101e857806338077164146102085780633e228bae146102355780634ac14782146102625780634d0ae546146102825780634f9559b1146102a257806350dde190146102c25780635c78d0c7146102e25780636358990514610302578063642f2eaf1461032457806364a3bc15146103445780636f3627f8146103645780637e1d9808146103845780638da5cb5b146103a457806392c1421e146103c6578063a3e20380146103e6578063b4be83d514610406578063bfc8bfce14610426578063d46b02c314610446578063dd1c7d1814610466578063e5fa431b14610486578063eea086ba146104a6578063f2fde38b146104bb578063ffa1ad74146104db575b600080fd5b34801561016f57600080fd5b5061018361017e3660046131ba565b6104f0565b6040516101909190613705565b60405180910390f35b3480156101a557600080fd5b506101b96101b43660046130bf565b610502565b005b3480156101c757600080fd5b506101db6101d63660046131ba565b61056d565b60405161019091906135ea565b3480156101f457600080fd5b506101b96102033660046131d8565b610582565b34801561021457600080fd5b50610228610223366004613380565b610650565b60405161019091906136b9565b34801561024157600080fd5b50610255610250366004613275565b61066b565b60405161019091906136f7565b34801561026e57600080fd5b506101b961027d36600461308a565b610876565b34801561028e57600080fd5b506101b961029d3660046130bf565b6108af565b3480156102ae57600080fd5b506101b96102bd3660046131ba565b610914565b3480156102ce57600080fd5b506101b96102dd3660046130bf565b610a32565b3480156102ee57600080fd5b506101b96102fd3660046133bc565b610a97565b34801561030e57600080fd5b50610317610d19565b6040516101909190613656565b34801561033057600080fd5b506101db61033f3660046131ba565b610daf565b34801561035057600080fd5b5061025561035f366004613275565b610dc4565b34801561037057600080fd5b5061018361037f36600461306c565b610e68565b34801561039057600080fd5b5061025561039f366004613153565b610e7a565b3480156103b057600080fd5b506103b9610fa7565b6040516101909190613567565b3480156103d257600080fd5b506103b96103e1366004613380565b610fb6565b3480156103f257600080fd5b50610255610401366004613153565b610fd4565b34801561041257600080fd5b50610255610421366004613275565b611144565b34801561043257600080fd5b506101b96104413660046132e7565b611577565b34801561045257600080fd5b506101db610461366004613240565b611812565b34801561047257600080fd5b50610255610481366004613153565b611ac5565b34801561049257600080fd5b506102556104a1366004613153565b611bb6565b3480156104b257600080fd5b506103b9611cb9565b3480156104c757600080fd5b506101b96104d636600461306c565b611cc8565b3480156104e757600080fd5b50610317611d34565b60006020819052908152604090205481565b60005b83518110156105675761055e848281518110151561051f57fe5b90602001906020020151848381518110151561053757fe5b90602001906020020151848481518110151561054f57fe5b90602001906020020151611144565b50600101610505565b50505050565b60016020526000908152604090205460ff1681565b6105bd848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843750611d6b945050505050565b60408051808201909152601c81527f5369676e61747572652076616c69646174696f6e206661696c65642e00000000602082015290151561061d5760405160e560020a62461bcd0281526004016106149190613656565b60405180910390fd5b5050506000918252600560209081526040808420600160a060020a0390931684529190529020805460ff19166001179055565b600860205260009081526040902054600160a060020a031681565b610673612ced565b604080517fb4be83d5000000000000000000000000000000000000000000000000000000008082526060600483018181528851606485019081526020808b01516084870152958a015160a48601529189015160c4850152608089015160e485015260a089015161010485015260c089015161012485015260e08901516101448501526101008901516101648501526101208901516101848501526101408901516101a485019081526101608a01516101c4860152610180908190528901516101e4850181905292949092839291602486019183916102048801916101a08e0191601f82010460005b8181101561077957835185526020948501949093019260010161075b565b505050828203610160840152805180835260209283019291820191601f82010460005b818110156107ba57835185526020948501949093019260010161079c565b5050508b84525084810360209384019081528a518083529093918201918b81019190601f82010460005b818110156108025783518552602094850194909301926001016107e4565b5060808a8b86038c305af4808015610821576001811461083f57610862565b60008e52600060208f0152600060408f0152600060608f0152610862565b8b518e5260208c015160208f015260408c015160408f015260608c015160608f01525b505050505050505050505050509392505050565b60005b81518110156108ab576108a2828281518110151561089357fe5b90602001906020020151611812565b50600101610879565b5050565b60005b83518110156105675761090b84828151811015156108cc57fe5b9060200190602002015184838151811015156108e457fe5b9060200190602002015184848151811015156108fc57fe5b90602001906020020151610dc4565b506001016108b2565b600160a060020a033316600090815260026020908152604091829020548251608081018452604481527f5370656369666965642073616c74206d75737420626520677265617465722074928101929092527f68616e206f7220657175616c20746f206578697374696e67206d616b65724570928201929092527f6f63682e000000000000000000000000000000000000000000000000000000006060820152600183019182116109da5760405160e560020a62461bcd0281526004016106149190613656565b50600160a060020a03331660008181526002602052604090819020839055517f666a5047451d0c744e58819166260f8048fe2786e33b3c1115af94887a451ca790610a26908490613705565b60405180910390a25050565b60005b835181101561056757610a8e8482815181101515610a4f57fe5b906020019060200201518483815181101515610a6757fe5b906020019060200201518484815181101515610a7f57fe5b9060200190602002015161066b565b50600101610a35565b600354600090819033600160a060020a03908116911614610acd5760405160e560020a62461bcd028152600401610614906136e7565b60ff8516600090815260086020908152604091829020548251606081018452603781527f4f6c642061737365742070726f787920646f6573206e6f74206d617463682061928101929092527f737365742070726f787920617420676976656e2069642e0000000000000000009282019290925290600160a060020a03858116911614610b6f5760405160e560020a62461bcd0281526004016106149190613656565b50839150600160a060020a03821615610c9e5781600160a060020a031663ae25532e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610bd957600080fd5b505af1158015610bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c11919081019061339e565b90508460ff168160ff1614606060405190810160405280602b81526020017f4e65772061737365742070726f787920696420646f6573206e6f74206d61746381526020017f6820676976656e2069642e000000000000000000000000000000000000000000815250901515610c9c5760405160e560020a62461bcd0281526004016106149190613656565b505b60ff851660009081526008602052604090819020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038516179055517f27ef5f484e50f2daf7c2d82c60fe4ce409009541176eb64095beac369db1d26090610d0a90879087908790613713565b60405180910390a15050505050565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610da55780601f10610d7a57610100808354040283529160200191610da5565b820191906000526020600020905b815481529060010190602001808311610d8857829003601f168201915b5050505050905090565b60066020526000908152604090205460ff1681565b610dcc612ced565b610dd7848484611144565b905082816020015114606060405190810160405280603381526020017f446573697265642066696c6c20616d6f756e7420636f756c64206e6f7420626581526020017f20636f6d706c6574656c792066696c6c65642e00000000000000000000000000815250901515610e605760405160e560020a62461bcd0281526004016106149190613656565b509392505050565b60026020526000908152604090205481565b610e82612ced565b600080610e8d612ced565b600092505b8651831015610f9d57610ede8784815181101515610eac57fe5b906020019060200201516101600151886000815181101515610eca57fe5b906020019060200201516101600151612312565b606060405190810160405280602b81526020016000805160206138778339815191528152602001600080516020613857833981519152815250901515610f3a5760405160e560020a62461bcd0281526004016106149190613656565b50610f4986856020015161235a565b9150610f758784815181101515610f5c57fe5b9060200190602002015183878681518110151561054f57fe5b9050610f81848261236c565b8584602001511415610f9257610f9d565b600190920191610e92565b5050509392505050565b600354600160a060020a031681565b60ff16600090815260086020526040902054600160a060020a031690565b610fdc612ced565b6000806000610fe9612ced565b600093505b87518410156111395761103a888581518110151561100857fe5b90602001906020020151610140015189600081518110151561102657fe5b906020019060200201516101400151612312565b606060405190810160405280602b815260200160008051602061387783398151915281526020016000805160206138578339815191528152509015156110965760405160e560020a62461bcd0281526004016106149190613656565b506110a587866000015161235a565b92506110e888858151811015156110b857fe5b9060200190602002015160a0015189868151811015156110d457fe5b9060200190602002015160800151856123ce565b915061111488858151811015156110fb57fe5b90602001906020020151838887815181101515610a7f57fe5b9050611120858261236c565b845187141561112e57611139565b600190930192610fee565b505050509392505050565b61114c612ced565b600080600061115a876123eb565b8751600160a060020a031660009081526002602052604090205461012089015191945011156111bb578260025b60ff167f21320c5ef8ee97b846ab83c18fe2743ef678215f5efebb892bddaa25c4c7ddd260405160405180910390a3610f9d565b60008381526001602052604090205460ff16156111da57826002611187565b60008381526020819052604090205415156112ef57608087015160408051808201909152601e815260008051602061381783398151915260208201529060001061123a5760405160e560020a62461bcd0281526004016106149190613656565b5060a087015160408051808201909152601e81526000805160206138178339815191526020820152906000106112865760405160e560020a62461bcd0281526004016106149190613656565b5061129683886000015187611d6b565b60408051808201909152601c81527f5369676e61747572652076616c69646174696f6e206661696c65642e0000000060208201529015156112ed5760405160e560020a62461bcd0281526004016106149190613656565b505b6060870151600160a060020a0316156113765733600160a060020a03168760600151600160a060020a0316146040805190810160405280601581526020017f496e76616c696420606d73672e73656e646572602e00000000000000000000008152509015156113745760405160e560020a62461bcd0281526004016106149190613656565b505b61137e612811565b6020880151909250600160a060020a03161561142f5781600160a060020a03168760200151600160a060020a031614606060405190810160405280602681526020017f46756e6374696f6e2063616c6c656420696e20616e20696e76616c696420636f81526020017f6e746578742e000000000000000000000000000000000000000000000000000081525090151561142d5760405160e560020a62461bcd0281526004016106149190613656565b505b60408051808201909152601e81526000805160206138178339815191526020820152600087116114755760405160e560020a62461bcd0281526004016106149190613656565b50610100870151421061148a57826000611187565b60a08701516000848152602081905260409020546114a8919061235a565b90508015156114b957826001611187565b6114c3868261283f565b6020850181905260a088015160808901516114df929190612857565b1561151e5760405183906003907f21320c5ef8ee97b846ab83c18fe2743ef678215f5efebb892bddaa25c4c7ddd290600090a360006020850152610f9d565b600083815260208181526040909120549085015161153c91906128ad565b6000848152602081815260409091209190915584015161155f90889084906128bc565b606087015260408601528452610f9d87838587612a6f565b600754600090600160a060020a03161561159057600080fd5b308786866040518085600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401848152602001838380828437604080519190930181900381206000818152600660209081529085902054606084018652602684527f5472616e73616374696f6e2068617320616c7265616479206265656e20657865918401919091527f63757465642e000000000000000000000000000000000000000000000000000094830194909452985096505060ff16159350611672925050505760405160e560020a62461bcd0281526004016106149190613656565b5033600160a060020a031686600160a060020a031614151561174a576116c9818785858080601f01602080910402602001604051908101604052809392919081815260200183838082843750611d6b945050505050565b60408051808201909152601c81527f5369676e61747572652076616c69646174696f6e206661696c65642e0000000060208201529015156117205760405160e560020a62461bcd0281526004016106149190613656565b506007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0388161790555b60008181526006602052604090819020805460ff1916600117905551600160a060020a033016908690869080838380828437820191505092505050600060405180830381855af460408051808201909152601d81527f5472616e73616374696f6e20657865637574696f6e206661696c65642e00000060208201529250151590506117eb5760405160e560020a62461bcd0281526004016106149190613656565b50506007805473ffffffffffffffffffffffffffffffffffffffff19169055505050505050565b6000806000611820846123eb565b608085015160408051808201909152601e8152600080516020613817833981519152602082015291935060001061186d5760405160e560020a62461bcd0281526004016106149190613656565b5060a084015160408051808201909152601e81526000805160206138178339815191526020820152906000106118b95760405160e560020a62461bcd0281526004016106149190613656565b506060840151600160a060020a0316156119415733600160a060020a03168460600151600160a060020a0316146040805190810160405280601581526020017f496e76616c696420606d73672e73656e646572602e000000000000000000000081525090151561193f5760405160e560020a62461bcd0281526004016106149190613656565b505b611949612811565b845160408051606081018252602681527f46756e6374696f6e2063616c6c656420696e20616e20696e76616c696420636f60208201527f6e746578742e000000000000000000000000000000000000000000000000000091810191909152919250600160a060020a038084169116146119d85760405160e560020a62461bcd0281526004016106149190613656565b506101008401514210611a21578160005b60ff167f21320c5ef8ee97b846ab83c18fe2743ef678215f5efebb892bddaa25c4c7ddd260405160405180910390a360009250611abe565b60008281526001602052604090205460ff1615611a40578160026119e9565b600082815260016020819052604091829020805460ff1916909117905584810151855161014087015161016088015193518694600160a060020a0394851694909316927fb1ad640e9e79b6fdbc3c415dc2914ab54e753d2971f51eab910f7aa317a3163a92611ab192909190613694565b60405180910390a4600192505b5050919050565b611acd612ced565b600080611ad8612ced565b600092505b8651831015610f9d57611af78784815181101515610eac57fe5b606060405190810160405280602b81526020016000805160206138778339815191528152602001600080516020613857833981519152815250901515611b535760405160e560020a62461bcd0281526004016106149190613656565b50611b6286856020015161235a565b9150611b8e8784815181101515611b7557fe5b90602001906020020151838786815181101515610a7f57fe5b9050611b9a848261236c565b8584602001511415611bab57610f9d565b600190920191611add565b611bbe612ced565b6000806000611bcb612ced565b600093505b875184101561113957611bea888581518110151561100857fe5b606060405190810160405280602b81526020016000805160206138778339815191528152602001600080516020613857833981519152815250901515611c465760405160e560020a62461bcd0281526004016106149190613656565b50611c5587866000015161235a565b9250611c6888858151811015156110b857fe5b9150611c948885815181101515611c7b57fe5b9060200190602002015183888781518110151561054f57fe5b9050611ca0858261236c565b8451871415611cae57611139565b600190930192611bd0565b600754600160a060020a031681565b60035433600160a060020a03908116911614611cf95760405160e560020a62461bcd028152600401610614906136e7565b600160a060020a03811615611d31576003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b60408051808201909152600b81527f322e302e312d616c706861000000000000000000000000000000000000000000602082015281565b600080600080600080600187511015604080519081016040528060198152602001600080516020613837833981519152815250901515611dc15760405160e560020a62461bcd0281526004016106149190613656565b50866000815181101515611dd157fe5b90602001015160f860020a900460f860020a0260f860020a900460ff166007811115611df957fe5b94506000856007811115611e0957fe5b1415611e2a5760405160e560020a62461bcd028152600401610614906136d7565b6001856007811115611e3857fe5b1415611e905786516040805180820190915260198152600080516020613837833981519152602082015290600114611e865760405160e560020a62461bcd0281526004016106149190613656565b5060009550612306565b6002856007811115611e9e57fe5b1415611f0c5786516040805180820190915260198152600080516020613837833981519152602082015290600114611eec5760405160e560020a62461bcd0281526004016106149190613656565b5033600160a060020a031688600160a060020a0316149550859550612306565b6003856007811115611f1a57fe5b14156120475786516040805180820190915260198152600080516020613837833981519152602082015290604214611f685760405160e560020a62461bcd0281526004016106149190613656565b50866001815181101515611f7857fe5b016020015160f860020a908190048102049350611f96876002612af3565b9250611fa3876022612af3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c81018c9052815190819003603c0181206000825260209190910191829052919350600191611fff91879087908790613618565b60206040516020810390808403906000865af1158015612023573d6000803e3d6000fd5b5050604051601f190151600160a060020a038a811690821614975091506123069050565b600485600781111561205557fe5b141561210357865160408051808201909152601981526000805160206138378339815191526020820152906042146120a35760405160e560020a62461bcd0281526004016106149190613656565b508660018151811015156120b357fe5b016020015160f860020a9081900481020493506120d1876002612af3565b92506120de876022612af3565b915060018985858560405160008152602001604052604051611fff9493929190613618565b600585600781111561211157fe5b14156121f6578651604080518082019091526019815260008051602061383783398151915260208201529060421461215f5760405160e560020a62461bcd0281526004016106149190613656565b5086600181518110151561216f57fe5b016020015160f860020a90819004810204935061218d876002612af3565b925061219a876022612af3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a4100000000008152601b81018c9052815190819003603b0181206000825260209190910191829052919350600191611fff91879087908790613618565b600685600781111561220457fe5b14156122aa576040517f1626ba7e000000000000000000000000000000000000000000000000000000008152600160a060020a03891690631626ba7e90612251908c908b906004016135f8565b602060405180830381600087803b15801561226b57600080fd5b505af115801561227f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122a3919081019061319c565b9550612306565b60078560078111156122b857fe5b14156122eb576000898152600560209081526040808320600160a060020a038c16845290915290205460ff169550612306565b60405160e560020a62461bcd028152600401610614906136c7565b50505050509392505050565b60006020601f8451010460018101905060005b8181101561235157602081028581015190850151808214945084612347578392505b5050600101612325565b50505b92915050565b60008282111561236657fe5b50900390565b8151815161237a91906128ad565b82526020808301519082015161239091906128ad565b6020830152604080830151908201516123a991906128ad565b6040830152606080830151908201516123c291906128ad565b60609092019190915250565b60006123e36123dd8584612b87565b84612bab565b949350505050565b600060405180807f616464726573732065786368616e676541646472657373000000000000000000815250601701807f61646472657373206d616b657241646472657373000000000000000000000000815250601401807f616464726573732074616b657241646472657373000000000000000000000000815250601401807f6164647265737320666565526563697069656e74416464726573730000000000815250601b01807f616464726573732073656e646572416464726573730000000000000000000000815250601501807f75696e74323536206d616b65724173736574416d6f756e740000000000000000815250601801807f75696e743235362074616b65724173736574416d6f756e740000000000000000815250601801807f75696e74323536206d616b657246656500000000000000000000000000000000815250601001807f75696e743235362074616b657246656500000000000000000000000000000000815250601001807f75696e743235362065787069726174696f6e54696d655365636f6e6473000000815250601d01807f75696e743235362073616c740000000000000000000000000000000000000000815250600c01807f6279746573206d616b6572417373657444617461000000000000000000000000815250601401807f62797465732074616b65724173736574446174610000000000000000000000008152506014019050604051809103902030836000015184602001518560400151866060015187608001518860a001518960c001518a60e001518b61010001518c61012001518d61014001518e6101600151604051808e600160a060020a0316600160a060020a03166c010000000000000000000000000281526014018d600160a060020a0316600160a060020a03166c010000000000000000000000000281526014018c600160a060020a0316600160a060020a03166c010000000000000000000000000281526014018b600160a060020a0316600160a060020a03166c010000000000000000000000000281526014018a600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140189815260200188815260200187815260200186815260200185815260200184815260200183805190602001908083835b6020831061275a5780518252601f19909201916020918201910161273b565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106127a25780518252601f199092019160209182019101612783565b6001836020036101000a0380198251168184511680821785525050505050509050019d5050505050505050505050505050604051809103902060405180836000191660001916815260200182600019166000191681526020019250505060405180910390209050809050919050565b6007546000908190600160a060020a03161561283857600754600160a060020a0316612354565b3392915050565b600081831061284e5781612850565b825b9392505050565b60008060008480151561286657fe5b868509915081151561287b57600092506128a4565b61289a61288b83620f4240612b87565b6128958887612b87565b612bab565b6103e88111935090505b50509392505050565b60008282018381101561285057fe5b60008060006128d4848760a0015188608001516123ce565b92506128eb86610140015187600001518786612bc2565b61290086610160015186886000015187612bc2565b612913848760a001518860c001516123ce565b6004805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529395506129b59392918301828280156129a05780601f10612975576101008083540402835291602001916129a0565b820191906000526020600020905b81548152906001019060200180831161298357829003601f168201915b50505050508760000151886040015185612bc2565b6129c8848760a001518860e001516123ce565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152939450612a66939291830182828015612a555780601f10612a2a57610100808354040283529160200191612a55565b820191906000526020600020905b815481529060010190602001808311612a3857829003601f168201915b505050505086886040015184612bc2565b93509350939050565b81600019168460400151600160a060020a03168560000151600160a060020a03167fde19f18e1b56e6eada7ed95cca8398b602be32f5864640537ee9a9a3532bb29d8685600001518660200151876040015188606001518c61014001518d6101600151604051612ae59796959493929190613575565b60405180910390a450505050565b60008160200183511015606060405190810160405280602b81526020017f4c656e677468206d7573742062652067726561746572207468616e206f72206581526020017f7175616c20746f2033322e000000000000000000000000000000000000000000815250901515612b7d5760405160e560020a62461bcd0281526004016106149190613656565b5050016020015190565b6000828202831580612ba35750828482811515612ba057fe5b04145b151561285057fe5b6000808284811515612bb957fe5b04949350505050565b6000806000831115612ce557855160408051808201909152601e81527f4c656e677468206d7573742062652067726561746572207468616e20302e000060208201529060011115612c295760405160e560020a62461bcd0281526004016106149190613656565b50856000815181101515612c3957fe5b6020910181015160f860020a9081900481020460ff8116600090815260089092526040918290205491517fa85e59e4000000000000000000000000000000000000000000000000000000008152909350600160a060020a039091169150819063a85e59e490612cb2908990899089908990600401613667565b600060405180830381600087803b158015612ccc57600080fd5b505af1158015612ce0573d6000803e3d6000fd5b505050505b505050505050565b608060405190810160405280600081526020016000815260200160008152602001600081525090565b600061285082356137af565b6000601f82018313612d3357600080fd5b8135612d46612d4182613762565b61373b565b81815260209384019390925082018360005b83811015612d845781358601612d6e8882612ebc565b8452506020928301929190910190600101612d58565b5050505092915050565b6000601f82018313612d9f57600080fd5b8135612dad612d4182613762565b81815260209384019390925082018360005b83811015612d845781358601612dd58882612f0b565b8452506020928301929190910190600101612dbf565b6000601f82018313612dfc57600080fd5b8135612e0a612d4182613762565b91508181835260208401935060208101905083856020840282011115612e2f57600080fd5b60005b83811015612d845781612e458882612e67565b8452506020928301929190910190600101612e32565b600061285082516137bb565b600061285082356137c0565b600080601f83018413612e8557600080fd5b50813567ffffffffffffffff811115612e9d57600080fd5b602083019150836001820283011115612eb557600080fd5b9250929050565b6000601f82018313612ecd57600080fd5b8135612edb612d4182613783565b91508082526020830160208301858383011115612ef757600080fd5b612f028382846137d4565b50505092915050565b60006101808284031215612f1e57600080fd5b612f2961018061373b565b90506000612f378484612d16565b8252506020612f4884848301612d16565b6020830152506040612f5c84828501612d16565b6040830152506060612f7084828501612d16565b6060830152506080612f8484828501612e67565b60808301525060a0612f9884828501612e67565b60a08301525060c0612fac84828501612e67565b60c08301525060e0612fc084828501612e67565b60e083015250610100612fd584828501612e67565b61010083015250610120612feb84828501612e67565b6101208301525061014082013567ffffffffffffffff81111561300d57600080fd5b61301984828501612ebc565b6101408301525061016082013567ffffffffffffffff81111561303b57600080fd5b61304784828501612ebc565b6101608301525092915050565b600061285082356137c3565b600061285082516137c3565b60006020828403121561307e57600080fd5b60006123e38484612d16565b60006020828403121561309c57600080fd5b813567ffffffffffffffff8111156130b357600080fd5b6123e384828501612d8e565b6000806000606084860312156130d457600080fd5b833567ffffffffffffffff8111156130eb57600080fd5b6130f786828701612d8e565b935050602084013567ffffffffffffffff81111561311457600080fd5b61312086828701612deb565b925050604084013567ffffffffffffffff81111561313d57600080fd5b61314986828701612d22565b9150509250925092565b60008060006060848603121561316857600080fd5b833567ffffffffffffffff81111561317f57600080fd5b61318b86828701612d8e565b935050602061312086828701612e67565b6000602082840312156131ae57600080fd5b60006123e38484612e5b565b6000602082840312156131cc57600080fd5b60006123e38484612e67565b600080600080606085870312156131ee57600080fd5b60006131fa8787612e67565b945050602061320b87828801612d16565b935050604085013567ffffffffffffffff81111561322857600080fd5b61323487828801612e73565b95989497509550505050565b60006020828403121561325257600080fd5b813567ffffffffffffffff81111561326957600080fd5b6123e384828501612f0b565b60008060006060848603121561328a57600080fd5b833567ffffffffffffffff8111156132a157600080fd5b6132ad86828701612f0b565b93505060206132be86828701612e67565b925050604084013567ffffffffffffffff8111156132db57600080fd5b61314986828701612ebc565b6000806000806000806080878903121561330057600080fd5b600061330c8989612e67565b965050602061331d89828a01612d16565b955050604087013567ffffffffffffffff81111561333a57600080fd5b61334689828a01612e73565b9450945050606087013567ffffffffffffffff81111561336557600080fd5b61337189828a01612e73565b92509250509295509295509295565b60006020828403121561339257600080fd5b60006123e38484613054565b6000602082840312156133b057600080fd5b60006123e38484613060565b6000806000606084860312156133d157600080fd5b60006133dd8686613054565b93505060206133ee86828701612d16565b925050604061314986828701612d16565b613408816137af565b82525050565b613408816137bb565b613408816137c0565b600061342b826137ab565b80845261343f8160208601602086016137e0565b6134488161380c565b9093016020019392505050565b613408816137c9565b601b81527f556e737570706f72746564207369676e617475726520747970652e0000000000602082015260400190565b601781527f496c6c6567616c207369676e617475726520747970652e000000000000000000602082015260400190565b603381527f4f6e6c7920636f6e7472616374206f776e657220697320616c6c6f776564207460208201527f6f2063616c6c2074686973206d6574686f642e00000000000000000000000000604082015260600190565b805160808301906135258482613417565b5060208201516135386020850182613417565b50604082015161354b6040850182613417565b5060608201516105676060850182613417565b613408816137c3565b6020810161235482846133ff565b60e08101613583828a6133ff565b6135906020830189613417565b61359d6040830188613417565b6135aa6060830187613417565b6135b76080830186613417565b81810360a08301526135c98185613420565b905081810360c08301526135dd8184613420565b9998505050505050505050565b60208101612354828461340e565b604081016136068285613417565b81810360208301526123e38184613420565b608081016136268287613417565b613633602083018661355e565b6136406040830185613417565b61364d6060830184613417565b95945050505050565b602080825281016128508184613420565b608080825281016136788187613420565b905061368760208301866133ff565b61364060408301856133ff565b604080825281016136a58185613420565b905081810360208301526123e38184613420565b602081016123548284613455565b602080825281016123548161345e565b602080825281016123548161348e565b60208082528101612354816134be565b608081016123548284613514565b602081016123548284613417565b60608101613721828661355e565b61372e60208301856133ff565b6123e360408301846133ff565b60405181810167ffffffffffffffff8111828210171561375a57600080fd5b604052919050565b600067ffffffffffffffff82111561377957600080fd5b5060209081020190565b600067ffffffffffffffff82111561379a57600080fd5b506020601f91909101601f19160190565b5190565b600160a060020a031690565b151590565b90565b60ff1690565b6000612354826137af565b82818337506000910152565b60005b838110156137fb5781810151838201526020016137e3565b838111156105675750506000910152565b601f01601f1916905600416d6f756e74206d7573742062652067726561746572207468616e20302e0000496e76616c6964207369676e6174757265206c656e6774682e0000000000000065616368206f726465722e00000000000000000000000000000000000000000041737365742064617461206d757374206265207468652073616d6520666f7220a265627a7a723058200666b23fff531a0fb158ec1c08f4a1072a3c0ff8743d63e1dc295c6289296cfc6c6578706572696d656e74616cf50037",
                "opcodes":
                    "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x15E JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x288CDC91 DUP2 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x297BB70B EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x2AC12622 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x3683EF8E EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x38077164 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x3E228BAE EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x4AC14782 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x4D0AE546 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x4F9559B1 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x50DDE190 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x5C78D0C7 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x63589905 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x642F2EAF EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x64A3BC15 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x6F3627F8 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x7E1D9808 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x92C1421E EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xA3E20380 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xB4BE83D5 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xBFC8BFCE EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xD46B02C3 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0xDD1C7D18 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xE5FA431B EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0xEEA086BA EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x4DB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0x31BA JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x3705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x30BF JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DB PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x31BA JUMP JUMPDEST PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x35EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x31D8 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0x3380 JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x36B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x3275 JUMP JUMPDEST PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x36F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0x308A JUMP JUMPDEST PUSH2 0x876 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x30BF JUMP JUMPDEST PUSH2 0x8AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x31BA JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x30BF JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0x33BC JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DB PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x31BA JUMP JUMPDEST PUSH2 0xDAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x35F CALLDATASIZE PUSH1 0x4 PUSH2 0x3275 JUMP JUMPDEST PUSH2 0xDC4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x306C JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0x3153 JUMP JUMPDEST PUSH2 0xE7A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x3567 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3380 JUMP JUMPDEST PUSH2 0xFB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x401 CALLDATASIZE PUSH1 0x4 PUSH2 0x3153 JUMP JUMPDEST PUSH2 0xFD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x3275 JUMP JUMPDEST PUSH2 0x1144 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x32E7 JUMP JUMPDEST PUSH2 0x1577 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DB PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x3240 JUMP JUMPDEST PUSH2 0x1812 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x481 CALLDATASIZE PUSH1 0x4 PUSH2 0x3153 JUMP JUMPDEST PUSH2 0x1AC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x4A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3153 JUMP JUMPDEST PUSH2 0x1BB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x1CB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x306C JUMP JUMPDEST PUSH2 0x1CC8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x567 JUMPI PUSH2 0x55E DUP5 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x51F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x537 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x54F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1144 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x505 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x5BD DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x1D6B SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x5369676E61747572652076616C69646174696F6E206661696C65642E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x61D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH2 0x673 PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xB4BE83D500000000000000000000000000000000000000000000000000000000 DUP1 DUP3 MSTORE PUSH1 0x60 PUSH1 0x4 DUP4 ADD DUP2 DUP2 MSTORE DUP9 MLOAD PUSH1 0x64 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 DUP12 ADD MLOAD PUSH1 0x84 DUP8 ADD MSTORE SWAP6 DUP11 ADD MLOAD PUSH1 0xA4 DUP7 ADD MSTORE SWAP2 DUP10 ADD MLOAD PUSH1 0xC4 DUP6 ADD MSTORE PUSH1 0x80 DUP10 ADD MLOAD PUSH1 0xE4 DUP6 ADD MSTORE PUSH1 0xA0 DUP10 ADD MLOAD PUSH2 0x104 DUP6 ADD MSTORE PUSH1 0xC0 DUP10 ADD MLOAD PUSH2 0x124 DUP6 ADD MSTORE PUSH1 0xE0 DUP10 ADD MLOAD PUSH2 0x144 DUP6 ADD MSTORE PUSH2 0x100 DUP10 ADD MLOAD PUSH2 0x164 DUP6 ADD MSTORE PUSH2 0x120 DUP10 ADD MLOAD PUSH2 0x184 DUP6 ADD MSTORE PUSH2 0x140 DUP10 ADD MLOAD PUSH2 0x1A4 DUP6 ADD SWAP1 DUP2 MSTORE PUSH2 0x160 DUP11 ADD MLOAD PUSH2 0x1C4 DUP7 ADD MSTORE PUSH2 0x180 SWAP1 DUP2 SWAP1 MSTORE DUP10 ADD MLOAD PUSH2 0x1E4 DUP6 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP5 SWAP1 SWAP3 DUP4 SWAP3 SWAP2 PUSH1 0x24 DUP7 ADD SWAP2 DUP4 SWAP2 PUSH2 0x204 DUP9 ADD SWAP2 PUSH2 0x1A0 DUP15 ADD SWAP2 PUSH1 0x1F DUP3 ADD DIV PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x779 JUMPI DUP4 MLOAD DUP6 MSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x75B JUMP JUMPDEST POP POP POP DUP3 DUP3 SUB PUSH2 0x160 DUP5 ADD MSTORE DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 DUP3 ADD SWAP2 PUSH1 0x1F DUP3 ADD DIV PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7BA JUMPI DUP4 MLOAD DUP6 MSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x79C JUMP JUMPDEST POP POP POP DUP12 DUP5 MSTORE POP DUP5 DUP2 SUB PUSH1 0x20 SWAP4 DUP5 ADD SWAP1 DUP2 MSTORE DUP11 MLOAD DUP1 DUP4 MSTORE SWAP1 SWAP4 SWAP2 DUP3 ADD SWAP2 DUP12 DUP2 ADD SWAP2 SWAP1 PUSH1 0x1F DUP3 ADD DIV PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x802 JUMPI DUP4 MLOAD DUP6 MSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x7E4 JUMP JUMPDEST POP PUSH1 0x80 DUP11 DUP12 DUP7 SUB DUP13 ADDRESS GAS DELEGATECALL DUP1 DUP1 ISZERO PUSH2 0x821 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x83F JUMPI PUSH2 0x862 JUMP JUMPDEST PUSH1 0x0 DUP15 MSTORE PUSH1 0x0 PUSH1 0x20 DUP16 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP16 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP16 ADD MSTORE PUSH2 0x862 JUMP JUMPDEST DUP12 MLOAD DUP15 MSTORE PUSH1 0x20 DUP13 ADD MLOAD PUSH1 0x20 DUP16 ADD MSTORE PUSH1 0x40 DUP13 ADD MLOAD PUSH1 0x40 DUP16 ADD MSTORE PUSH1 0x60 DUP13 ADD MLOAD PUSH1 0x60 DUP16 ADD MSTORE JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x8AB JUMPI PUSH2 0x8A2 DUP3 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x893 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1812 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x879 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x567 JUMPI PUSH2 0x90B DUP5 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x8CC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x8E4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x8FC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0xDC4 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE PUSH1 0x44 DUP2 MSTORE PUSH32 0x5370656369666965642073616C74206D75737420626520677265617465722074 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x68616E206F7220657175616C20746F206578697374696E67206D616B65724570 SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x6F63682E00000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 DUP4 ADD SWAP2 DUP3 GT PUSH2 0x9DA JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0x666A5047451D0C744E58819166260F8048FE2786E33B3C1115AF94887A451CA7 SWAP1 PUSH2 0xA26 SWAP1 DUP5 SWAP1 PUSH2 0x3705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x567 JUMPI PUSH2 0xA8E DUP5 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xA4F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xA67 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xA7F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x66B JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xACD JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP1 PUSH2 0x36E7 JUMP JUMPDEST PUSH1 0xFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x37 DUP2 MSTORE PUSH32 0x4F6C642061737365742070726F787920646F6573206E6F74206D617463682061 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x737365742070726F787920617420676976656E2069642E000000000000000000 SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 DUP2 AND SWAP2 AND EQ PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP DUP4 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO PUSH2 0xC9E JUMPI DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0xAE25532E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xC11 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x339E JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND EQ PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E65772061737365742070726F787920696420646F6573206E6F74206D617463 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6820676976656E2069642E000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP JUMPDEST PUSH1 0xFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND OR SWAP1 SSTORE MLOAD PUSH32 0x27EF5F484E50F2DAF7C2D82C60FE4CE409009541176EB64095BEAC369DB1D260 SWAP1 PUSH2 0xD0A SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x3713 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xDA5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD7A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDA5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD88 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xDCC PUSH2 0x2CED JUMP JUMPDEST PUSH2 0xDD7 DUP5 DUP5 DUP5 PUSH2 0x1144 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x20 ADD MLOAD EQ PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446573697265642066696C6C20616D6F756E7420636F756C64206E6F74206265 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x20636F6D706C6574656C792066696C6C65642E00000000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xE60 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE82 PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE8D PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 SWAP3 POP JUMPDEST DUP7 MLOAD DUP4 LT ISZERO PUSH2 0xF9D JUMPI PUSH2 0xEDE DUP8 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xEAC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x160 ADD MLOAD DUP9 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xECA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x160 ADD MLOAD PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3877 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3857 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xF3A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH2 0xF49 DUP7 DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x235A JUMP JUMPDEST SWAP2 POP PUSH2 0xF75 DUP8 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF5C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP4 DUP8 DUP7 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x54F JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0xF81 DUP5 DUP3 PUSH2 0x236C JUMP JUMPDEST DUP6 DUP5 PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0xF92 JUMPI PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0xE92 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xFDC PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xFE9 PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP8 MLOAD DUP5 LT ISZERO PUSH2 0x1139 JUMPI PUSH2 0x103A DUP9 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1008 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x140 ADD MLOAD DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1026 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x140 ADD MLOAD PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3877 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3857 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1096 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH2 0x10A5 DUP8 DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0x235A JUMP JUMPDEST SWAP3 POP PUSH2 0x10E8 DUP9 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x10B8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0xA0 ADD MLOAD DUP10 DUP7 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x10D4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x80 ADD MLOAD DUP6 PUSH2 0x23CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1114 DUP9 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x10FB JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP4 DUP9 DUP8 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xA7F JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x1120 DUP6 DUP3 PUSH2 0x236C JUMP JUMPDEST DUP5 MLOAD DUP8 EQ ISZERO PUSH2 0x112E JUMPI PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 PUSH2 0xFEE JUMP JUMPDEST POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x114C PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x115A DUP8 PUSH2 0x23EB JUMP JUMPDEST DUP8 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x120 DUP10 ADD MLOAD SWAP2 SWAP5 POP GT ISZERO PUSH2 0x11BB JUMPI DUP3 PUSH1 0x2 JUMPDEST PUSH1 0xFF AND PUSH32 0x21320C5EF8EE97B846AB83C18FE2743EF678215F5EFEBB892BDDAA25C4C7DDD2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11DA JUMPI DUP3 PUSH1 0x2 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x12EF JUMPI PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3817 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 LT PUSH2 0x123A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3817 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 LT PUSH2 0x1286 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH2 0x1296 DUP4 DUP9 PUSH1 0x0 ADD MLOAD DUP8 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x5369676E61747572652076616C69646174696F6E206661696C65642E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x12ED JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH2 0x1376 JUMPI CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420606D73672E73656E646572602E0000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1374 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP JUMPDEST PUSH2 0x137E PUSH2 0x2811 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH2 0x142F JUMPI DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP8 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46756E6374696F6E2063616C6C656420696E20616E20696E76616C696420636F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E746578742E0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x142D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3817 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP8 GT PUSH2 0x1475 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH2 0x100 DUP8 ADD MLOAD TIMESTAMP LT PUSH2 0x148A JUMPI DUP3 PUSH1 0x0 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x14A8 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST SWAP1 POP DUP1 ISZERO ISZERO PUSH2 0x14B9 JUMPI DUP3 PUSH1 0x1 PUSH2 0x1187 JUMP JUMPDEST PUSH2 0x14C3 DUP7 DUP3 PUSH2 0x283F JUMP JUMPDEST PUSH1 0x20 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0x80 DUP10 ADD MLOAD PUSH2 0x14DF SWAP3 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST ISZERO PUSH2 0x151E JUMPI PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x3 SWAP1 PUSH32 0x21320C5EF8EE97B846AB83C18FE2743EF678215F5EFEBB892BDDAA25C4C7DDD2 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 DUP6 ADD MLOAD PUSH2 0x153C SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP5 ADD MLOAD PUSH2 0x155F SWAP1 DUP9 SWAP1 DUP5 SWAP1 PUSH2 0x28BC JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE DUP5 MSTORE PUSH2 0xF9D DUP8 DUP4 DUP6 DUP8 PUSH2 0x2A6F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH2 0x1590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP4 ADD DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP1 DUP6 SWAP1 KECCAK256 SLOAD PUSH1 0x60 DUP5 ADD DUP7 MSTORE PUSH1 0x26 DUP5 MSTORE PUSH32 0x5472616E73616374696F6E2068617320616C7265616479206265656E20657865 SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x63757465642E0000000000000000000000000000000000000000000000000000 SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP9 POP SWAP7 POP POP PUSH1 0xFF AND ISZERO SWAP4 POP PUSH2 0x1672 SWAP3 POP POP POP JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO ISZERO PUSH2 0x174A JUMPI PUSH2 0x16C9 DUP2 DUP8 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x1D6B SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x5369676E61747572652076616C69646174696F6E206661696C65642E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x1720 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB ADDRESS AND SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E73616374696F6E20657865637574696F6E206661696C65642E000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP3 POP ISZERO ISZERO SWAP1 POP PUSH2 0x17EB JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1820 DUP5 PUSH2 0x23EB JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3817 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP4 POP PUSH1 0x0 LT PUSH2 0x186D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3817 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 LT PUSH2 0x18B9 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH2 0x1941 JUMPI CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420606D73672E73656E646572602E0000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x193F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP JUMPDEST PUSH2 0x1949 PUSH2 0x2811 JUMP JUMPDEST DUP5 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH32 0x46756E6374696F6E2063616C6C656420696E20616E20696E76616C696420636F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6E746578742E0000000000000000000000000000000000000000000000000000 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP2 AND EQ PUSH2 0x19D8 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH2 0x100 DUP5 ADD MLOAD TIMESTAMP LT PUSH2 0x1A21 JUMPI DUP2 PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH32 0x21320C5EF8EE97B846AB83C18FE2743EF678215F5EFEBB892BDDAA25C4C7DDD2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SWAP3 POP PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1A40 JUMPI DUP2 PUSH1 0x2 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP5 DUP2 ADD MLOAD DUP6 MLOAD PUSH2 0x140 DUP8 ADD MLOAD PUSH2 0x160 DUP9 ADD MLOAD SWAP4 MLOAD DUP7 SWAP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP4 AND SWAP3 PUSH32 0xB1AD640E9E79B6FDBC3C415DC2914AB54E753D2971F51EAB910F7AA317A3163A SWAP3 PUSH2 0x1AB1 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x3694 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1AD8 PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 SWAP3 POP JUMPDEST DUP7 MLOAD DUP4 LT ISZERO PUSH2 0xF9D JUMPI PUSH2 0x1AF7 DUP8 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xEAC JUMPI INVALID JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3877 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3857 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1B53 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH2 0x1B62 DUP7 DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x235A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8E DUP8 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1B75 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP4 DUP8 DUP7 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xA7F JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x1B9A DUP5 DUP3 PUSH2 0x236C JUMP JUMPDEST DUP6 DUP5 PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0x1BAB JUMPI PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x1ADD JUMP JUMPDEST PUSH2 0x1BBE PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1BCB PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP8 MLOAD DUP5 LT ISZERO PUSH2 0x1139 JUMPI PUSH2 0x1BEA DUP9 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1008 JUMPI INVALID JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3877 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3857 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1C46 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH2 0x1C55 DUP8 DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0x235A JUMP JUMPDEST SWAP3 POP PUSH2 0x1C68 DUP9 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x10B8 JUMPI INVALID JUMPDEST SWAP2 POP PUSH2 0x1C94 DUP9 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1C7B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP4 DUP9 DUP8 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x54F JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x1CA0 DUP6 DUP3 PUSH2 0x236C JUMP JUMPDEST DUP5 MLOAD DUP8 EQ ISZERO PUSH2 0x1CAE JUMPI PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1CF9 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP1 PUSH2 0x36E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x1D31 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH32 0x322E302E312D616C706861000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 DUP8 MLOAD LT ISZERO PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3837 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1DC1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1DD1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xF8 PUSH1 0x2 EXP MUL PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1DF9 JUMPI INVALID JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1E09 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1E2A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP1 PUSH2 0x36D7 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1E38 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1E90 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3837 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x1E86 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 POP PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1E9E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1F0C JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3837 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x1EEC JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP9 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ SWAP6 POP DUP6 SWAP6 POP PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x3 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1F1A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2047 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3837 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x1F68 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1F78 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x1F96 DUP8 PUSH1 0x2 PUSH2 0x2AF3 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FA3 DUP8 PUSH1 0x22 PUSH2 0x2AF3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3C ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x1FFF SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x3618 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2023 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 DUP2 AND SWAP1 DUP3 AND EQ SWAP8 POP SWAP2 POP PUSH2 0x2306 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2055 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2103 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3837 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x20A3 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x20B3 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x20D1 DUP8 PUSH1 0x2 PUSH2 0x2AF3 JUMP JUMPDEST SWAP3 POP PUSH2 0x20DE DUP8 PUSH1 0x22 PUSH2 0x2AF3 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP10 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1FFF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3618 JUMP JUMPDEST PUSH1 0x5 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2111 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x21F6 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3837 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x215F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x216F JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x218D DUP8 PUSH1 0x2 PUSH2 0x2AF3 JUMP JUMPDEST SWAP3 POP PUSH2 0x219A DUP8 PUSH1 0x22 PUSH2 0x2AF3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A410000000000 DUP2 MSTORE PUSH1 0x1B DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3B ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x1FFF SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x3618 JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2204 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x22AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND SWAP1 PUSH4 0x1626BA7E SWAP1 PUSH2 0x2251 SWAP1 DUP13 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x35F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x226B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x227F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x22A3 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x319C JUMP JUMPDEST SWAP6 POP PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x7 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x22B8 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x22EB JUMPI PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP6 POP PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP1 PUSH2 0x36C7 JUMP JUMPDEST POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP5 MLOAD ADD DIV PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2351 JUMPI PUSH1 0x20 DUP2 MUL DUP6 DUP2 ADD MLOAD SWAP1 DUP6 ADD MLOAD DUP1 DUP3 EQ SWAP5 POP DUP5 PUSH2 0x2347 JUMPI DUP4 SWAP3 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x2325 JUMP JUMPDEST POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2366 JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH2 0x237A SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MLOAD PUSH2 0x2390 SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MLOAD PUSH2 0x23A9 SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MLOAD PUSH2 0x23C2 SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E3 PUSH2 0x23DD DUP6 DUP5 PUSH2 0x2B87 JUMP JUMPDEST DUP5 PUSH2 0x2BAB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x616464726573732065786368616E676541646472657373000000000000000000 DUP2 MSTORE POP PUSH1 0x17 ADD DUP1 PUSH32 0x61646472657373206D616B657241646472657373000000000000000000000000 DUP2 MSTORE POP PUSH1 0x14 ADD DUP1 PUSH32 0x616464726573732074616B657241646472657373000000000000000000000000 DUP2 MSTORE POP PUSH1 0x14 ADD DUP1 PUSH32 0x6164647265737320666565526563697069656E74416464726573730000000000 DUP2 MSTORE POP PUSH1 0x1B ADD DUP1 PUSH32 0x616464726573732073656E646572416464726573730000000000000000000000 DUP2 MSTORE POP PUSH1 0x15 ADD DUP1 PUSH32 0x75696E74323536206D616B65724173736574416D6F756E740000000000000000 DUP2 MSTORE POP PUSH1 0x18 ADD DUP1 PUSH32 0x75696E743235362074616B65724173736574416D6F756E740000000000000000 DUP2 MSTORE POP PUSH1 0x18 ADD DUP1 PUSH32 0x75696E74323536206D616B657246656500000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x10 ADD DUP1 PUSH32 0x75696E743235362074616B657246656500000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x10 ADD DUP1 PUSH32 0x75696E743235362065787069726174696F6E54696D655365636F6E6473000000 DUP2 MSTORE POP PUSH1 0x1D ADD DUP1 PUSH32 0x75696E743235362073616C740000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xC ADD DUP1 PUSH32 0x6279746573206D616B6572417373657444617461000000000000000000000000 DUP2 MSTORE POP PUSH1 0x14 ADD DUP1 PUSH32 0x62797465732074616B6572417373657444617461000000000000000000000000 DUP2 MSTORE POP PUSH1 0x14 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 ADDRESS DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x80 ADD MLOAD DUP9 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0xC0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH2 0x100 ADD MLOAD DUP13 PUSH2 0x120 ADD MLOAD DUP14 PUSH2 0x140 ADD MLOAD DUP15 PUSH2 0x160 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP15 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP14 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP13 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP12 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP11 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x275A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x273B JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE DUP6 MLOAD SWAP2 SWAP1 SWAP4 ADD SWAP3 DUP6 ADD SWAP2 POP DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x27A2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH2 0x2838 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x2354 JUMP JUMPDEST CALLER SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x284E JUMPI DUP2 PUSH2 0x2850 JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP1 ISZERO ISZERO PUSH2 0x2866 JUMPI INVALID JUMPDEST DUP7 DUP6 MULMOD SWAP2 POP DUP2 ISZERO ISZERO PUSH2 0x287B JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x28A4 JUMP JUMPDEST PUSH2 0x289A PUSH2 0x288B DUP4 PUSH3 0xF4240 PUSH2 0x2B87 JUMP JUMPDEST PUSH2 0x2895 DUP9 DUP8 PUSH2 0x2B87 JUMP JUMPDEST PUSH2 0x2BAB JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT SWAP4 POP SWAP1 POP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x2850 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x28D4 DUP5 DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0x80 ADD MLOAD PUSH2 0x23CE JUMP JUMPDEST SWAP3 POP PUSH2 0x28EB DUP7 PUSH2 0x140 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD DUP8 DUP7 PUSH2 0x2BC2 JUMP JUMPDEST PUSH2 0x2900 DUP7 PUSH2 0x160 ADD MLOAD DUP7 DUP9 PUSH1 0x0 ADD MLOAD DUP8 PUSH2 0x2BC2 JUMP JUMPDEST PUSH2 0x2913 DUP5 DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD PUSH2 0x23CE JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP4 SWAP6 POP PUSH2 0x29B5 SWAP4 SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x29A0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2975 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x29A0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2983 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD DUP6 PUSH2 0x2BC2 JUMP JUMPDEST PUSH2 0x29C8 DUP5 DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0xE0 ADD MLOAD PUSH2 0x23CE JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP4 SWAP5 POP PUSH2 0x2A66 SWAP4 SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2A55 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A2A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A55 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A38 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP7 DUP9 PUSH1 0x40 ADD MLOAD DUP5 PUSH2 0x2BC2 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x0 NOT AND DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0xDE19F18E1B56E6EADA7ED95CCA8398B602BE32F5864640537EE9A9A3532BB29D DUP7 DUP6 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD DUP9 PUSH1 0x60 ADD MLOAD DUP13 PUSH2 0x140 ADD MLOAD DUP14 PUSH2 0x160 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x2AE5 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3575 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7175616C20746F2033322E000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x2B7D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x2BA3 JUMPI POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x2BA0 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x2850 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x2BB9 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x2CE5 JUMPI DUP6 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E20302E0000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 GT ISZERO PUSH2 0x2C29 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3656 JUMP JUMPDEST POP DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2C39 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD PUSH32 0xA85E59E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 PUSH4 0xA85E59E4 SWAP1 PUSH2 0x2CB2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x3667 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2850 DUP3 CALLDATALOAD PUSH2 0x37AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x2D33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D46 PUSH2 0x2D41 DUP3 PUSH2 0x3762 JUMP JUMPDEST PUSH2 0x373B JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 POP DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D84 JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0x2D6E DUP9 DUP3 PUSH2 0x2EBC JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2D58 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x2D9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2DAD PUSH2 0x2D41 DUP3 PUSH2 0x3762 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 POP DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D84 JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0x2DD5 DUP9 DUP3 PUSH2 0x2F0B JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2DBF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x2DFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2E0A PUSH2 0x2D41 DUP3 PUSH2 0x3762 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x2E2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D84 JUMPI DUP2 PUSH2 0x2E45 DUP9 DUP3 PUSH2 0x2E67 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2E32 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2850 DUP3 MLOAD PUSH2 0x37BB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2850 DUP3 CALLDATALOAD PUSH2 0x37C0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0x2E85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2EB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x2ECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2EDB PUSH2 0x2D41 DUP3 PUSH2 0x3783 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x2EF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F02 DUP4 DUP3 DUP5 PUSH2 0x37D4 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F29 PUSH2 0x180 PUSH2 0x373B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F37 DUP5 DUP5 PUSH2 0x2D16 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 PUSH2 0x2F48 DUP5 DUP5 DUP4 ADD PUSH2 0x2D16 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x2F5C DUP5 DUP3 DUP6 ADD PUSH2 0x2D16 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x2F70 DUP5 DUP3 DUP6 ADD PUSH2 0x2D16 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x2F84 DUP5 DUP3 DUP6 ADD PUSH2 0x2E67 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x2F98 DUP5 DUP3 DUP6 ADD PUSH2 0x2E67 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x2FAC DUP5 DUP3 DUP6 ADD PUSH2 0x2E67 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x2FC0 DUP5 DUP3 DUP6 ADD PUSH2 0x2E67 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x2FD5 DUP5 DUP3 DUP6 ADD PUSH2 0x2E67 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0x2FEB DUP5 DUP3 DUP6 ADD PUSH2 0x2E67 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP PUSH2 0x140 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x300D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3019 DUP5 DUP3 DUP6 ADD PUSH2 0x2EBC JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE POP PUSH2 0x160 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x303B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3047 DUP5 DUP3 DUP6 ADD PUSH2 0x2EBC JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2850 DUP3 CALLDATALOAD PUSH2 0x37C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2850 DUP3 MLOAD PUSH2 0x37C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x307E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23E3 DUP5 DUP5 PUSH2 0x2D16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x309C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23E3 DUP5 DUP3 DUP6 ADD PUSH2 0x2D8E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x30D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30F7 DUP7 DUP3 DUP8 ADD PUSH2 0x2D8E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3120 DUP7 DUP3 DUP8 ADD PUSH2 0x2DEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x313D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3149 DUP7 DUP3 DUP8 ADD PUSH2 0x2D22 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x317F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x318B DUP7 DUP3 DUP8 ADD PUSH2 0x2D8E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3120 DUP7 DUP3 DUP8 ADD PUSH2 0x2E67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23E3 DUP5 DUP5 PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23E3 DUP5 DUP5 PUSH2 0x2E67 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x31EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x31FA DUP8 DUP8 PUSH2 0x2E67 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x320B DUP8 DUP3 DUP9 ADD PUSH2 0x2D16 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3234 DUP8 DUP3 DUP9 ADD PUSH2 0x2E73 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23E3 DUP5 DUP3 DUP6 ADD PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x328A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32AD DUP7 DUP3 DUP8 ADD PUSH2 0x2F0B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x32BE DUP7 DUP3 DUP8 ADD PUSH2 0x2E67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3149 DUP7 DUP3 DUP8 ADD PUSH2 0x2EBC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x330C DUP10 DUP10 PUSH2 0x2E67 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x331D DUP10 DUP3 DUP11 ADD PUSH2 0x2D16 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x333A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3346 DUP10 DUP3 DUP11 ADD PUSH2 0x2E73 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3371 DUP10 DUP3 DUP11 ADD PUSH2 0x2E73 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23E3 DUP5 DUP5 PUSH2 0x3054 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23E3 DUP5 DUP5 PUSH2 0x3060 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x33D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33DD DUP7 DUP7 PUSH2 0x3054 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x33EE DUP7 DUP3 DUP8 ADD PUSH2 0x2D16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3149 DUP7 DUP3 DUP8 ADD PUSH2 0x2D16 JUMP JUMPDEST PUSH2 0x3408 DUP2 PUSH2 0x37AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3408 DUP2 PUSH2 0x37BB JUMP JUMPDEST PUSH2 0x3408 DUP2 PUSH2 0x37C0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x342B DUP3 PUSH2 0x37AB JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x343F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x37E0 JUMP JUMPDEST PUSH2 0x3448 DUP2 PUSH2 0x380C JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3408 DUP2 PUSH2 0x37C9 JUMP JUMPDEST PUSH1 0x1B DUP2 MSTORE PUSH32 0x556E737570706F72746564207369676E617475726520747970652E0000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH32 0x496C6C6567616C207369676E617475726520747970652E000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x33 DUP2 MSTORE PUSH32 0x4F6E6C7920636F6E7472616374206F776E657220697320616C6C6F7765642074 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F2063616C6C2074686973206D6574686F642E00000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x3525 DUP5 DUP3 PUSH2 0x3417 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3538 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3417 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x354B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3417 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x567 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x3408 DUP2 PUSH2 0x37C3 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x2354 DUP3 DUP5 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD PUSH2 0x3583 DUP3 DUP11 PUSH2 0x33FF JUMP JUMPDEST PUSH2 0x3590 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x359D PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x35AA PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x35B7 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x3417 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x35C9 DUP2 DUP6 PUSH2 0x3420 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x35DD DUP2 DUP5 PUSH2 0x3420 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x2354 DUP3 DUP5 PUSH2 0x340E JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x3606 DUP3 DUP6 PUSH2 0x3417 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x23E3 DUP2 DUP5 PUSH2 0x3420 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x3626 DUP3 DUP8 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x3633 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x355E JUMP JUMPDEST PUSH2 0x3640 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x364D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3417 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x2850 DUP2 DUP5 PUSH2 0x3420 JUMP JUMPDEST PUSH1 0x80 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x3678 DUP2 DUP8 PUSH2 0x3420 JUMP JUMPDEST SWAP1 POP PUSH2 0x3687 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x33FF JUMP JUMPDEST PUSH2 0x3640 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x36A5 DUP2 DUP6 PUSH2 0x3420 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x23E3 DUP2 DUP5 PUSH2 0x3420 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x2354 DUP3 DUP5 PUSH2 0x3455 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x2354 DUP2 PUSH2 0x345E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x2354 DUP2 PUSH2 0x348E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x2354 DUP2 PUSH2 0x34BE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x2354 DUP3 DUP5 PUSH2 0x3514 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x2354 DUP3 DUP5 PUSH2 0x3417 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x3721 DUP3 DUP7 PUSH2 0x355E JUMP JUMPDEST PUSH2 0x372E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x33FF JUMP JUMPDEST PUSH2 0x23E3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x375A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x379A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2354 DUP3 PUSH2 0x37AF JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x37FB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x37E3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x567 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP COINBASE PUSH14 0x6F756E74206D7573742062652067 PUSH19 0x6561746572207468616E20302E0000496E7661 PUSH13 0x6964207369676E617475726520 PUSH13 0x656E6774682E00000000000000 PUSH6 0x616368206F72 PUSH5 0x65722E0000 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP COINBASE PUSH20 0x7365742064617461206D75737420626520746865 KECCAK256 PUSH20 0x616D6520666F7220A265627A7A723058200666B2 0x3f SELFDESTRUCT MSTORE8 BYTE 0xf 0xb1 PC 0xec SHR ADDMOD DELEGATECALL LOG1 SMOD 0x2a EXTCODECOPY 0xf 0xf8 PUSH21 0x3D63E1DC295C6289296CFC6C6578706572696D656E PUSH21 0x616CF5003700000000000000000000000000000000 ",
                "sourceMap":
                    "861:494:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1188:42:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1188:42:4;;;;;;;;;;;;;;;;;;;;;;;;;13237:367:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13237:367:8;;;;;;;;;;;1278:42:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1278:42:4;;;;;;;;;;;;;;;;;1297:280:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1297:280:6;;;;;;;;;959:50:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;959:50:3;;;;;;;;;;;;;;;;;2199:10745:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2199:10745:8;;;;;;;;;;;;;;;;;23254:176;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;23254:176:8;;;;;;;;;13898:379;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13898:379:8;;;;;;;;;1752:439:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1752:439:4;;;;;;;;;14650:381:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14650:381:8;;;;;;;;;1423:962:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1423:962:3;;;;;;;;;1120:127:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1120:127:5;;;;;;;;;;;;945:45:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;945:45:7;;;;;;;;;1294:479:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1294:479:8;;;;;;;;;1496:46:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1496:46:4;;;;;;;;;15419:1390:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15419:1390:8;;;;;;;;;292:20:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:20:25;;;;;;;;;;;;2575:203:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2575:203:3;;;;;;;;;21312:1807:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;21312:1807:8;;;;;;;;;2508:3322:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2508:3322:4;;;;;;;;;1397:1316:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1397:1316:7;;;;;;;;;6105:1448:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6105:1448:4;;;;;;;;;17266:1404:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;17266:1404:8;;;;;;;;;19058:1793;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;19058:1793:8;;;;;;;;;1042:36:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1042:36:7;;;;566:167:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;566:167:25;;;;;;;;;1041:46:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1041:46:2;;;;1188:42:4;;;;;;;;;;;;;;:::o;13237:367:8:-;13411:9;13406:192;13430:6;:13;13426:1;:17;13406:192;;;13464:123;13491:6;13498:1;13491:9;;;;;;;;;;;;;;;;;;13518:21;13540:1;13518:24;;;;;;;;;;;;;;;;;;13560:10;13571:1;13560:13;;;;;;;;;;;;;;;;;;13464:9;:123::i;:::-;-1:-1:-1;13445:3:8;;13406:192;;;13237:367;;;;:::o;1278:42:4:-;;;;;;;;;;;;;;;:::o;1297:280:6:-;1438:41;1455:4;1461:6;1469:9;;1438:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1438:16:6;;-1:-1:-1;;;;;1438:41:6:i;:::-;1493:27;;;;;;;;;;;;;;;;;;1417:113;;;;;;-1:-1:-1;;;;;1417:113:6;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1540:15:6;;;;:9;:15;;;;;;;;-1:-1:-1;;;;;1540:23:6;;;;;;;;;;:30;;-1:-1:-1;;1540:30:6;1566:4;1540:30;;;1297:280::o;959:50:3:-;;;;;;;;;;;;-1:-1:-1;;;;;959:50:3;;:::o;2199:10745:8:-;2356:30;;:::i;:::-;6251:4;6245:11;;5472:23;6269:42;;;6677:4;6366:3;6345:25;;7364:59;;;7690:19;;6656:26;;;7670:40;;;7478:4;7803:23;;;7797:30;7773:22;;;7766:62;7899:23;;;7893:30;7869:22;;;7862:62;8002:23;;;7996:30;7972:22;;;7965:62;8117:4;8099:23;;8093:30;8069:22;;;8062:62;8217:4;8199:23;;8193:30;8169:22;;;8162:62;8317:4;8299:23;;8293:30;8269:22;;;8262:62;8415:4;8397:23;;8391:30;8367:22;;;8360:62;8514:5;8496:24;;8490:31;8465:23;;;8458:64;8619:5;8601:24;;8595:31;8570:23;;;8563:64;8707:5;8689:24;;8683:31;8658:23;;;8651:64;;;8824:5;8806:24;;8800:31;8775:23;;;8768:64;8917:5;9053:74;;;;8952:24;;9225:19;8900:23;;;9438:34;;;5472:23;;6345:25;;;;6656:26;7456:27;;;;6656:26;;9500:22;;;;9273:23;;;;9349:4;9330:24;;9326:35;5445:24;9601:237;9624:13;9621:1;9618:20;9601:237;;;9694:19;;9674:40;;9763:4;9746:22;;;;9801:23;;;;9652:1;9645:9;9601:237;;;-1:-1:-1;;;9957:31:8;;;9941:13;9922:33;;9915:74;10087:19;;10300:34;;;9949:4;10362:22;;;;10135:23;;;;10211:4;10192:24;;10188:35;10478:1;10464:237;10487:13;10484:1;10481:20;10464:237;;;10557:19;;10537:40;;10626:4;10609:22;;;;10664:23;;;;10515:1;10508:9;10464:237;;;-1:-1:-1;;;10770:46:8;;;-1:-1:-1;11001:33:8;;;10871:4;10849:27;;;10976:59;;;11149:19;;11340:34;;;10849:27;;11402:22;;;;11197:23;;;;11149:19;11273:4;11254:24;;11250:35;-1:-1:-1;11481:237:8;11504:13;11501:1;11498:20;11481:237;;;11574:19;;11554:40;;11643:4;11626:22;;;;11681:23;;;;11532:1;11525:9;11481:237;;;11485:12;12249:3;12170:15;12116;12103:11;12099:33;12018:15;11933:7;11813:3;11783:543;12346:7;12366:205;;;;12589:1;12584:316;;;;12339:561;;12366:205;12411:1;12398:11;12391:22;12459:1;12454:2;12441:11;12437:20;12430:31;12507:1;12502:2;12489:11;12485:20;12478:31;12555:1;12550:2;12537:11;12533:20;12526:31;12366:205;;12584:316;12635:15;12629:22;12616:11;12609:43;12725:2;12708:15;12704:24;12698:31;12693:2;12680:11;12676:20;12669:61;12803:2;12786:15;12782:24;12776:31;12771:2;12758:11;12754:20;12747:61;12881:2;12864:15;12860:24;12854:31;12849:2;12836:11;12832:20;12825:61;12339:561;-1:-1:-1;;;;;;;;;;;;2199:10745:8;;;;;;:::o;23254:176::-;23338:9;23333:91;23357:6;:13;23353:1;:17;23333:91;;;23391:22;23403:6;23410:1;23403:9;;;;;;;;;;;;;;;;;;23391:11;:22::i;:::-;-1:-1:-1;23372:3:8;;23333:91;;;23254:176;;:::o;13898:379::-;14078:9;14073:198;14097:6;:13;14093:1;:17;14073:198;;;14131:129;14164:6;14171:1;14164:9;;;;;;;;;;;;;;;;;;14191:21;14213:1;14191:24;;;;;;;;;;;;;;;;;;14233:10;14244:1;14233:13;;;;;;;;;;;;;;;;;;14131:15;:129::i;:::-;-1:-1:-1;14112:3:8;;14073:198;;1752:439:4;-1:-1:-1;;;;;1983:10:4;1972:22;1823:21;1972:22;;;:10;:22;;;;;;;;;;2051:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1854:1;1847:8;;;1956:38;;1935:149;;;;-1:-1:-1;;;;;1935:149:4;;;;;;;;;;-1:-1:-1;;;;;;2105:10:4;2094:22;;;;;:10;:22;;;;;;;:38;;;2147:37;;;;;2119:13;;2147:37;;;;;;;;;;1752:439;;:::o;14650:381:8:-;14831:9;14826:199;14850:6;:13;14846:1;:17;14826:199;;;14884:130;14918:6;14925:1;14918:9;;;;;;;;;;;;;;;;;;14945:21;14967:1;14945:24;;;;;;;;;;;;;;;;;;14987:10;14998:1;14987:13;;;;;;;;;;;;;;;;;;14884:16;:130::i;:::-;-1:-1:-1;14865:3:8;;14826:199;;1423:962:3;460:5:25;;1801:22:3;;;;446:10:25;-1:-1:-1;;;;;446:19:25;;;460:5;;446:19;425:117;;;;-1:-1:-1;;;;;425:117:25;;;;;;;;;1715:26:3;;;;;;;:12;:26;;;;;;;;;;1756:24;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1690:52:3;;;1715:26;;1690:52;1669:121;;;;-1:-1:-1;;;;;1669:121:3;;;;;;;;;;-1:-1:-1;1838:13:3;;-1:-1:-1;;;;;;1981:27:3;;;1977:231;;2048:10;-1:-1:-1;;;;;2048:21:3;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2048:23:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2048:23:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2048:23:3;;;;;;;;;2024:47;;2129:12;2110:31;;:15;:31;;;2159:24;;;;;;;;;;;;;;;;;;;;;;;2085:112;;;;;;;-1:-1:-1;;;;;2085:112:3;;;;;;;;;;;1977:231;2267:26;;;;;;;:12;:26;;;;;;;:39;;-1:-1:-1;;2267:39:3;-1:-1:-1;;;;;2267:39:3;;;;;2321:57;;;;;2267:26;;2349:13;;2364;;2321:57;;;;;;;;;;1423:962;;;;;:::o;1120:127:5:-;1226:14;1219:21;;;;;;;;-1:-1:-1;;1219:21:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1191:5;;1219:21;;1226:14;;1219:21;;1226:14;1219:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1120:127;:::o;945:45:7:-;;;;;;;;;;;;;;;:::o;1294:479:8:-;1450:30;;:::i;:::-;1510:95;1533:5;1552:20;1586:9;1510;:95::i;:::-;1496:109;;1674:20;1636:11;:34;;;:58;1708:20;;;;;;;;;;;;;;;;;;;;;;;1615:123;;;;;;;-1:-1:-1;;;;;1615:123:8;;;;;;;;;;-1:-1:-1;1294:479:8;;;;;:::o;1496:46:4:-;;;;;;;;;;;;;:::o;15419:1390:8:-;15582:35;;:::i;:::-;15638:9;16065:37;16256:36;;:::i;:::-;15650:1;15638:13;;15633:1137;15657:6;:13;15653:1;:17;15633:1137;;;15866:65;15880:6;15887:1;15880:9;;;;;;;;;;;;;;;;;;:24;;;15906:6;15913:1;15906:9;;;;;;;;;;;;;;;;;;:24;;;15866:13;:65::i;:::-;15949:19;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15949:19:8;;;;-1:-1:-1;;;;;;;;;;;15949:19:8;;;15841:141;;;;;;;-1:-1:-1;;;;;15841:141:8;;;;;;;;;;;16105:70;16113:20;16135:16;:39;;;16105:7;:70::i;:::-;16065:110;;16295:128;16322:6;16329:1;16322:9;;;;;;;;;;;;;;;;;;16349:29;16396:10;16407:1;16396:13;;;;;;;;;16295:128;16256:167;;16508:51;16523:16;16541:17;16508:14;:51::i;:::-;16700:20;16657:16;:39;;;:63;16653:107;;;16740:5;;16653:107;15672:3;;;;;15633:1137;;;15419:1390;;;;;;;;:::o;292:20:25:-;;;-1:-1:-1;;;;;292:20:25;;:::o;2575:203:3:-;2717:26;;2665:7;2717:26;;;:12;:26;;;;;;-1:-1:-1;;;;;2717:26:3;;2575:203::o;21312:1807:8:-;21481:35;;:::i;:::-;21537:9;21965:37;22271;22557:36;;:::i;:::-;21549:1;21537:13;;21532:1548;21556:6;:13;21552:1;:17;21532:1548;;;21767:65;21781:6;21788:1;21781:9;;;;;;;;;;;;;;;;;;:24;;;21807:6;21814:1;21807:9;;;;;;;;;;;;;;;;;;:24;;;21767:13;:65::i;:::-;21850:19;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;21850:19:8;;;;-1:-1:-1;;;;;;;;;;;21850:19:8;;;21742:141;;;;;;;-1:-1:-1;;;;;21742:141:8;;;;;;;;;;;22005:70;22013:20;22035:16;:39;;;22005:7;:70::i;:::-;21965:110;;22311:165;22345:6;22352:1;22345:9;;;;;;;;;;;;;;;;;;:26;;;22389:6;22396:1;22389:9;;;;;;;;;;;;;;;;;;:26;;;22433:29;22311:16;:165::i;:::-;22271:205;;22596:135;22630:6;22637:1;22630:9;;;;;;;;;;;;;;;;;;22657:29;22704:10;22715:1;22704:13;;;;;;;;;22596:135;22557:174;;22816:51;22831:16;22849:17;22816:14;:51::i;:::-;22967:39;;:63;;22963:107;;;23050:5;;22963:107;21571:3;;;;;21532:1548;;;21312:1807;;;;;;;;;:::o;2508:3322:4:-;2658:30;;:::i;:::-;2738:17;4091:20;4684:37;2758:19;2771:5;2758:12;:19::i;:::-;2875:18;;-1:-1:-1;;;;;2864:30:4;;;;;:10;:30;;;;;;2851:10;;;;2738:39;;-1:-1:-1;;2847:166:4;;;2960:9;2935:22;2929:29;2915:55;;;;;;;;;;;;2984:18;;2847:166;3085:20;;;;:9;:20;;;;;;;;3081:143;;;3171:9;3146:22;3140:29;;3081:143;3351:6;:17;;;;;;;;;;;:22;3347:435;;;3414:22;;;;3458:23;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3458:23:4;;;;;3439:1;-1:-1:-1;3389:106:4;;;;-1:-1:-1;;;;;3389:106:4;;;;;;;;;;-1:-1:-1;3534:22:4;;;;3578:23;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3578:23:4;;;;;3559:1;-1:-1:-1;3509:106:4;;;;-1:-1:-1;;;;;3509:106:4;;;;;;;;;;;3654:58;3671:9;3682:5;:18;;;3702:9;3654:16;:58::i;:::-;3730:27;;;;;;;;;;;;;;;;;;3629:142;;;;;;-1:-1:-1;;;;;3629:142:4;;;;;;;;;;;3347:435;3861:19;;;;-1:-1:-1;;;;;3861:33:4;;3857:168;;3958:10;-1:-1:-1;;;;;3935:33:4;:5;:19;;;-1:-1:-1;;;;;3935:33:4;;3986:14;;;;;;;;;;;;;;;;;;3910:104;;;;;;;-1:-1:-1;;;;;3910:104:4;;;;;;;;;;;3857:168;4114:26;:24;:26::i;:::-;4154:18;;;;4091:49;;-1:-1:-1;;;;;;4154:32:4;;4150:169;;4249:12;-1:-1:-1;;;;;4227:34:4;:5;:18;;;-1:-1:-1;;;;;4227:34:4;;4279:15;;;;;;;;;;;;;;;;;;;;;;;4202:106;;;;;;;-1:-1:-1;;;;;4202:106:4;;;;;;;;;;;4150:169;4387:23;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4387:23:4;;;;4372:1;4349:24;;4328:92;;;;-1:-1:-1;;;;;4328:92:4;;;;;;;;;;-1:-1:-1;4491:27:4;;;;4472:15;:46;4468:167;;4582:9;4539:53;4553:27;;4468:167;4732:22;;;;4756:6;:17;;;;;;;;;;;4724:50;;4732:22;4724:7;:50::i;:::-;4684:90;-1:-1:-1;4788:34:4;;4784:160;;;4891:9;4863:25;4857:32;;4784:160;5031:59;5038:20;5060:29;5031:6;:59::i;:::-;4994:34;;;:96;;;5156:22;;;;5180;;;;5104:99;;4994:96;5156:22;5104:15;:99::i;:::-;5100:283;;;5224:64;;5278:9;;5244:31;;5224:64;;;;;5339:1;5302:34;;;:38;5354:18;;5100:283;5445:6;:17;;;;;;;;;;;;5464:34;;;;5437:62;;5445:17;5437:7;:62::i;:::-;5417:6;:17;;;;;;;;;;;:82;;;;5670:34;;;5637:68;;5649:5;;5656:12;;5637:11;:68::i;:::-;5597:24;;;5534:171;5571:24;;;5534:171;;;5737:58;5751:5;5758:12;5772:9;5535:11;5737:13;:58::i;1397:1316:7:-;1586:21;;1671:23;;-1:-1:-1;;;;;1586:21:7;:35;1578:44;;;;;;1728:4;1747;1765;;1697:82;;;;-1:-1:-1;;;;;1697:82:7;-1:-1:-1;;;;;1697:82:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:29;;;;:12;:29;;;;;;;;;1909:26;;;;;;;;;;;;;;;;;;;;;;;;1697:82;-1:-1:-1;1697:82:7;-1:-1:-1;;1866:29:7;;1865:30;;-1:-1:-1;1844:101:7;;-1:-1:-1;;;1844:101:7;;;-1:-1:-1;;;;;1844:101:7;;;;;;;;;;;2044:10;-1:-1:-1;;;;;2034:20:7;:6;-1:-1:-1;;;;;2034:20:7;;;2030:316;;;2129:52;2146:15;2163:6;2171:9;;2129:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2129:16:7;;-1:-1:-1;;;;;2129:52:7:i;:::-;2199:27;;;;;;;;;;;;;;;;;;2104:136;;;;;;-1:-1:-1;;;;;2104:136:7;;;;;;;;;;-1:-1:-1;2305:21:7;:30;;-1:-1:-1;;2305:30:7;-1:-1:-1;;;;;2305:30:7;;;;;2030:316;2387:29;;;;:12;:29;;;;;;;:36;;-1:-1:-1;;2387:36:7;2419:4;2387:36;;;2454:32;-1:-1:-1;;;;;2462:4:7;2454:26;;2481:4;;;;2454:32;2481:4;;;;2454:32;;;;;;;;;;;;;;;;;;;;;2500:28;;;;;;;;;;;;;;;;;;-1:-1:-1;2433:105:7;;;-1:-1:-1;2433:105:7;;;;-1:-1:-1;;;;;2433:105:7;;;;;;;;;;-1:-1:-1;;2672:21:7;:34;;-1:-1:-1;;2672:34:7;;;-1:-1:-1;;;;;;1397:1316:7:o;6105:1448:4:-;6178:4;6232:17;6814:20;6252:19;6265:5;6252:12;:19::i;:::-;6333:22;;;;6373:23;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6373:23:4;;;;6232:39;;-1:-1:-1;6358:1:4;-1:-1:-1;6312:94:4;;;;-1:-1:-1;;;;;6312:94:4;;;;;;;;;;-1:-1:-1;6437:22:4;;;;6477:23;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6477:23:4;;;;;6462:1;-1:-1:-1;6416:94:4;;;;-1:-1:-1;;;;;6416:94:4;;;;;;;;;;-1:-1:-1;6584:19:4;;;;-1:-1:-1;;;;;6584:33:4;;6580:168;;6681:10;-1:-1:-1;;;;;6658:33:4;:5;:19;;;-1:-1:-1;;;;;6658:33:4;;6709:14;;;;;;;;;;;;;;;;;;6633:104;;;;;;;-1:-1:-1;;;;;6633:104:4;;;;;;;;;;;6580:168;6837:26;:24;:26::i;:::-;6894:18;;6942:15;;;;;;;;;;;;;;;;;;;;;;;;6814:49;;-1:-1:-1;;;;;;6894:34:4;;;;;;6873:94;;;;-1:-1:-1;;;;;6873:94:4;;;;;;;;;;-1:-1:-1;7009:27:4;;;;6990:15;:46;6986:161;;7100:9;7057:53;7071:27;7057:53;;;;;;;;;;;;7131:5;7124:12;;;;6986:161;7161:20;;;;:9;:20;;;;;;;;7157:137;;;7247:9;7222:22;7216:29;;7157:137;7304:20;;;;7327:4;7304:20;;;;;;;;;:27;;-1:-1:-1;;7304:27:4;;;;;;7399:25;;;;7367:18;;7461:20;;;;7495;;;;7347:178;;7304:20;;-1:-1:-1;;;;;7347:178:4;;;;;;;;;;;;7461:20;;7495;7347:178;;;;;;;;;;7542:4;7535:11;;6105:1448;;;;;;:::o;17266:1404:8:-;17436:35;;:::i;:::-;17492:9;17919:37;18110:36;;:::i;:::-;17504:1;17492:13;;17487:1144;17511:6;:13;17507:1;:17;17487:1144;;;17720:65;17734:6;17741:1;17734:9;;;;;;;;;17720:65;17803:19;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;17803:19:8;;;;-1:-1:-1;;;;;;;;;;;17803:19:8;;;17695:141;;;;;;;-1:-1:-1;;;;;17695:141:8;;;;;;;;;;;17959:70;17967:20;17989:16;:39;;;17959:7;:70::i;:::-;17919:110;;18149:135;18183:6;18190:1;18183:9;;;;;;;;;;;;;;;;;;18210:29;18257:10;18268:1;18257:13;;;;;;;;;18149:135;18110:174;;18369:51;18384:16;18402:17;18369:14;:51::i;:::-;18561:20;18518:16;:39;;;:63;18514:107;;;18601:5;;18514:107;17526:3;;;;;17487:1144;;19058:1793;19220:35;;:::i;:::-;19276:9;19704:37;20010;20296:36;;:::i;:::-;19288:1;19276:13;;19271:1541;19295:6;:13;19291:1;:17;19271:1541;;;19506:65;19520:6;19527:1;19520:9;;;;;;;;;19506:65;19589:19;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;19589:19:8;;;;-1:-1:-1;;;;;;;;;;;19589:19:8;;;19481:141;;;;;;;-1:-1:-1;;;;;19481:141:8;;;;;;;;;;;19744:70;19752:20;19774:16;:39;;;19744:7;:70::i;:::-;19704:110;;20050:165;20084:6;20091:1;20084:9;;;;;;;;;20050:165;20010:205;;20335:128;20362:6;20369:1;20362:9;;;;;;;;;;;;;;;;;;20389:29;20436:10;20447:1;20436:13;;;;;;;;;20335:128;20296:167;;20548:51;20563:16;20581:17;20548:14;:51::i;:::-;20699:39;;:63;;20695:107;;;20782:5;;20695:107;19310:3;;;;;19271:1541;;1042:36:7;;;-1:-1:-1;;;;;1042:36:7;;:::o;566:167:25:-;460:5;;446:10;-1:-1:-1;;;;;446:19:25;;;460:5;;446:19;425:117;;;;-1:-1:-1;;;;;425:117:25;;;;;;;;;-1:-1:-1;;;;;662:22:25;;;658:69;;700:5;:16;;-1:-1:-1;;700:16:25;-1:-1:-1;;;;;700:16:25;;;;;658:69;566:167;:::o;1041:46:2:-;;;;;;;;;;;;;;;;;;;:::o;1942:5431:6:-;2094:12;2336:27;2459:7;2476:9;2495;2514:17;2277:1;2257:9;:16;:21;;2292:24;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2292:24:6;;;2236:90;;;;;;;-1:-1:-1;;;;;2236:90:6;;;;;;;;;;;2386:9;2396:1;2386:12;;;;;;;;;;;;;;;-1:-1:-1;;;2386:12:6;;-1:-1:-1;;;2386:12:6;-1:-1:-1;;;2380:19:6;;2366:34;;;;;;;;;;2336:64;-1:-1:-1;2880:21:6;2863:13;:38;;;;;;;;;2859:4041;;;3038:33;;-1:-1:-1;;;;;3038:33:6;;;;;;;;2859:4041;3352:21;3335:13;:38;;;;;;;;;3331:3569;;;3414:16;;3453:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3453:24:6;;;;;3434:1;3414:21;3389:102;;;;-1:-1:-1;;;;;3389:102:6;;;;;;;;;;-1:-1:-1;3515:5:6;;-1:-1:-1;3534:14:6;;3331:3569;4137:20;4120:13;:37;;;;;;;;;4116:2784;;;4198:16;;4237:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4237:24:6;;;;;4218:1;4198:21;4173:102;;;;-1:-1:-1;;;;;4173:102:6;;;;;;;;;;;4309:10;-1:-1:-1;;;;;4299:20:6;:6;-1:-1:-1;;;;;4299:20:6;;4289:30;;4340:7;4333:14;;;;4116:2784;4424:23;4407:13;:40;;;;;;;;;4403:2497;;;4488:16;;4528:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4528:24:6;;;;;4508:2;4488:22;4463:103;;;;-1:-1:-1;;;;;4463:103:6;;;;;;;;;;;4590:9;4600:1;4590:12;;;;;;;;;;;;;;-1:-1:-1;;;4590:12:6;;;;;;4584:19;;-1:-1:-1;4621:25:6;4633:9;4644:1;4621:11;:25::i;:::-;4617:29;;4664:26;4676:9;4687:2;4664:11;:26::i;:::-;4743:51;;;;;;;;;;;;;;;;;;;;;;;4716:149;;4743:51;4716:149;;;;;;;;4660:30;;-1:-1:-1;4716:149:6;;;;4812:1;;4831;;4660:30;;4716:149;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4716:149:6;;-1:-1:-1;;4716:149:6;;-1:-1:-1;;;;;4889:19:6;;;;;;;;-1:-1:-1;4716:149:6;-1:-1:-1;4922:14:6;;-1:-1:-1;4922:14:6;4403:2497;5009:20;4992:13;:37;;;;;;;;;4988:1912;;;5070:16;;5110:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5110:24:6;;;;;5090:2;5070:22;5045:103;;;;-1:-1:-1;;;;;5045:103:6;;;;;;;;;;;5172:9;5182:1;5172:12;;;;;;;;;;;;;;-1:-1:-1;;;5172:12:6;;;;;;5166:19;;-1:-1:-1;5203:25:6;5215:9;5226:1;5203:11;:25::i;:::-;5199:29;;5246:26;5258:9;5269:2;5246:11;:26::i;:::-;5242:30;;5298:24;5308:4;5314:1;5317;5320;5298:24;;;;;;;;;;;;;;;;;;;4988:1912;5958:20;5941:13;:37;;;;;;;;;5937:963;;;6019:16;;6059:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6059:24:6;;;;;6039:2;6019:22;5994:103;;;;-1:-1:-1;;;;;5994:103:6;;;;;;;;;;;6121:9;6131:1;6121:12;;;;;;;;;;;;;;-1:-1:-1;;;6121:12:6;;;;;;6115:19;;-1:-1:-1;6152:25:6;6164:9;6175:1;6152:11;:25::i;:::-;6148:29;;6195:26;6207:9;6218:2;6195:11;:26::i;:::-;6274:53;;;;;;;;;;;;;;;;;;;;;;;6247:151;;6274:53;6247:151;;;;;;;;6191:30;;-1:-1:-1;6247:151:6;;;;6345:1;;6364;;6191:30;;6247:151;;5937:963;6557:22;6540:13;:39;;;;;;;;;6536:364;;;6605:49;;;;;-1:-1:-1;;;;;6605:32:6;;;;;:49;;6638:4;;6644:9;;6605:49;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6605:49:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6605:49:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6605:49:6;;;;;;;;;6595:59;-1:-1:-1;6668:14:6;;6536:364;6789:23;6772:13;:40;;;;;;;;;6768:132;;;6838:15;;;;:9;:15;;;;;;;;-1:-1:-1;;;;;6838:23:6;;;;;;;;;;;;;-1:-1:-1;6875:14:6;;6768:132;7329:37;;-1:-1:-1;;;;;7329:37:6;;;;;;;;1942:5431;;;;;;;;;;;:::o;1045:899:23:-;1151:10;1304:4;1297;1291:3;1285:10;1281:21;1277:32;1434:3;1420:12;1416:22;1400:38;;1565:1;1551:356;1574:12;1571:1;1568:19;1551:356;;;1660:4;1653:12;;1644:22;;;1638:29;1705:22;;;1699:29;1754:20;;;;-1:-1:-1;1754:20:23;1791:2;;1863:12;1858:17;;1791:2;-1:-1:-1;;1601:1:23;1594:9;1551:356;;;-1:-1:-1;;1045:899:23;;;;;:::o;418:146:26:-;498:7;528:6;;;;521:14;;;;-1:-1:-1;552:5:26;;;418:146::o;1171:648:15:-;1364:39;;1405:40;;1356:90;;1364:39;1356:7;:90::i;:::-;1314:132;;1506:39;;;;;1547:40;;;;1498:90;;1506:39;1498:7;:90::i;:::-;1456:39;;;:132;1638:29;;;;;1669:30;;;;1630:70;;1638:29;1630:7;:70::i;:::-;1598:29;;;:102;1750:29;;;;;1781:30;;;;1742:70;;1750:29;1742:7;:70::i;:::-;1710:29;;;;:102;;;;-1:-1:-1;1171:648:15:o;937:326:16:-;1091:21;1144:82;1165:26;1173:9;1184:6;1165:7;:26::i;:::-;1205:11;1144:7;:82::i;:::-;1128:98;937:326;-1:-1:-1;;;;937:326:16:o;1662:836:17:-;1751:17;668:443;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1991:4;2014:5;:18;;;2050:5;:18;;;2086:5;:25;;;2129:5;:19;;;2166:5;:22;;;2206:5;:22;;;2246:5;:14;;;2278:5;:14;;;2310:5;:27;;;2355:5;:10;;;2383:5;:20;;;2421:5;:20;;;1956:499;;;;-1:-1:-1;;;;;1956:499:17;-1:-1:-1;;;;;1956:499:17;;;;;;;;-1:-1:-1;;;;;1956:499:17;-1:-1:-1;;;;;1956:499:17;;;;;;;;-1:-1:-1;;;;;1956:499:17;-1:-1:-1;;;;;1956:499:17;;;;;;;;-1:-1:-1;;;;;1956:499:17;-1:-1:-1;;;;;1956:499:17;;;;;;;;-1:-1:-1;;;;;1956:499:17;-1:-1:-1;;;;;1956:499:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1956:499:17;;;;;;;;;;-1:-1:-1;1956:499:17;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1956:499:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;1902:563;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:575;;2482:9;2475:16;;1662:836;;;:::o;3157:241:7:-;3288:21;;3240:7;;;;-1:-1:-1;;;;;3288:21:7;:35;:72;;3339:21;;-1:-1:-1;;;;;3339:21:7;3288:72;;;3326:10;3263:97;3157:241;-1:-1:-1;;3157:241:7:o;1161:135:26:-;1246:7;1280:1;1276;:5;:13;;1288:1;1276:13;;;1284:1;1276:13;1269:20;1161:135;-1:-1:-1;;;1161:135:26:o;1502:555:16:-;1655:12;1683:17;1840:33;1729:11;1703:38;;;;;;;1718:9;1710:6;1703:38;1683:58;-1:-1:-1;1755:14:16;;1751:79;;;1792:5;1785:12;;;;1751:79;1876:98;1897:27;1905:9;1916:7;1897;:27::i;:::-;1938:26;1946:9;1957:6;1938:7;:26::i;:::-;1876:7;:98::i;:::-;2022:4;1994:32;;;-1:-1:-1;1840:134:16;-1:-1:-1;1502:555:16;;;;;;;;:::o;570:166:26:-;650:7;682:5;;;704:6;;;;697:14;;;2013:1358:5;2189:30;2233:20;2267;2337:88;2354:22;2378:5;:22;;;2402:5;:22;;;2337:16;:88::i;:::-;2312:113;;2435:158;2469:5;:20;;;2503:5;:18;;;2535:12;2561:22;2435:20;:158::i;:::-;2603;2637:5;:20;;;2671:12;2697:5;:18;;;2729:22;2603:20;:158::i;:::-;2786:80;2803:22;2827:5;:22;;;2851:5;:14;;;2786:16;:80::i;:::-;2910:14;2876:155;;;;;;;;;;;;;-1:-1:-1;;2876:155:5;;;;;;;;;;;;;;;;;;;;;;;;;;2771:95;;-1:-1:-1;2876:155:5;;;2910:14;2876:155;;2910:14;2876:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2938:5;:18;;;2970:5;:25;;;3009:12;2876:20;:155::i;:::-;3056:80;3073:22;3097:5;:22;;;3121:5;:14;;;3056:16;:80::i;:::-;3180:14;3146:149;;;;;;;;;;;;;-1:-1:-1;;3146:149:5;;;;;;;;;;;;;;;;;;;;;;;;;;3041:95;;-1:-1:-1;3146:149:5;;;3180:14;3146:149;;3180:14;3146:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3208:12;3234:5;:25;;;3273:12;3146:20;:149::i;:::-;2013:1358;;;;;;;:::o;7706:566:4:-;8178:9;7891:374;;;7967:5;:25;;;-1:-1:-1;;;;;7891:374:4;7909:5;:18;;;-1:-1:-1;;;;;7891:374:4;;7941:12;8006:11;:34;;;8054:11;:34;;;8102:11;:24;;;8140:11;:24;;;8201:5;:20;;;8235:5;:20;;;7891:374;;;;;;;;;;;;;;;;;;;;;7706:566;;;;:::o;4902:467:23:-;5018:14;5081:5;5089:2;5081:10;5069:1;:8;:22;;5105;;;;;;;;;;;;;;;;;;;;;;;5048:89;;;;;;;-1:-1:-1;;;;;5048:89:23;;;;;;;;;;-1:-1:-1;;5316:13:23;5218:2;5316:13;5310:20;;4902:467::o;84:180:26:-;164:7;196:5;;;218:6;;;:20;;;237:1;232;228;:5;;;;;;;;:10;218:20;211:28;;;;;270:142;350:7;373:6;386:1;382;:5;;;;;;;;;270:142;-1:-1:-1;;;;270:142:26:o;3114:660:3:-;3519:18;3577:22;3349:1;3340:6;:10;3336:432;;;3425:20;;3468:23;;;;;;;;;;;;;;;;;;3449:1;-1:-1:-1;3425:25:3;3400:105;;;;-1:-1:-1;;;;;3400:105:3;;;;;;;;;;;3546:13;3560:1;3546:16;;;;;;;;;;;;;;;;-1:-1:-1;;;3546:16:3;;;;;;3540:23;3602:26;;;;;;;:12;:26;;;;;;;;;3701:56;;;;;3540:23;;-1:-1:-1;;;;;;3602:26:3;;;;-1:-1:-1;3602:26:3;;3701:23;;:56;;3725:13;;3740:4;;3746:2;;3750:6;;3701:56;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3701:56:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3701:56:3;;;;3336:432;3114:660;;;;;;:::o;861:494:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;146:693;;261:4;249:17;;245:27;-1:-1;235:2;;286:1;283;276:12;235:2;323:6;310:20;345:85;360:69;422:6;360:69;;;345:85;;;458:21;;;502:4;490:17;;;;336:94;;-1:-1;515:14;;490:17;610:1;595:238;620:6;617:1;614:13;595:238;;;703:3;690:17;682:6;678:30;727:42;765:3;753:10;727:42;;;715:55;;-1:-1;793:4;784:14;;;;812;;;;;642:1;635:9;595:238;;;599:14;228:611;;;;;;;;879:735;;1008:4;996:17;;992:27;-1:-1;982:2;;1033:1;1030;1023:12;982:2;1070:6;1057:20;1092:99;1107:83;1183:6;1107:83;;1092:99;1219:21;;;1263:4;1251:17;;;;1083:108;;-1:-1;1276:14;;1251:17;1371:1;1356:252;1381:6;1378:1;1375:13;1356:252;;;1464:3;1451:17;1443:6;1439:30;1488:56;1540:3;1528:10;1488:56;;;1476:69;;-1:-1;1568:4;1559:14;;;;1587;;;;;1403:1;1396:9;1356:252;;1640:707;;1750:4;1738:17;;1734:27;-1:-1;1724:2;;1775:1;1772;1765:12;1724:2;1812:6;1799:20;1834:80;1849:64;1906:6;1849:64;;1834:80;1825:89;;1931:5;1956:6;1949:5;1942:21;1986:4;1978:6;1974:17;1964:27;;2008:4;2003:3;1999:14;1992:21;;2061:6;2108:3;2100:4;2092:6;2088:17;2083:3;2079:27;2076:36;2073:2;;;2125:1;2122;2115:12;2073:2;2150:1;2135:206;2160:6;2157:1;2154:13;2135:206;;;2218:3;2240:37;2273:3;2261:10;2240:37;;;2228:50;;-1:-1;2301:4;2292:14;;;;2320;;;;;2182:1;2175:9;2135:206;;2355:116;;2430:36;2458:6;2452:13;2430:36;;2478:118;;2545:46;2583:6;2570:20;2545:46;;2617:335;;;2724:4;2712:17;;2708:27;-1:-1;2698:2;;2749:1;2746;2739:12;2698:2;-1:-1;2769:20;;2809:18;2798:30;;2795:2;;;2841:1;2838;2831:12;2795:2;2875:4;2867:6;2863:17;2851:29;;2925:3;2918;2910:6;2906:16;2896:8;2892:31;2889:40;2886:2;;;2942:1;2939;2932:12;2886:2;2691:261;;;;;;2961:432;;3051:4;3039:17;;3035:27;-1:-1;3025:2;;3076:1;3073;3066:12;3025:2;3113:6;3100:20;3135:60;3150:44;3187:6;3150:44;;3135:60;3126:69;;3215:6;3208:5;3201:21;3251:4;3243:6;3239:17;3284:4;3277:5;3273:16;3319:3;3310:6;3305:3;3301:16;3298:25;3295:2;;;3336:1;3333;3326:12;3295:2;3346:41;3380:6;3375:3;3370;3346:41;;;3018:375;;;;;;;;3878:2205;;3986:5;3974:9;3969:3;3965:19;3961:31;3958:2;;;4005:1;4002;3995:12;3958:2;4023:21;4038:5;4023:21;;;4014:30;-1:-1;4102:1;4133:49;4178:3;4158:9;4133:49;;;4109:74;;-1:-1;4252:2;4285:49;4330:3;4306:22;;;4285:49;;;4278:4;4271:5;4267:16;4260:75;4204:142;4411:2;4444:49;4489:3;4480:6;4469:9;4465:22;4444:49;;;4437:4;4430:5;4426:16;4419:75;4356:149;4564:2;4597:49;4642:3;4633:6;4622:9;4618:22;4597:49;;;4590:4;4583:5;4579:16;4572:75;4515:143;4720:3;4754:49;4799:3;4790:6;4779:9;4775:22;4754:49;;;4747:4;4740:5;4736:16;4729:75;4668:147;4877:3;4911:49;4956:3;4947:6;4936:9;4932:22;4911:49;;;4904:4;4897:5;4893:16;4886:75;4825:147;5026:3;5060:49;5105:3;5096:6;5085:9;5081:22;5060:49;;;5053:4;5046:5;5042:16;5035:75;4982:139;5175:3;5209:49;5254:3;5245:6;5234:9;5230:22;5209:49;;;5202:4;5195:5;5191:16;5184:75;5131:139;5337:3;5372:49;5417:3;5408:6;5397:9;5393:22;5372:49;;;5364:5;5357;5353:17;5346:76;5280:153;5483:3;5518:49;5563:3;5554:6;5543:9;5539:22;5518:49;;;5510:5;5503;5499:17;5492:76;5443:136;5667:3;5656:9;5652:19;5639:33;5692:18;5684:6;5681:30;5678:2;;;5724:1;5721;5714:12;5678:2;5760:54;5810:3;5801:6;5790:9;5786:22;5760:54;;;5752:5;5745;5741:17;5734:81;5589:237;5914:3;5903:9;5899:19;5886:33;5939:18;5931:6;5928:30;5925:2;;;5971:1;5968;5961:12;5925:2;6007:54;6057:3;6048:6;6037:9;6033:22;6007:54;;;5999:5;5992;5988:17;5981:81;5836:237;3952:2131;;;;;8459:114;;8524:44;8560:6;8547:20;8524:44;;8580:118;;8656:37;8685:6;8679:13;8656:37;;8705:241;;8809:2;8797:9;8788:7;8784:23;8780:32;8777:2;;;8825:1;8822;8815:12;8777:2;8860:1;8877:53;8922:7;8902:9;8877:53;;8953:415;;9101:2;9089:9;9080:7;9076:23;9072:32;9069:2;;;9117:1;9114;9107:12;9069:2;9152:31;;9203:18;9192:30;;9189:2;;;9235:1;9232;9225:12;9189:2;9255:97;9344:7;9335:6;9324:9;9320:22;9255:97;;9375:947;;;;9612:2;9600:9;9591:7;9587:23;9583:32;9580:2;;;9628:1;9625;9618:12;9580:2;9663:31;;9714:18;9703:30;;9700:2;;;9746:1;9743;9736:12;9700:2;9766:97;9855:7;9846:6;9835:9;9831:22;9766:97;;;9756:107;;9642:227;9928:2;9917:9;9913:18;9900:32;9952:18;9944:6;9941:30;9938:2;;;9984:1;9981;9974:12;9938:2;10004:78;10074:7;10065:6;10054:9;10050:22;10004:78;;;9994:88;;9879:209;10147:2;10136:9;10132:18;10119:32;10171:18;10163:6;10160:30;10157:2;;;10203:1;10200;10193:12;10157:2;10223:83;10298:7;10289:6;10278:9;10274:22;10223:83;;;10213:93;;10098:214;9574:748;;;;;;10329:811;;;;10541:2;10529:9;10520:7;10516:23;10512:32;10509:2;;;10557:1;10554;10547:12;10509:2;10592:31;;10643:18;10632:30;;10629:2;;;10675:1;10672;10665:12;10629:2;10695:97;10784:7;10775:6;10764:9;10760:22;10695:97;;;10685:107;;10571:227;10829:2;10847:53;10892:7;10883:6;10872:9;10868:22;10847:53;;11147:257;;11259:2;11247:9;11238:7;11234:23;11230:32;11227:2;;;11275:1;11272;11265:12;11227:2;11310:1;11327:61;11380:7;11360:9;11327:61;;11411:241;;11515:2;11503:9;11494:7;11490:23;11486:32;11483:2;;;11531:1;11528;11521:12;11483:2;11566:1;11583:53;11628:7;11608:9;11583:53;;11659:615;;;;;11816:2;11804:9;11795:7;11791:23;11787:32;11784:2;;;11832:1;11829;11822:12;11784:2;11867:1;11884:53;11929:7;11909:9;11884:53;;;11874:63;;11846:97;11974:2;11992:53;12037:7;12028:6;12017:9;12013:22;11992:53;;;11982:63;;11953:98;12110:2;12099:9;12095:18;12082:32;12134:18;12126:6;12123:30;12120:2;;;12166:1;12163;12156:12;12120:2;12194:64;12250:7;12241:6;12230:9;12226:22;12194:64;;;11778:496;;;;-1:-1;12176:82;-1:-1;;;;11778:496;12281:373;;12408:2;12396:9;12387:7;12383:23;12379:32;12376:2;;;12424:1;12421;12414:12;12376:2;12459:31;;12510:18;12499:30;;12496:2;;;12542:1;12539;12532:12;12496:2;12562:76;12630:7;12621:6;12610:9;12606:22;12562:76;;12661:727;;;;12831:2;12819:9;12810:7;12806:23;12802:32;12799:2;;;12847:1;12844;12837:12;12799:2;12882:31;;12933:18;12922:30;;12919:2;;;12965:1;12962;12955:12;12919:2;12985:76;13053:7;13044:6;13033:9;13029:22;12985:76;;;12975:86;;12861:206;13098:2;13116:53;13161:7;13152:6;13141:9;13137:22;13116:53;;;13106:63;;13077:98;13234:2;13223:9;13219:18;13206:32;13258:18;13250:6;13247:30;13244:2;;;13290:1;13287;13280:12;13244:2;13310:62;13364:7;13355:6;13344:9;13340:22;13310:62;;13643:865;;;;;;;13836:3;13824:9;13815:7;13811:23;13807:33;13804:2;;;13853:1;13850;13843:12;13804:2;13888:1;13905:53;13950:7;13930:9;13905:53;;;13895:63;;13867:97;13995:2;14013:53;14058:7;14049:6;14038:9;14034:22;14013:53;;;14003:63;;13974:98;14131:2;14120:9;14116:18;14103:32;14155:18;14147:6;14144:30;14141:2;;;14187:1;14184;14177:12;14141:2;14215:64;14271:7;14262:6;14251:9;14247:22;14215:64;;;14197:82;;;;14082:203;14344:2;14333:9;14329:18;14316:32;14368:18;14360:6;14357:30;14354:2;;;14400:1;14397;14390:12;14354:2;14428:64;14484:7;14475:6;14464:9;14460:22;14428:64;;;14410:82;;;;14295:203;13798:710;;;;;;;;;14515:237;;14617:2;14605:9;14596:7;14592:23;14588:32;14585:2;;;14633:1;14630;14623:12;14585:2;14668:1;14685:51;14728:7;14708:9;14685:51;;14759:259;;14872:2;14860:9;14851:7;14847:23;14843:32;14840:2;;;14888:1;14885;14878:12;14840:2;14923:1;14940:62;14994:7;14974:9;14940:62;;15025:487;;;;15161:2;15149:9;15140:7;15136:23;15132:32;15129:2;;;15177:1;15174;15167:12;15129:2;15212:1;15229:51;15272:7;15252:9;15229:51;;;15219:61;;15191:95;15317:2;15335:53;15380:7;15371:6;15360:9;15356:22;15335:53;;;15325:63;;15296:98;15425:2;15443:53;15488:7;15479:6;15468:9;15464:22;15443:53;;15519:110;15592:31;15617:5;15592:31;;;15587:3;15580:44;15574:55;;;15636:101;15703:28;15725:5;15703:28;;15744:110;15817:31;15842:5;15817:31;;15861:297;;15961:38;15993:5;15961:38;;;16016:6;16011:3;16004:19;16028:63;16084:6;16077:4;16072:3;16068:14;16061:4;16054:5;16050:16;16028:63;;;16123:29;16145:6;16123:29;;;16103:50;;;16116:4;16103:50;;15941:217;-1:-1;;;15941:217;16461:156;16554:57;16605:5;16554:57;;16924:296;17079:2;17067:15;;17116:66;17111:2;17102:12;;17095:88;17211:2;17202:12;;17060:160;17229:296;17384:2;17372:15;;17421:66;17416:2;17407:12;;17400:88;17516:2;17507:12;;17365:160;17534:397;17689:2;17677:15;;17726:66;17721:2;17712:12;;17705:88;17827:66;17822:2;17813:12;;17806:88;17922:2;17913:12;;17670:261;18016:888;18244:22;;18157:4;18148:14;;;18278:61;18152:3;18244:22;18278:61;;;18177:174;18445:4;18438:5;18434:16;18428:23;18463:62;18519:4;18514:3;18510:14;18497:11;18463:62;;;18361:176;18621:4;18614:5;18610:16;18604:23;18639:62;18695:4;18690:3;18686:14;18673:11;18639:62;;;18547:166;18797:4;18790:5;18786:16;18780:23;18815:62;18871:4;18866:3;18862:14;18849:11;18815:62;;19028:104;19097:29;19120:5;19097:29;;19139:193;19247:2;19232:18;;19261:61;19236:9;19295:6;19261:61;;19339:955;19643:3;19628:19;;19658:61;19632:9;19692:6;19658:61;;;19730:62;19788:2;19777:9;19773:18;19764:6;19730:62;;;19803;19861:2;19850:9;19846:18;19837:6;19803:62;;;19876;19934:2;19923:9;19919:18;19910:6;19876:62;;;19949:63;20007:3;19996:9;19992:19;19983:6;19949:63;;;20061:9;20055:4;20051:20;20045:3;20034:9;20030:19;20023:49;20086:62;20143:4;20134:6;20086:62;;;20078:70;;20197:9;20191:4;20187:20;20181:3;20170:9;20166:19;20159:49;20222:62;20279:4;20270:6;20222:62;;;20214:70;19614:680;-1:-1;;;;;;;;;19614:680;20301:181;20403:2;20388:18;;20417:55;20392:9;20445:6;20417:55;;20489:378;20643:2;20628:18;;20657:61;20632:9;20691:6;20657:61;;;20766:9;20760:4;20756:20;20751:2;20740:9;20736:18;20729:48;20791:66;20852:4;20843:6;20791:66;;20874:489;21062:3;21047:19;;21077:61;21051:9;21111:6;21077:61;;;21149:58;21203:2;21192:9;21188:18;21179:6;21149:58;;;21218:62;21276:2;21265:9;21261:18;21252:6;21218:62;;;21291;21349:2;21338:9;21334:18;21325:6;21291:62;;;21033:330;;;;;;;;21370:277;21496:2;21510:47;;;21481:18;;21571:66;21481:18;21623:6;21571:66;;21654:581;21864:3;21879:47;;;21849:19;;21940:66;21849:19;21992:6;21940:66;;;21932:74;;22017:62;22075:2;22064:9;22060:18;22051:6;22017:62;;;22090;22148:2;22137:9;22133:18;22124:6;22090:62;;22242:446;22406:2;22420:47;;;22391:18;;22481:62;22391:18;22529:6;22481:62;;;22473:70;;22591:9;22585:4;22581:20;22576:2;22565:9;22561:18;22554:48;22616:62;22673:4;22664:6;22616:62;;22695:233;22823:2;22808:18;;22837:81;22812:9;22891:6;22837:81;;23215:387;23396:2;23410:47;;;23381:18;;23471:121;23381:18;23471:121;;23609:387;23790:2;23804:47;;;23775:18;;23865:121;23775:18;23865:121;;24003:387;24184:2;24198:47;;;24169:18;;24259:121;24169:18;24259:121;;24397:310;24563:3;24548:19;;24578:119;24552:9;24670:6;24578:119;;24714:193;24822:2;24807:18;;24836:61;24811:9;24870:6;24836:61;;24914:387;25074:2;25059:18;;25088:57;25063:9;25118:6;25088:57;;;25156:62;25214:2;25203:9;25199:18;25190:6;25156:62;;;25229;25287:2;25276:9;25272:18;25263:6;25229:62;;25308:256;25370:2;25364:9;25396:17;;;25471:18;25456:34;;25492:22;;;25453:62;25450:2;;;25528:1;25525;25518:12;25450:2;25544;25537:22;25348:216;;-1:-1;25348:216;25571:263;;25735:18;25727:6;25724:30;25721:2;;;25767:1;25764;25757:12;25721:2;-1:-1;25796:4;25784:17;;;25814:15;;25658:176;26390:254;;26529:18;26521:6;26518:30;26515:2;;;26561:1;26558;26551:12;26515:2;-1:-1;26634:4;26605;26582:17;;;;-1:-1;;26578:33;26624:15;;26452:192;26916:87;26986:12;;26970:33;27203:128;-1:-1;;;;;27272:54;;27255:76;27338:92;27411:13;27404:21;;27387:43;27437:79;27506:5;27489:27;27609:88;27687:4;27676:16;;27659:38;28205:135;;28304:31;28329:5;28304:31;;28348:145;28429:6;28424:3;28419;28406:30;-1:-1;28485:1;28467:16;;28460:27;28399:94;28502:268;28567:1;28574:101;28588:6;28585:1;28582:13;28574:101;;;28655:11;;;28649:18;28636:11;;;28629:39;28610:2;28603:10;28574:101;;;28690:6;28687:1;28684:13;28681:2;;;-1:-1;;28755:1;28737:16;;28730:27;28551:219;28778:97;28866:2;28846:14;-1:-1;;28842:28;;28826:49"
            }
        }
    },
    "sources": {
        "current/protocol/AssetProxy/interfaces/IAssetProxy.sol": {
            "id": 0
        },
        "current/protocol/AssetProxy/interfaces/IAuthorizable.sol": {
            "id": 1
        },
        "current/protocol/Exchange/Exchange.sol": {
            "id": 2
        },
        "current/protocol/Exchange/MixinAssetProxyDispatcher.sol": {
            "id": 3
        },
        "current/protocol/Exchange/MixinExchangeCore.sol": {
            "id": 4
        },
        "current/protocol/Exchange/MixinSettlement.sol": {
            "id": 5
        },
        "current/protocol/Exchange/MixinSignatureValidator.sol": {
            "id": 6
        },
        "current/protocol/Exchange/MixinTransactions.sol": {
            "id": 7
        },
        "current/protocol/Exchange/MixinWrapperFunctions.sol": {
            "id": 8
        },
        "current/protocol/Exchange/interfaces/IAssetProxyDispatcher.sol": {
            "id": 9
        },
        "current/protocol/Exchange/interfaces/IExchangeCore.sol": {
            "id": 10
        },
        "current/protocol/Exchange/interfaces/ISignatureValidator.sol": {
            "id": 11
        },
        "current/protocol/Exchange/interfaces/ISigner.sol": {
            "id": 12
        },
        "current/protocol/Exchange/interfaces/ITransactions.sol": {
            "id": 13
        },
        "current/protocol/Exchange/libs/LibExchangeErrors.sol": {
            "id": 14
        },
        "current/protocol/Exchange/libs/LibFillResults.sol": {
            "id": 15
        },
        "current/protocol/Exchange/libs/LibMath.sol": {
            "id": 16
        },
        "current/protocol/Exchange/libs/LibOrder.sol": {
            "id": 17
        },
        "current/protocol/Exchange/mixins/MAssetProxyDispatcher.sol": {
            "id": 18
        },
        "current/protocol/Exchange/mixins/MExchangeCore.sol": {
            "id": 19
        },
        "current/protocol/Exchange/mixins/MSettlement.sol": {
            "id": 20
        },
        "current/protocol/Exchange/mixins/MSignatureValidator.sol": {
            "id": 21
        },
        "current/protocol/Exchange/mixins/MTransactions.sol": {
            "id": 22
        },
        "current/utils/LibBytes/LibBytes.sol": {
            "id": 23
        },
        "current/utils/Ownable/IOwnable.sol": {
            "id": 24
        },
        "current/utils/Ownable/Ownable.sol": {
            "id": 25
        },
        "current/utils/SafeMath/SafeMath.sol": {
            "id": 26
        }
    },
    "sourceCodes": {
        "current/protocol/AssetProxy/interfaces/IAssetProxy.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\nimport \"./IAuthorizable.sol\";\n\ncontract IAssetProxy is\n    IAuthorizable\n{\n\n    /// @dev Transfers assets. Either succeeds or throws.\n    /// @param assetMetadata Byte array encoded for the respective asset proxy.\n    /// @param from Address to transfer asset from.\n    /// @param to Address to transfer asset to.\n    /// @param amount Amount of asset to transfer.\n    function transferFrom(\n        bytes assetMetadata,\n        address from,\n        address to,\n        uint256 amount)\n        external;\n    \n    /// @dev Makes multiple transfers of assets. Either succeeds or throws.\n    /// @param assetMetadata Array of byte arrays encoded for the respective asset proxy.\n    /// @param from Array of addresses to transfer assets from.\n    /// @param to Array of addresses to transfer assets to.\n    /// @param amounts Array of amounts of assets to transfer.\n    function batchTransferFrom(\n        bytes[] memory assetMetadata,\n        address[] memory from,\n        address[] memory to,\n        uint256[] memory amounts)\n        public;\n\n    /// @dev Gets the proxy id associated with the proxy address.\n    /// @return Proxy id.\n    function getProxyId()\n        external\n        view\n        returns (uint8);\n}\n\n",
        "current/protocol/AssetProxy/interfaces/IAuthorizable.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\nimport \"../../../utils/Ownable/IOwnable.sol\";\n\ncontract IAuthorizable is\n    IOwnable\n{\n\n    /// @dev Gets all authorized addresses.\n    /// @return Array of authorized addresses.\n    function getAuthorizedAddresses()\n        external\n        view\n        returns (address[]);\n\n    /// @dev Authorizes an address.\n    /// @param target Address to authorize.\n    function addAuthorizedAddress(address target)\n        external;\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    function removeAuthorizedAddress(address target)\n        external;\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    /// @param index Index of target in authorities array.\n    function removeAuthorizedAddressAtIndex(address target, uint256 index)\n        external;\n}\n",
        "current/protocol/Exchange/Exchange.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\nimport \"./MixinExchangeCore.sol\";\nimport \"./MixinSignatureValidator.sol\";\nimport \"./MixinSettlement.sol\";\nimport \"./MixinWrapperFunctions.sol\";\nimport \"./MixinAssetProxyDispatcher.sol\";\nimport \"./MixinTransactions.sol\";\n\ncontract Exchange is\n    MixinWrapperFunctions,\n    MixinExchangeCore,\n    MixinSettlement,\n    MixinSignatureValidator,\n    MixinTransactions,\n    MixinAssetProxyDispatcher\n{\n    string constant public VERSION = \"2.0.1-alpha\";\n\n    constructor (bytes memory _zrxProxyData)\n        public\n        MixinExchangeCore()\n        MixinSignatureValidator()\n        MixinSettlement(_zrxProxyData)\n        MixinWrapperFunctions()\n        MixinAssetProxyDispatcher()\n        MixinTransactions()\n    {}\n}\n",
        "current/protocol/Exchange/MixinAssetProxyDispatcher.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\nimport \"../../utils/Ownable/Ownable.sol\";\nimport \"../AssetProxy/interfaces/IAssetProxy.sol\";\nimport \"./libs/LibExchangeErrors.sol\";\nimport \"./mixins/MAssetProxyDispatcher.sol\";\n\ncontract MixinAssetProxyDispatcher is\n    LibExchangeErrors,\n    Ownable,\n    MAssetProxyDispatcher\n{\n    // Mapping from Asset Proxy Id's to their respective Asset Proxy\n    mapping (uint8 => IAssetProxy) public assetProxies;\n\n    /// @dev Registers an asset proxy to an asset proxy id.\n    ///      An id can only be assigned to a single proxy at a given time.\n    /// @param assetProxyId Id to register`newAssetProxy` under.\n    /// @param newAssetProxy Address of new asset proxy to register, or 0x0 to unset assetProxyId.\n    /// @param oldAssetProxy Existing asset proxy to overwrite, or 0x0 if assetProxyId is currently unused.\n    function registerAssetProxy(\n        uint8 assetProxyId,\n        address newAssetProxy,\n        address oldAssetProxy)\n        external\n        onlyOwner\n    {\n        // Ensure the existing asset proxy is not unintentionally overwritten\n        require(\n            oldAssetProxy == address(assetProxies[assetProxyId]),\n            OLD_ASSET_PROXY_MISMATCH\n        );\n\n        IAssetProxy assetProxy = IAssetProxy(newAssetProxy);\n\n        // Ensure that the id of newAssetProxy matches the passed in assetProxyId, unless it is being reset to 0.\n        if (newAssetProxy != address(0)) {\n            uint8 newAssetProxyId = assetProxy.getProxyId();\n            require(\n                newAssetProxyId == assetProxyId,\n                NEW_ASSET_PROXY_MISMATCH\n            );\n        }\n\n        // Add asset proxy and log registration.\n        assetProxies[assetProxyId] = assetProxy;\n        emit AssetProxySet(assetProxyId, newAssetProxy, oldAssetProxy);\n    }\n\n    /// @dev Gets an asset proxy.\n    /// @param assetProxyId Id of the asset proxy.\n    /// @return The asset proxy registered to assetProxyId. Returns 0x0 if no proxy is registered.\n    function getAssetProxy(uint8 assetProxyId)\n        external\n        view\n        returns (address)\n    {\n        address assetProxy = address(assetProxies[assetProxyId]);\n        return assetProxy;\n    }\n\n    /// @dev Forwards arguments to assetProxy and calls `transferFrom`. Either succeeds or throws.\n    /// @param assetMetadata Byte array encoded for the respective asset proxy.\n    /// @param from Address to transfer token from.\n    /// @param to Address to transfer token to.\n    /// @param amount Amount of token to transfer.\n    function dispatchTransferFrom(\n        bytes memory assetMetadata,\n        address from,\n        address to,\n        uint256 amount)\n        internal\n    {\n        // Do nothing if no amount should be transferred.\n        if (amount > 0) {\n            // Lookup asset proxy\n            require(\n                assetMetadata.length >= 1,\n                GT_ZERO_LENGTH_REQUIRED\n            );\n            uint8 assetProxyId = uint8(assetMetadata[0]);\n            IAssetProxy assetProxy = assetProxies[assetProxyId];\n\n            // transferFrom will either succeed or throw.\n            assetProxy.transferFrom(assetMetadata, from, to, amount);\n        }\n    }\n}\n",
        "current/protocol/Exchange/MixinExchangeCore.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\nimport \"./libs/LibFillResults.sol\";\nimport \"./libs/LibOrder.sol\";\nimport \"./libs/LibMath.sol\";\nimport \"./libs/LibExchangeErrors.sol\";\nimport \"./mixins/MExchangeCore.sol\";\nimport \"./mixins/MSettlement.sol\";\nimport \"./mixins/MSignatureValidator.sol\";\nimport \"./mixins/MTransactions.sol\";\n\ncontract MixinExchangeCore is\n    LibOrder,\n    LibFillResults,\n    LibMath,\n    LibExchangeErrors,\n    MExchangeCore,\n    MSettlement,\n    MSignatureValidator,\n    MTransactions\n{\n    // Mapping of orderHash => amount of takerAsset already bought by maker\n    mapping (bytes32 => uint256) public filled;\n\n    // Mapping of orderHash => cancelled\n    mapping (bytes32 => bool) public cancelled;\n\n    // Mapping of makerAddress => lowest salt an order can have in order to be fillable\n    // Orders with a salt less than their maker's epoch are considered cancelled\n    mapping (address => uint256) public makerEpoch;\n\n    /// @dev Cancels all orders reated by sender with a salt less than or equal to the specified salt value.\n    /// @param salt Orders created with a salt less or equal to this value will be cancelled.\n    function cancelOrdersUpTo(uint256 salt)\n        external\n    {\n        uint256 newMakerEpoch = salt + 1;  // makerEpoch is initialized to 0, so to cancelUpTo we need salt + 1\n        require(\n            newMakerEpoch > makerEpoch[msg.sender],  // epoch must be monotonically increasing\n            INVALID_NEW_MAKER_EPOCH\n        );\n        makerEpoch[msg.sender] = newMakerEpoch;\n        emit CancelUpTo(msg.sender, newMakerEpoch);\n    }\n\n    /// @dev Fills the input order.\n    /// @param order Order struct containing order specifications.\n    /// @param takerAssetFillAmount Desired amount of takerAsset to sell.\n    /// @param signature Proof that order has been created by maker.\n    /// @return Amounts filled and fees paid by maker and taker.\n    function fillOrder(\n        Order memory order,\n        uint256 takerAssetFillAmount,\n        bytes memory signature)\n        public\n        returns (FillResults memory fillResults)\n    {\n        // Compute the order hash\n        bytes32 orderHash = getOrderHash(order);\n\n        // Check if order has been cancelled by salt value\n        if (order.salt < makerEpoch[order.makerAddress]) {\n            emit ExchangeError(uint8(Errors.ORDER_CANCELLED), orderHash);\n            return fillResults;\n        }\n\n        // Check if order has been cancelled by orderHash\n        if (cancelled[orderHash]) {\n            emit ExchangeError(uint8(Errors.ORDER_CANCELLED), orderHash);\n            return fillResults;\n        }\n\n        // Validate order and maker only if first time seen\n        // TODO: Read filled and cancelled only once\n        if (filled[orderHash] == 0) {\n            require(\n                order.makerAssetAmount > 0,\n                GT_ZERO_AMOUNT_REQUIRED\n            );\n            require(\n                order.takerAssetAmount > 0,\n                GT_ZERO_AMOUNT_REQUIRED\n            );\n            require(\n                isValidSignature(orderHash, order.makerAddress, signature),\n                SIGNATURE_VALIDATION_FAILED\n            );\n        }\n        \n        // Validate sender is allowed to fill this order\n        if (order.senderAddress != address(0)) {\n            require(\n                order.senderAddress == msg.sender,\n                INVALID_SENDER\n            );\n        }\n\n        // Validate taker is allowed to fill this order\n        address takerAddress = getCurrentContextAddress();\n        if (order.takerAddress != address(0)) {\n            require(\n                order.takerAddress == takerAddress,\n                INVALID_CONTEXT\n            );\n        }\n        require(\n            takerAssetFillAmount > 0,\n            GT_ZERO_AMOUNT_REQUIRED\n        );\n\n        // Validate order expiration\n        if (block.timestamp >= order.expirationTimeSeconds) {\n            emit ExchangeError(uint8(Errors.ORDER_EXPIRED), orderHash);\n            return fillResults;\n        }\n\n        // Validate order availability\n        uint256 remainingTakerAssetFillAmount = safeSub(order.takerAssetAmount, filled[orderHash]);\n        if (remainingTakerAssetFillAmount == 0) {\n            emit ExchangeError(uint8(Errors.ORDER_FULLY_FILLED), orderHash);\n            return fillResults;\n        }\n\n        // Validate fill order rounding\n        fillResults.takerAssetFilledAmount = min256(takerAssetFillAmount, remainingTakerAssetFillAmount);\n        if (isRoundingError(fillResults.takerAssetFilledAmount, order.takerAssetAmount, order.makerAssetAmount)) {\n            emit ExchangeError(uint8(Errors.ROUNDING_ERROR_TOO_LARGE), orderHash);\n            fillResults.takerAssetFilledAmount = 0;\n            return fillResults;\n        }\n\n        // Update state\n        filled[orderHash] = safeAdd(filled[orderHash], fillResults.takerAssetFilledAmount);\n\n        // Settle order\n        (fillResults.makerAssetFilledAmount, fillResults.makerFeePaid, fillResults.takerFeePaid) =\n            settleOrder(order, takerAddress, fillResults.takerAssetFilledAmount);\n\n        // Log order\n        emitFillEvent(order, takerAddress, orderHash, fillResults);\n        return fillResults;\n    }\n\n    /// @dev After calling, the order can not be filled anymore.\n    /// @param order Order struct containing order specifications.\n    /// @return True if the order state changed to cancelled.\n    ///         False if the transaction was already cancelled or expired.\n    function cancelOrder(Order memory order)\n        public\n        returns (bool)\n    {\n        // Compute the order hash\n        bytes32 orderHash = getOrderHash(order);\n\n        // Validate the order\n        require(\n            order.makerAssetAmount > 0,\n            GT_ZERO_AMOUNT_REQUIRED\n        );\n        require(\n            order.takerAssetAmount > 0,\n            GT_ZERO_AMOUNT_REQUIRED\n        );\n\n        // Validate sender is allowed to cancel this order\n        if (order.senderAddress != address(0)) {\n            require(\n                order.senderAddress == msg.sender,\n                INVALID_SENDER\n            );\n        }\n        \n        // Validate transaction signed by maker\n        address makerAddress = getCurrentContextAddress();\n        require(\n            order.makerAddress == makerAddress,\n            INVALID_CONTEXT\n        );\n        \n        if (block.timestamp >= order.expirationTimeSeconds) {\n            emit ExchangeError(uint8(Errors.ORDER_EXPIRED), orderHash);\n            return false;\n        }\n\n        if (cancelled[orderHash]) {\n            emit ExchangeError(uint8(Errors.ORDER_CANCELLED), orderHash);\n            return false;\n        }\n\n        cancelled[orderHash] = true;\n\n        emit Cancel(\n            order.makerAddress,\n            order.feeRecipientAddress,\n            orderHash,\n            order.makerAssetData,\n            order.takerAssetData\n        );\n        return true;\n    }\n\n    /// @dev Logs a Fill event with the given arguments.\n    ///      The sole purpose of this function is to get around the stack variable limit.\n    function emitFillEvent(\n        Order memory order,\n        address takerAddress,\n        bytes32 orderHash,\n        FillResults memory fillResults)\n        internal\n    {\n        emit Fill(\n            order.makerAddress,\n            takerAddress,\n            order.feeRecipientAddress,\n            fillResults.makerAssetFilledAmount,\n            fillResults.takerAssetFilledAmount,\n            fillResults.makerFeePaid,\n            fillResults.takerFeePaid,\n            orderHash,\n            order.makerAssetData,\n            order.takerAssetData\n        );\n    }\n}\n",
        "current/protocol/Exchange/MixinSettlement.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\nimport \"./mixins/MSettlement.sol\";\nimport \"./mixins/MAssetProxyDispatcher.sol\";\nimport \"./libs/LibOrder.sol\";\nimport \"./libs/LibMath.sol\";\n\ncontract MixinSettlement is\n    LibMath,\n    MSettlement,\n    MAssetProxyDispatcher\n{\n    // ZRX metadata used for fee transfers.\n    // This will be constant throughout the life of the Exchange contract,\n    // since ZRX will always be transferred via the ERC20 AssetProxy.\n    bytes internal ZRX_PROXY_DATA;\n\n    /// @dev Gets the ZRX metadata used for fee transfers.\n    function zrxProxyData()\n        external\n        view\n        returns (bytes memory)\n    {\n        return ZRX_PROXY_DATA;\n    }\n\n    /// TODO: _zrxProxyData should be a constant in production.\n    /// @dev Constructor sets the metadata that will be used for paying ZRX fees.\n    /// @param _zrxProxyData Byte array containing ERC20 proxy id concatenated with address of ZRX.\n    constructor (bytes memory _zrxProxyData)\n        public\n    {\n        ZRX_PROXY_DATA = _zrxProxyData;\n    }\n\n    /// @dev Settles an order by transferring assets between counterparties.\n    /// @param order Order struct containing order specifications.\n    /// @param takerAddress Address selling takerAsset and buying makerAsset.\n    /// @param takerAssetFilledAmount The amount of takerAsset that will be transferred to the order's maker.\n    /// @return Amount filled by maker and fees paid by maker/taker.\n    function settleOrder(\n        LibOrder.Order memory order,\n        address takerAddress,\n        uint256 takerAssetFilledAmount)\n        internal\n        returns (\n            uint256 makerAssetFilledAmount,\n            uint256 makerFeePaid,\n            uint256 takerFeePaid\n        )\n    {\n        makerAssetFilledAmount = getPartialAmount(takerAssetFilledAmount, order.takerAssetAmount, order.makerAssetAmount);\n        dispatchTransferFrom(\n            order.makerAssetData,\n            order.makerAddress,\n            takerAddress,\n            makerAssetFilledAmount\n        );\n        dispatchTransferFrom(\n            order.takerAssetData,\n            takerAddress,\n            order.makerAddress,\n            takerAssetFilledAmount\n        );\n        makerFeePaid = getPartialAmount(takerAssetFilledAmount, order.takerAssetAmount, order.makerFee);\n        dispatchTransferFrom(\n            ZRX_PROXY_DATA,\n            order.makerAddress,\n            order.feeRecipientAddress,\n            makerFeePaid\n        );\n        takerFeePaid = getPartialAmount(takerAssetFilledAmount, order.takerAssetAmount, order.takerFee);\n        dispatchTransferFrom(\n            ZRX_PROXY_DATA,\n            takerAddress,\n            order.feeRecipientAddress,\n            takerFeePaid\n        );\n        return (makerAssetFilledAmount, makerFeePaid, takerFeePaid);\n    }\n}\n",
        "current/protocol/Exchange/MixinSignatureValidator.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\nimport \"./mixins/MSignatureValidator.sol\";\nimport \"./interfaces/ISigner.sol\";\nimport \"./libs/LibExchangeErrors.sol\";\nimport \"../../utils/LibBytes/LibBytes.sol\";\n\ncontract MixinSignatureValidator is\n    LibBytes,\n    LibExchangeErrors,\n    MSignatureValidator\n{\n\n    // Mapping of hash => signer => signed\n    mapping(bytes32 => mapping(address => bool)) preSigned;\n\n    /// @dev Approves a hash on-chain using any valid signature type.\n    ///      After presigning a hash, the preSign signature type will become valid for that hash and signer.\n    /// @param signer Address that should have signed the given hash.\n    /// @param signature Proof that the hash has been signed by signer.\n    function preSign(\n        bytes32 hash,\n        address signer,\n        bytes signature)\n        external\n    {\n        require(\n            isValidSignature(hash, signer, signature),\n            SIGNATURE_VALIDATION_FAILED\n        );\n        preSigned[hash][signer] = true;\n    }\n\n    /// @dev Verifies that a hash has been signed by the given signer.\n    /// @param hash Any 32 byte hash.\n    /// @param signer Address that should have signed the given hash.\n    /// @param signature Proof that the hash has been signed by signer.\n    /// @return True if the address recovered from the provided signature matches the input signer address.\n    function isValidSignature(\n        bytes32 hash,\n        address signer,\n        bytes memory signature)\n        internal\n        view\n        returns (bool isValid)\n    {\n        // TODO: Domain separation: make hash depend on role. (Taker sig should not be valid as maker sig, etc.)\n\n        require(\n            signature.length >= 1,\n            INVALID_SIGNATURE_LENGTH\n        );\n        SignatureType signatureType = SignatureType(uint8(signature[0]));\n\n        // Variables are not scoped in Solidity\n        uint8 v;\n        bytes32 r;\n        bytes32 s;\n        address recovered;\n\n        // Always illegal signature\n        // This is always an implicit option since a signer can create a\n        // signature array with invalid type or length. We may as well make\n        // it an explicit option. This aids testing and analysis. It is\n        // also the initialization value for the enum type.\n        if (signatureType == SignatureType.Illegal) {\n            // NOTE: Reason cannot be assigned to a variable because of https://github.com/ethereum/solidity/issues/4051\n            revert(\"Illegal signature type.\");\n\n        // Always invalid signature\n        // Like Illegal, this is always implicitly available and therefore\n        // offered explicitly. It can be implicitly created by providing\n        // a correctly formatted but incorrect signature.\n        } else if (signatureType == SignatureType.Invalid) {\n            require(\n                signature.length == 1,\n                INVALID_SIGNATURE_LENGTH\n            );\n            isValid = false;\n            return isValid;\n\n        // Implicitly signed by caller\n        // The signer has initiated the call. In the case of non-contract\n        // accounts it means the transaction itself was signed.\n        // Example: let's say for a particular operation three signatures\n        // A, B and C are required. To submit the transaction, A and B can\n        // give a signature to C, who can then submit the transaction using\n        // `Caller` for his own signature. Or A and C can sign and B can\n        // submit using `Caller`. Having `Caller` allows this flexibility.\n        } else if (signatureType == SignatureType.Caller) {\n            require(\n                signature.length == 1,\n                INVALID_SIGNATURE_LENGTH\n            );\n            isValid = signer == msg.sender;\n            return isValid;\n\n        // Signed using web3.eth_sign\n        } else if (signatureType == SignatureType.Ecrecover) {\n            require(\n                signature.length == 66,\n                INVALID_SIGNATURE_LENGTH\n            );\n            v = uint8(signature[1]);\n            r = readBytes32(signature, 2);\n            s = readBytes32(signature, 34);\n            recovered = ecrecover(\n                keccak256(\"\\x19Ethereum Signed Message:\\n32\", hash),\n                v,\n                r,\n                s\n            );\n            isValid = signer == recovered;\n            return isValid;\n\n        // Signature using EIP712\n        } else if (signatureType == SignatureType.EIP712) {\n            require(\n                signature.length == 66,\n                INVALID_SIGNATURE_LENGTH\n            );\n            v = uint8(signature[1]);\n            r = readBytes32(signature, 2);\n            s = readBytes32(signature, 34);\n            recovered = ecrecover(hash, v, r, s);\n            isValid = signer == recovered;\n            return isValid;\n\n        // Signature from Trezor hardware wallet\n        // It differs from web3.eth_sign in the encoding of message length\n        // (Bitcoin varint encoding vs ascii-decimal, the latter is not\n        // self-terminating which leads to ambiguities).\n        // See also:\n        // https://en.bitcoin.it/wiki/Protocol_documentation#Variable_length_integer\n        // https://github.com/trezor/trezor-mcu/blob/master/firmware/ethereum.c#L602\n        // https://github.com/trezor/trezor-mcu/blob/master/firmware/crypto.c#L36\n        } else if (signatureType == SignatureType.Trezor) {\n            require(\n                signature.length == 66,\n                INVALID_SIGNATURE_LENGTH\n            );\n            v = uint8(signature[1]);\n            r = readBytes32(signature, 2);\n            s = readBytes32(signature, 34);\n            recovered = ecrecover(\n                keccak256(\"\\x19Ethereum Signed Message:\\n\\x41\", hash),\n                v,\n                r,\n                s\n            );\n            isValid = signer == recovered;\n            return isValid;\n\n        // Signature verified by signer contract\n        } else if (signatureType == SignatureType.Contract) {\n            isValid = ISigner(signer).isValidSignature(hash, signature);\n            return isValid;\n\n        // Signer signed hash previously using the preSign function\n        } else if (signatureType == SignatureType.PreSigned) {\n            isValid = preSigned[hash][signer];\n            return isValid;\n        }\n\n        // Anything else is illegal (We do not return false because\n        // the signature may actually be valid, just not in a format\n        // that we currently support. In this case returning false\n        // may lead the caller to incorrectly believe that the\n        // signature was invalid.)\n        // NOTE: Reason cannot be assigned to a variable because of https://github.com/ethereum/solidity/issues/4051\n        revert(\"Unsupported signature type.\");\n    }\n}\n",
        "current/protocol/Exchange/MixinTransactions.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\npragma solidity ^0.4.21;\n\nimport \"./mixins/MSignatureValidator.sol\";\nimport \"./mixins/MTransactions.sol\";\nimport \"./libs/LibExchangeErrors.sol\";\n\ncontract MixinTransactions is\n    LibExchangeErrors,\n    MSignatureValidator,\n    MTransactions\n{\n\n    // Mapping of transaction hash => executed\n    // This prevents transactions from being executed more than once.\n    mapping (bytes32 => bool) public transactions;\n\n    // Address of current transaction signer\n    address public currentContextAddress;\n\n    /// @dev Executes an exchange method call in the context of signer.\n    /// @param salt Arbitrary number to ensure uniqueness of transaction hash.\n    /// @param signer Address of transaction signer.\n    /// @param data AbiV2 encoded calldata.\n    /// @param signature Proof of signer transaction by signer.\n    function executeTransaction(\n        uint256 salt,\n        address signer,\n        bytes data,\n        bytes signature)\n        external\n    {\n        // Prevent reentrancy\n        require(currentContextAddress == address(0));\n\n        // Calculate transaction hash\n        bytes32 transactionHash = keccak256(\n            address(this),\n            salt,\n            data\n        );\n\n        // Validate transaction has not been executed\n        require(\n            !transactions[transactionHash],\n            DUPLICATE_TRANSACTION_HASH\n        );\n\n        // TODO: is SignatureType.Caller necessary if we make this check?\n        if (signer != msg.sender) {\n            // Validate signature\n            require(\n                isValidSignature(transactionHash, signer, signature),\n                SIGNATURE_VALIDATION_FAILED\n            );\n\n            // Set the current transaction signer\n            currentContextAddress = signer;\n        }\n\n        // Execute transaction\n        transactions[transactionHash] = true;\n        require(\n            address(this).delegatecall(data),\n            TRANSACTION_EXECUTION_FAILED\n        );\n\n        // Reset current transaction signer\n        // TODO: Check if gas is paid when currentContextAddress is already 0.\n        currentContextAddress = address(0);\n    }\n\n    /// @dev The current function will be called in the context of this address (either 0x transaction signer or `msg.sender`).\n    ///      If calling a fill function, this address will represent the taker.\n    ///      If calling a cancel function, this address will represent the maker.\n    /// @return Signer of 0x transaction if entry point is `executeTransaction`.\n    ///         `msg.sender` if entry point is any other function.\n    function getCurrentContextAddress()\n        internal\n        view\n        returns (address)\n    {\n        address contextAddress = currentContextAddress == address(0) ? msg.sender : currentContextAddress;\n        return contextAddress;\n    }\n}\n",
        "current/protocol/Exchange/MixinWrapperFunctions.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\nimport \"../../utils/LibBytes/LibBytes.sol\";\nimport \"./mixins/MExchangeCore.sol\";\nimport \"./libs/LibMath.sol\";\nimport \"./libs/LibOrder.sol\";\nimport \"./libs/LibFillResults.sol\";\nimport \"./libs/LibExchangeErrors.sol\";\n\ncontract MixinWrapperFunctions is\n    LibOrder,\n    LibFillResults,\n    LibMath,\n    LibBytes,\n    LibExchangeErrors,\n    MExchangeCore\n{\n    /// @dev Fills the input order. Reverts if exact takerAssetFillAmount not filled.\n    /// @param order Order struct containing order specifications.\n    /// @param takerAssetFillAmount Desired amount of takerAsset to sell.\n    /// @param signature Proof that order has been created by maker.\n    function fillOrKillOrder(\n        Order memory order,\n        uint256 takerAssetFillAmount,\n        bytes memory signature)\n        public\n        returns (FillResults memory fillResults)\n    {\n        fillResults = fillOrder(\n            order,\n            takerAssetFillAmount,\n            signature\n        );\n        require(\n            fillResults.takerAssetFilledAmount == takerAssetFillAmount,\n            COMPLETE_FILL_FAILED\n        );\n        return fillResults;\n    }\n\n    /// @dev Fills an order with specified parameters and ECDSA signature.\n    ///      Returns false if the transaction would otherwise revert.\n    /// @param order Order struct containing order specifications.\n    /// @param takerAssetFillAmount Desired amount of takerAsset to sell.\n    /// @param signature Proof that order has been created by maker.\n    /// @return Amounts filled and fees paid by maker and taker.\n    function fillOrderNoThrow(\n        Order memory order,\n        uint256 takerAssetFillAmount,\n        bytes memory signature)\n        public\n        returns (FillResults memory fillResults)\n    {\n        // We need to call MExchangeCore.fillOrder using a delegatecall in\n        // assembly so that we can intercept a call that throws. For this, we\n        // need the input encoded in memory in the Ethereum ABIv2 format [1].\n\n        // | Area     | Offset | Length  | Contents                                    |\n        // | -------- |--------|---------|-------------------------------------------- |\n        // | Header   | 0x00   | 4       | function selector                           |\n        // | Params   |        | 3 * 32  | function parameters:                        |\n        // |          | 0x00   |         |   1. offset to order (*)                    |\n        // |          | 0x20   |         |   2. takerAssetFillAmount                   |\n        // |          | 0x40   |         |   3. offset to signature (*)                |\n        // | Data     |        | 12 * 32 | order:                                      |\n        // |          | 0x000  |         |   1.  senderAddress                         |\n        // |          | 0x020  |         |   2.  makerAddress                          |\n        // |          | 0x040  |         |   3.  takerAddress                          |\n        // |          | 0x060  |         |   4.  feeRecipientAddress                   |\n        // |          | 0x080  |         |   5.  makerAssetAmount                      |\n        // |          | 0x0A0  |         |   6.  takerAssetAmount                      |\n        // |          | 0x0C0  |         |   7.  makerFeeAmount                        |\n        // |          | 0x0E0  |         |   8.  takerFeeAmount                        |\n        // |          | 0x100  |         |   9.  expirationTimeSeconds                 |\n        // |          | 0x120  |         |   10. salt                                  |\n        // |          | 0x140  |         |   11. Offset to makerAssetProxyMetadata (*) |\n        // |          | 0x160  |         |   12. Offset to takerAssetProxyMetadata (*) |\n        // |          | 0x180  | 32      | makerAssetProxyMetadata Length              |\n        // |          | 0x1A0  | **      | makerAssetProxyMetadata Contents            |\n        // |          | 0x1C0  | 32      | takerAssetProxyMetadata Length              |\n        // |          | 0x1E0  | **      | takerAssetProxyMetadata Contents            |\n        // |          | 0x200  | 32      | signature Length                            |\n        // |          | 0x220  | **      | signature Contents                          |\n\n        // * Offsets are calculated from the beginning of the current area: Header, Params, Data:\n        //     An offset stored in the Params area is calculated from the beginning of the Params section.\n        //     An offset stored in the Data area is calculated from the beginning of the Data section.\n\n        // ** The length of dynamic array contents are stored in the field immediately preceeding the contents.\n\n        // [1]: https://solidity.readthedocs.io/en/develop/abi-spec.html\n\n        bytes4 fillOrderSelector = this.fillOrder.selector;\n\n        assembly {\n\n            // Areas below may use the following variables:\n            //   1. <area>Start   -- Start of this area in memory\n            //   2. <area>End     -- End of this area in memory. This value may\n            //                       be precomputed (before writing contents),\n            //                       or it may be computed as contents are written.\n            //   3. <area>Offset  -- Current offset into area. If an area's End\n            //                       is precomputed, this variable tracks the\n            //                       offsets of contents as they are written.\n\n            /////// Setup Header Area ///////\n            // Load free memory pointer\n            let headerAreaStart := mload(0x40)\n            mstore(headerAreaStart, fillOrderSelector)\n            let headerAreaEnd := add(headerAreaStart, 0x4)\n\n            /////// Setup Params Area ///////\n            // This area is preallocated and written to later.\n            // This is because we need to fill in offsets that have not yet been calculated.\n            let paramsAreaStart := headerAreaEnd\n            let paramsAreaEnd := add(paramsAreaStart, 0x60)\n            let paramsAreaOffset := paramsAreaStart\n\n            /////// Setup Data Area ///////\n            let dataAreaStart := paramsAreaEnd\n            let dataAreaEnd := dataAreaStart\n\n            // Offset from the source data we're reading from\n            let sourceOffset := order\n            // arrayLenBytes and arrayLenWords track the length of a dynamically-allocated bytes array.\n            let arrayLenBytes := 0\n            let arrayLenWords := 0\n\n            /////// Write order Struct ///////\n            // Write memory location of Order, relative to the start of the\n            // parameter list, then increment the paramsAreaOffset respectively.\n            mstore(paramsAreaOffset, sub(dataAreaEnd, paramsAreaStart))\n            paramsAreaOffset := add(paramsAreaOffset, 0x20)\n\n            // Write values for each field in the order\n            // It would be nice to use a loop, but we save on gas by writing\n            // the stores sequentially.\n            mstore(dataAreaEnd, mload(sourceOffset))                            // makerAddress\n            mstore(add(dataAreaEnd, 0x20), mload(add(sourceOffset, 0x20)))      // takerAddress\n            mstore(add(dataAreaEnd, 0x40), mload(add(sourceOffset, 0x40)))      // feeRecipientAddress\n            mstore(add(dataAreaEnd, 0x60), mload(add(sourceOffset, 0x60)))      // senderAddress\n            mstore(add(dataAreaEnd, 0x80), mload(add(sourceOffset, 0x80)))      // makerAssetAmount\n            mstore(add(dataAreaEnd, 0xA0), mload(add(sourceOffset, 0xA0)))      // takerAssetAmount\n            mstore(add(dataAreaEnd, 0xC0), mload(add(sourceOffset, 0xC0)))      // makerFeeAmount\n            mstore(add(dataAreaEnd, 0xE0), mload(add(sourceOffset, 0xE0)))      // takerFeeAmount\n            mstore(add(dataAreaEnd, 0x100), mload(add(sourceOffset, 0x100)))    // expirationTimeSeconds\n            mstore(add(dataAreaEnd, 0x120), mload(add(sourceOffset, 0x120)))    // salt\n            mstore(add(dataAreaEnd, 0x140), mload(add(sourceOffset, 0x140)))    // Offset to makerAssetProxyMetadata\n            mstore(add(dataAreaEnd, 0x160), mload(add(sourceOffset, 0x160)))    // Offset to takerAssetProxyMetadata\n            dataAreaEnd := add(dataAreaEnd, 0x180)\n            sourceOffset := add(sourceOffset, 0x180)\n\n            // Write offset to <order.makerAssetProxyMetadata>\n            mstore(add(dataAreaStart, mul(10, 0x20)), sub(dataAreaEnd, dataAreaStart))\n\n            // Calculate length of <order.makerAssetProxyMetadata>\n            arrayLenBytes := mload(sourceOffset)\n            sourceOffset := add(sourceOffset, 0x20)\n            arrayLenWords := div(add(arrayLenBytes, 0x1F), 0x20)\n\n            // Write length of <order.makerAssetProxyMetadata>\n            mstore(dataAreaEnd, arrayLenBytes)\n            dataAreaEnd := add(dataAreaEnd, 0x20)\n\n            // Write contents of <order.makerAssetProxyMetadata>\n            for {let i := 0} lt(i, arrayLenWords) {i := add(i, 1)} {\n                mstore(dataAreaEnd, mload(sourceOffset))\n                dataAreaEnd := add(dataAreaEnd, 0x20)\n                sourceOffset := add(sourceOffset, 0x20)\n            }\n\n            // Write offset to <order.takerAssetProxyMetadata>\n            mstore(add(dataAreaStart, mul(11, 0x20)), sub(dataAreaEnd, dataAreaStart))\n\n            // Calculate length of <order.takerAssetProxyMetadata>\n            arrayLenBytes := mload(sourceOffset)\n            sourceOffset := add(sourceOffset, 0x20)\n            arrayLenWords := div(add(arrayLenBytes, 0x1F), 0x20)\n\n            // Write length of <order.takerAssetProxyMetadata>\n            mstore(dataAreaEnd, arrayLenBytes)\n            dataAreaEnd := add(dataAreaEnd, 0x20)\n\n            // Write contents of  <order.takerAssetProxyMetadata>\n            for {let i := 0} lt(i, arrayLenWords) {i := add(i, 1)} {\n                mstore(dataAreaEnd, mload(sourceOffset))\n                dataAreaEnd := add(dataAreaEnd, 0x20)\n                sourceOffset := add(sourceOffset, 0x20)\n            }\n\n            /////// Write takerAssetFillAmount ///////\n            mstore(paramsAreaOffset, takerAssetFillAmount)\n            paramsAreaOffset := add(paramsAreaOffset, 0x20)\n\n            /////// Write signature ///////\n            // Write offset to paramsArea\n            mstore(paramsAreaOffset, sub(dataAreaEnd, paramsAreaStart))\n\n            // Calculate length of signature\n            sourceOffset := signature\n            arrayLenBytes := mload(sourceOffset)\n            sourceOffset := add(sourceOffset, 0x20)\n            arrayLenWords := div(add(arrayLenBytes, 0x1F), 0x20)\n\n            // Write length of signature\n            mstore(dataAreaEnd, arrayLenBytes)\n            dataAreaEnd := add(dataAreaEnd, 0x20)\n\n            // Write contents of signature\n            for {let i := 0} lt(i, arrayLenWords) {i := add(i, 1)} {\n                mstore(dataAreaEnd, mload(sourceOffset))\n                dataAreaEnd := add(dataAreaEnd, 0x20)\n                sourceOffset := add(sourceOffset, 0x20)\n            }\n\n            // Execute delegatecall\n            let success := delegatecall(\n                gas,                                // forward all gas, TODO: look into gas consumption of assert/throw\n                address,                            // call address of this contract\n                headerAreaStart,                    // pointer to start of input\n                sub(dataAreaEnd, headerAreaStart),  // length of input\n                headerAreaStart,                    // write output over input\n                128                                 // output size is 128 bytes\n            )\n            switch success\n            case 0 {\n                mstore(fillResults, 0)\n                mstore(add(fillResults, 32), 0)\n                mstore(add(fillResults, 64), 0)\n                mstore(add(fillResults, 96), 0)\n            }\n            case 1 {\n                mstore(fillResults, mload(headerAreaStart))\n                mstore(add(fillResults, 32), mload(add(headerAreaStart, 32)))\n                mstore(add(fillResults, 64), mload(add(headerAreaStart, 64)))\n                mstore(add(fillResults, 96), mload(add(headerAreaStart, 96)))\n            }\n        }\n        return fillResults;\n    }\n\n    /// @dev Synchronously executes multiple calls of fillOrder.\n    /// @param orders Array of order specifications.\n    /// @param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n    /// @param signatures Proofs that orders have been created by makers.\n    function batchFillOrders(\n        Order[] memory orders,\n        uint256[] memory takerAssetFillAmounts,\n        bytes[] memory signatures)\n        public\n    {\n        for (uint256 i = 0; i < orders.length; i++) {\n            fillOrder(\n                orders[i],\n                takerAssetFillAmounts[i],\n                signatures[i]\n            );\n        }\n    }\n\n    /// @dev Synchronously executes multiple calls of fillOrKill.\n    /// @param orders Array of order specifications.\n    /// @param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n    /// @param signatures Proofs that orders have been created by makers.\n    function batchFillOrKillOrders(\n        Order[] memory orders,\n        uint256[] memory takerAssetFillAmounts,\n        bytes[] memory signatures)\n        public\n    {\n        for (uint256 i = 0; i < orders.length; i++) {\n            fillOrKillOrder(\n                orders[i],\n                takerAssetFillAmounts[i],\n                signatures[i]\n            );\n        }\n    }\n\n    /// @dev Fills an order with specified parameters and ECDSA signature.\n    ///      Returns false if the transaction would otherwise revert.\n    /// @param orders Array of order specifications.\n    /// @param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n    /// @param signatures Proofs that orders have been created by makers.\n    function batchFillOrdersNoThrow(\n        Order[] memory orders,\n        uint256[] memory takerAssetFillAmounts,\n        bytes[] memory signatures)\n        public\n    {\n        for (uint256 i = 0; i < orders.length; i++) {\n            fillOrderNoThrow(\n                orders[i],\n                takerAssetFillAmounts[i],\n                signatures[i]\n            );\n        }\n    }\n\n    /// @dev Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.\n    /// @param orders Array of order specifications.\n    /// @param takerAssetFillAmount Desired amount of takerAsset to sell.\n    /// @param signatures Proofs that orders have been created by makers.\n    /// @return Amounts filled and fees paid by makers and taker.\n    function marketSellOrders(\n        Order[] memory orders,\n        uint256 takerAssetFillAmount,\n        bytes[] memory signatures)\n        public\n        returns (FillResults memory totalFillResults)\n    {\n        for (uint256 i = 0; i < orders.length; i++) {\n\n            // Token being sold by taker must be the same for each order\n            // TODO: optimize by only using takerAssetData for first order.\n            require(\n                areBytesEqual(orders[i].takerAssetData, orders[0].takerAssetData),\n                ASSET_DATA_MISMATCH\n            );\n\n            // Calculate the remaining amount of takerAsset to sell\n            uint256 remainingTakerAssetFillAmount = safeSub(takerAssetFillAmount, totalFillResults.takerAssetFilledAmount);\n\n            // Attempt to sell the remaining amount of takerAsset\n            FillResults memory singleFillResults = fillOrder(\n                orders[i],\n                remainingTakerAssetFillAmount,\n                signatures[i]\n            );\n\n            // Update amounts filled and fees paid by maker and taker\n            addFillResults(totalFillResults, singleFillResults);\n\n            // Stop execution if the entire amount of takerAsset has been sold\n            if (totalFillResults.takerAssetFilledAmount == takerAssetFillAmount) {\n                break;\n            }\n        }\n        return totalFillResults;\n    }\n\n    /// @dev Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.\n    ///      Returns false if the transaction would otherwise revert.\n    /// @param orders Array of order specifications.\n    /// @param takerAssetFillAmount Desired amount of takerAsset to sell.\n    /// @param signatures Proofs that orders have been signed by makers.\n    /// @return Amounts filled and fees paid by makers and taker.\n    function marketSellOrdersNoThrow(\n        Order[] memory orders,\n        uint256 takerAssetFillAmount,\n        bytes[] memory signatures)\n        public\n        returns (FillResults memory totalFillResults)\n    {\n        for (uint256 i = 0; i < orders.length; i++) {\n\n            // Token being sold by taker must be the same for each order\n            // TODO: optimize by only using takerAssetData for first order.\n            require(\n                areBytesEqual(orders[i].takerAssetData, orders[0].takerAssetData),\n                ASSET_DATA_MISMATCH\n            );\n\n            // Calculate the remaining amount of takerAsset to sell\n            uint256 remainingTakerAssetFillAmount = safeSub(takerAssetFillAmount, totalFillResults.takerAssetFilledAmount);\n\n            // Attempt to sell the remaining amount of takerAsset\n            FillResults memory singleFillResults = fillOrderNoThrow(\n                orders[i],\n                remainingTakerAssetFillAmount,\n                signatures[i]\n            );\n\n            // Update amounts filled and fees paid by maker and taker\n            addFillResults(totalFillResults, singleFillResults);\n\n            // Stop execution if the entire amount of takerAsset has been sold\n            if (totalFillResults.takerAssetFilledAmount == takerAssetFillAmount) {\n                break;\n            }\n        }\n        return totalFillResults;\n    }\n\n    /// @dev Synchronously executes multiple calls of fillOrder until total amount of makerAsset is bought by taker.\n    /// @param orders Array of order specifications.\n    /// @param makerAssetFillAmount Desired amount of makerAsset to buy.\n    /// @param signatures Proofs that orders have been signed by makers.\n    /// @return Amounts filled and fees paid by makers and taker.\n    function marketBuyOrders(\n        Order[] memory orders,\n        uint256 makerAssetFillAmount,\n        bytes[] memory signatures)\n        public\n        returns (FillResults memory totalFillResults)\n    {\n        for (uint256 i = 0; i < orders.length; i++) {\n\n            // Token being bought by taker must be the same for each order\n            // TODO: optimize by only using makerAssetData for first order.\n            require(\n                areBytesEqual(orders[i].makerAssetData, orders[0].makerAssetData),\n                ASSET_DATA_MISMATCH\n            );\n\n            // Calculate the remaining amount of makerAsset to buy\n            uint256 remainingMakerAssetFillAmount = safeSub(makerAssetFillAmount, totalFillResults.makerAssetFilledAmount);\n\n            // Convert the remaining amount of makerAsset to buy into remaining amount\n            // of takerAsset to sell, assuming entire amount can be sold in the current order\n            uint256 remainingTakerAssetFillAmount = getPartialAmount(\n                orders[i].takerAssetAmount,\n                orders[i].makerAssetAmount,\n                remainingMakerAssetFillAmount\n            );\n\n            // Attempt to sell the remaining amount of takerAsset\n            FillResults memory singleFillResults = fillOrder(\n                orders[i],\n                remainingTakerAssetFillAmount,\n                signatures[i]\n            );\n\n            // Update amounts filled and fees paid by maker and taker\n            addFillResults(totalFillResults, singleFillResults);\n\n            // Stop execution if the entire amount of makerAsset has been bought\n            if (totalFillResults.makerAssetFilledAmount == makerAssetFillAmount) {\n                break;\n            }\n        }\n        return totalFillResults;\n    }\n\n    /// @dev Synchronously executes multiple fill orders in a single transaction until total amount is bought by taker.\n    ///      Returns false if the transaction would otherwise revert.\n    /// @param orders Array of order specifications.\n    /// @param makerAssetFillAmount Desired amount of makerAsset to buy.\n    /// @param signatures Proofs that orders have been signed by makers.\n    /// @return Amounts filled and fees paid by makers and taker.\n    function marketBuyOrdersNoThrow(\n        Order[] memory orders,\n        uint256 makerAssetFillAmount,\n        bytes[] memory signatures)\n        public\n        returns (FillResults memory totalFillResults)\n    {\n        for (uint256 i = 0; i < orders.length; i++) {\n\n            // Token being bought by taker must be the same for each order\n            // TODO: optimize by only using makerAssetData for first order.\n            require(\n                areBytesEqual(orders[i].makerAssetData, orders[0].makerAssetData),\n                ASSET_DATA_MISMATCH\n            );\n\n            // Calculate the remaining amount of makerAsset to buy\n            uint256 remainingMakerAssetFillAmount = safeSub(makerAssetFillAmount, totalFillResults.makerAssetFilledAmount);\n\n            // Convert the remaining amount of makerAsset to buy into remaining amount\n            // of takerAsset to sell, assuming entire amount can be sold in the current order\n            uint256 remainingTakerAssetFillAmount = getPartialAmount(\n                orders[i].takerAssetAmount,\n                orders[i].makerAssetAmount,\n                remainingMakerAssetFillAmount\n            );\n\n            // Attempt to sell the remaining amount of takerAsset\n            FillResults memory singleFillResults = fillOrderNoThrow(\n                orders[i],\n                remainingTakerAssetFillAmount,\n                signatures[i]\n            );\n\n            // Update amounts filled and fees paid by maker and taker\n            addFillResults(totalFillResults, singleFillResults);\n\n            // Stop execution if the entire amount of makerAsset has been bought\n            if (totalFillResults.makerAssetFilledAmount == makerAssetFillAmount) {\n                break;\n            }\n        }\n        return totalFillResults;\n    }\n\n    /// @dev Synchronously cancels multiple orders in a single transaction.\n    /// @param orders Array of order specifications.\n    function batchCancelOrders(Order[] memory orders)\n        public\n    {\n        for (uint256 i = 0; i < orders.length; i++) {\n            cancelOrder(orders[i]);\n        }\n    }\n}\n",
        "current/protocol/Exchange/interfaces/IAssetProxyDispatcher.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\ncontract IAssetProxyDispatcher {\n\n    /// @dev Registers an asset proxy to an asset proxy id.\n    ///      An id can only be assigned to a single proxy at a given time.\n    /// @param assetProxyId Id to register`newAssetProxy` under.\n    /// @param newAssetProxy Address of new asset proxy to register, or 0x0 to unset assetProxyId.\n    /// @param oldAssetProxy Existing asset proxy to overwrite, or 0x0 if assetProxyId is currently unused.\n    function registerAssetProxy(\n        uint8 assetProxyId,\n        address newAssetProxy,\n        address oldAssetProxy)\n        external;\n\n    /// @dev Gets an asset proxy.\n    /// @param assetProxyId Id of the asset proxy.\n    /// @return The asset proxy registered to assetProxyId. Returns 0x0 if no proxy is registered.\n    function getAssetProxy(uint8 assetProxyId)\n        external\n        view\n        returns (address);\n}\n",
        "current/protocol/Exchange/interfaces/IExchangeCore.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\nimport \"../libs/LibOrder.sol\";\nimport \"../libs/LibFillResults.sol\";\n\ncontract IExchangeCore {\n\n    /// @dev Cancels all orders reated by sender with a salt less than or equal to the specified salt value.\n    /// @param salt Orders created with a salt less or equal to this value will be cancelled.\n    function cancelOrdersUpTo(uint256 salt)\n        external;\n\n    /// @dev Fills the input order.\n    /// @param order Order struct containing order specifications.\n    /// @param takerAssetFillAmount Desired amount of takerAsset to sell.\n    /// @param signature Proof that order has been created by maker.\n    /// @return Amounts filled and fees paid by maker and taker.\n    function fillOrder(\n        LibOrder.Order memory order,\n        uint256 takerAssetFillAmount,\n        bytes memory signature)\n        public\n        returns (LibFillResults.FillResults memory fillResults);\n\n    /// @dev After calling, the order can not be filled anymore.\n    /// @param order Order struct containing order specifications.\n    /// @return True if the order state changed to cancelled.\n    ///         False if the transaction was already cancelled or expired.\n    function cancelOrder(LibOrder.Order memory order)\n        public\n        returns (bool);\n}\n",
        "current/protocol/Exchange/interfaces/ISignatureValidator.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\ncontract ISignatureValidator {\n\n    /// @dev Approves a hash on-chain using any valid signature type.\n    ///      After presigning a hash, the preSign signature type will become valid for that hash and signer.\n    /// @param signer Address that should have signed the given hash.\n    /// @param signature Proof that the hash has been signed by signer.\n    function preSign(\n        bytes32 hash,\n        address signer,\n        bytes signature)\n        external;\n}\n",
        "current/protocol/Exchange/interfaces/ISigner.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\ncontract ISigner {\n\n    /// @dev Verifies that a signature is valid.\n    /// @param hash Message hash that is signed.\n    /// @param signature Proof of signing.\n    /// @return Validity of order signature.\n    function isValidSignature(\n        bytes32 hash,\n        bytes signature)\n        external\n        view\n        returns (bool isValid);\n}\n",
        "current/protocol/Exchange/interfaces/ITransactions.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\npragma solidity ^0.4.23;\n\ncontract ITransactions {\n\n    /// @dev Executes an exchange method call in the context of signer.\n    /// @param salt Arbitrary number to ensure uniqueness of transaction hash.\n    /// @param signer Address of transaction signer.\n    /// @param data AbiV2 encoded calldata.\n    /// @param signature Proof of signer transaction by signer.\n    function executeTransaction(\n        uint256 salt,\n        address signer,\n        bytes data,\n        bytes signature)\n        external;\n}\n",
        "current/protocol/Exchange/libs/LibExchangeErrors.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\ncontract LibExchangeErrors {\n\n    // Error Codes\n    enum Errors {\n        ORDER_EXPIRED,                     // Order has already expired\n        ORDER_FULLY_FILLED,                // Order has already been fully filled\n        ORDER_CANCELLED,                   // Order has already been cancelled\n        ROUNDING_ERROR_TOO_LARGE,          // Rounding error too large\n        INSUFFICIENT_BALANCE_OR_ALLOWANCE  // Insufficient balance or allowance for token transfer\n    }\n\n    event ExchangeError(uint8 indexed errorId, bytes32 indexed orderHash);\n\n    // Core revert reasons\n    string constant GT_ZERO_AMOUNT_REQUIRED = \"Amount must be greater than 0.\";\n    string constant SIGNATURE_VALIDATION_FAILED = \"Signature validation failed.\";\n    string constant INVALID_SENDER = \"Invalid `msg.sender`.\";\n    string constant INVALID_CONTEXT = \"Function called in an invalid context.\";\n    string constant INVALID_NEW_MAKER_EPOCH = \"Specified salt must be greater than or equal to existing makerEpoch.\";\n\n    // Transaction revert reasons\n    string constant DUPLICATE_TRANSACTION_HASH = \"Transaction has already been executed.\";\n    string constant TRANSACTION_EXECUTION_FAILED = \"Transaction execution failed.\";\n\n    // Wrapper revert reasons\n    string constant COMPLETE_FILL_FAILED = \"Desired fill amount could not be completely filled.\";\n    string constant ASSET_DATA_MISMATCH = \"Asset data must be the same for each order.\";\n\n    // Asset proxy dispatcher revert reasons\n    string constant GT_ZERO_LENGTH_REQUIRED = \"Length must be greater than 0.\";\n    string constant OLD_ASSET_PROXY_MISMATCH = \"Old asset proxy does not match asset proxy at given id.\";\n    string constant NEW_ASSET_PROXY_MISMATCH = \"New asset proxy id does not match given id.\";\n\n    // Signature validator revert reasons\n    string constant INVALID_SIGNATURE_LENGTH = \"Invalid signature length.\";\n    string constant ILLEGAL_SIGNATURE_TYPE = \"Illegal signature type.\";\n    string constant UNSUPPORTED_SIGNATURE_TYPE = \"Unsupported signature type.\";\n}\n",
        "current/protocol/Exchange/libs/LibFillResults.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\nimport \"../../../utils/SafeMath/SafeMath.sol\";\n\ncontract LibFillResults is\n    SafeMath\n{\n\n    struct FillResults {\n        uint256 makerAssetFilledAmount;\n        uint256 takerAssetFilledAmount;\n        uint256 makerFeePaid;\n        uint256 takerFeePaid;\n    }\n\n    /// @dev Adds properties of both FillResults instances.\n    ///      Modifies the first FillResults instance specified.\n    /// @param totalFillResults Fill results instance that will be added onto.\n    /// @param singleFillResults Fill results instance that will be added to totalFillResults.\n    function addFillResults(FillResults memory totalFillResults, FillResults memory singleFillResults)\n        internal\n        pure\n    {\n        totalFillResults.makerAssetFilledAmount = safeAdd(totalFillResults.makerAssetFilledAmount, singleFillResults.makerAssetFilledAmount);\n        totalFillResults.takerAssetFilledAmount = safeAdd(totalFillResults.takerAssetFilledAmount, singleFillResults.takerAssetFilledAmount);\n        totalFillResults.makerFeePaid = safeAdd(totalFillResults.makerFeePaid, singleFillResults.makerFeePaid);\n        totalFillResults.takerFeePaid = safeAdd(totalFillResults.takerFeePaid, singleFillResults.takerFeePaid);\n    }\n}",
        "current/protocol/Exchange/libs/LibMath.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\nimport \"../../../utils/SafeMath/SafeMath.sol\";\n\ncontract LibMath is\n    SafeMath\n{\n\n    /// @dev Calculates partial value given a numerator and denominator.\n    /// @param numerator Numerator.\n    /// @param denominator Denominator.\n    /// @param target Value to calculate partial of.\n    /// @return Partial value of target.\n    function getPartialAmount(\n        uint256 numerator,\n        uint256 denominator,\n        uint256 target)\n        internal\n        pure\n        returns (uint256 partialAmount)\n    {\n        partialAmount = safeDiv(\n            safeMul(numerator, target),\n            denominator\n        );\n        return partialAmount;\n    }\n\n    /// @dev Checks if rounding error > 0.1%.\n    /// @param numerator Numerator.\n    /// @param denominator Denominator.\n    /// @param target Value to multiply with numerator/denominator.\n    /// @return Rounding error is present.\n    function isRoundingError(\n        uint256 numerator,\n        uint256 denominator,\n        uint256 target)\n        internal\n        pure\n        returns (bool isError)\n    {\n        uint256 remainder = mulmod(target, numerator, denominator);\n        if (remainder == 0) {\n            return false; // No rounding error.\n        }\n\n        uint256 errPercentageTimes1000000 = safeDiv(\n            safeMul(remainder, 1000000),\n            safeMul(numerator, target)\n        );\n        isError = errPercentageTimes1000000 > 1000;\n        return isError;\n    }\n}\n",
        "current/protocol/Exchange/libs/LibOrder.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\ncontract LibOrder {\n\n    bytes32 constant ORDER_SCHEMA_HASH = keccak256(\n        \"address exchangeAddress\",\n        \"address makerAddress\",\n        \"address takerAddress\",\n        \"address feeRecipientAddress\",\n        \"address senderAddress\",\n        \"uint256 makerAssetAmount\",\n        \"uint256 takerAssetAmount\",\n        \"uint256 makerFee\",\n        \"uint256 takerFee\",\n        \"uint256 expirationTimeSeconds\",\n        \"uint256 salt\",\n        \"bytes makerAssetData\",\n        \"bytes takerAssetData\"\n    );\n\n    struct Order {\n        address makerAddress;\n        address takerAddress;\n        address feeRecipientAddress;\n        address senderAddress;\n        uint256 makerAssetAmount;\n        uint256 takerAssetAmount;\n        uint256 makerFee;\n        uint256 takerFee;\n        uint256 expirationTimeSeconds;\n        uint256 salt;\n        bytes makerAssetData;\n        bytes takerAssetData;\n    }\n\n    /// @dev Calculates Keccak-256 hash of the order.\n    /// @param order The order structure.\n    /// @return Keccak-256 EIP712 hash of the order.\n    function getOrderHash(Order memory order)\n        internal\n        view\n        returns (bytes32 orderHash)\n    {\n        // TODO: EIP712 is not finalized yet\n        // Source: https://github.com/ethereum/EIPs/pull/712\n        orderHash = keccak256(\n            ORDER_SCHEMA_HASH,\n            keccak256(\n                address(this),\n                order.makerAddress,\n                order.takerAddress,\n                order.feeRecipientAddress,\n                order.senderAddress,\n                order.makerAssetAmount,\n                order.takerAssetAmount,\n                order.makerFee,\n                order.takerFee,\n                order.expirationTimeSeconds,\n                order.salt,\n                order.makerAssetData,\n                order.takerAssetData\n            )\n        );\n        return orderHash;\n    }\n}\n",
        "current/protocol/Exchange/mixins/MAssetProxyDispatcher.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\nimport \"../interfaces/IAssetProxyDispatcher.sol\";\n\ncontract MAssetProxyDispatcher is\n    IAssetProxyDispatcher\n{\n\n    // Logs registration of new asset proxy\n    event AssetProxySet(\n        uint8 id,\n        address newAssetProxy,\n        address oldAssetProxy\n    );\n\n    /// @dev Forwards arguments to assetProxy and calls `transferFrom`. Either succeeds or throws.\n    /// @param assetMetadata Byte array encoded for the respective asset proxy.\n    /// @param from Address to transfer token from.\n    /// @param to Address to transfer token to.\n    /// @param amount Amount of token to transfer.\n    function dispatchTransferFrom(\n        bytes memory assetMetadata,\n        address from,\n        address to,\n        uint256 amount)\n        internal;\n}\n",
        "current/protocol/Exchange/mixins/MExchangeCore.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\nimport \"../libs/LibOrder.sol\";\nimport \"../libs/LibFillResults.sol\";\nimport \"../interfaces/IExchangeCore.sol\";\n\ncontract MExchangeCore is\n    IExchangeCore\n{\n\n    // Fill event is emitted whenever an order is filled.\n    event Fill(\n        address indexed makerAddress,\n        address takerAddress,\n        address indexed feeRecipientAddress,\n        uint256 makerAssetFilledAmount,\n        uint256 takerAssetFilledAmount,\n        uint256 makerFeePaid,\n        uint256 takerFeePaid,\n        bytes32 indexed orderHash,\n        bytes makerAssetData,\n        bytes takerAssetData\n    );\n\n    // Cancel event is emitted whenever an individual order is cancelled.\n    event Cancel(\n        address indexed makerAddress,\n        address indexed feeRecipientAddress,\n        bytes32 indexed orderHash,\n        bytes makerAssetData,\n        bytes takerAssetData\n    );\n\n    // CancelUpTo event is emitted whenever `cancelOrdersUpTo` is executed succesfully.\n    event CancelUpTo(\n        address indexed makerAddress,\n        uint256 makerEpoch\n    );\n\n    /// @dev Logs a Fill event with the given arguments.\n    ///      The sole purpose of this function is to get around the stack variable limit.\n    function emitFillEvent(\n        LibOrder.Order memory order,\n        address takerAddress,\n        bytes32 orderHash,\n        LibFillResults.FillResults memory fillResults)\n        internal;\n}\n",
        "current/protocol/Exchange/mixins/MSettlement.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\nimport \"../libs/LibOrder.sol\";\n\ncontract MSettlement {\n\n    /// @dev Settles an order by transfering assets between counterparties.\n    /// @param order Order struct containing order specifications.\n    /// @param takerAddress Address selling takerAsset and buying makerAsset.\n    /// @param takerAssetFilledAmount The amount of takerAsset that will be transfered to the order's maker.\n    /// @return Amount filled by maker and fees paid by maker/taker.\n    function settleOrder(\n        LibOrder.Order memory order,\n        address takerAddress,\n        uint256 takerAssetFilledAmount)\n        internal\n        returns (\n            uint256 makerAssetFilledAmount,\n            uint256 makerFeePaid,\n            uint256 takerFeePaid\n        );\n}\n\n",
        "current/protocol/Exchange/mixins/MSignatureValidator.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\nimport \"../interfaces/ISignatureValidator.sol\";\n\ncontract MSignatureValidator is\n    ISignatureValidator\n{\n    // Allowed signature types.\n    enum SignatureType {\n        Illegal,  // Default value\n        Invalid,\n        Caller,\n        Ecrecover,\n        EIP712,\n        Trezor,\n        Contract,\n        PreSigned\n    }\n\n    /// @dev Verifies that a signature is valid.\n    /// @param hash Message hash that is signed.\n    /// @param signer Address of signer.\n    /// @param signature Proof of signing.\n    /// @return Validity of order signature.\n    function isValidSignature(\n        bytes32 hash,\n        address signer,\n        bytes memory signature)\n        internal\n        view\n        returns (bool isValid);\n}\n",
        "current/protocol/Exchange/mixins/MTransactions.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\npragma solidity ^0.4.23;\n\nimport \"../interfaces/ITransactions.sol\";\n\ncontract MTransactions is\n    ITransactions\n{\n\n    /// @dev The current function will be called in the context of this address (either 0x transaction signer or `msg.sender`).\n    ///      If calling a fill function, this address will represent the taker.\n    ///      If calling a cancel function, this address will represent the maker.\n    /// @return Signer of 0x transaction if entry point is `executeTransaction`.\n    ///         `msg.sender` if entry point is any other function.\n    function getCurrentContextAddress()\n        internal\n        view\n        returns (address);\n}\n",
        "current/utils/LibBytes/LibBytes.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\ncontract LibBytes {\n\n    // Revert reasons\n    string constant GTE_20_LENGTH_REQUIRED = \"Length must be greater than or equal to 20.\";\n    string constant GTE_32_LENGTH_REQUIRED = \"Length must be greater than or equal to 32.\";\n\n    /// @dev Tests equality of two byte arrays.\n    /// @param lhs First byte array to compare.\n    /// @param rhs Second byte array to compare.\n    /// @return True if arrays are the same. False otherwise.\n    function areBytesEqual(bytes memory lhs, bytes memory rhs)\n        internal\n        pure\n        returns (bool equal)\n    {\n        assembly {\n            // Get the number of words occupied by <lhs>\n            let lenFullWords := div(add(mload(lhs), 0x1F), 0x20)\n\n            // Add 1 to the number of words, to account for the length field\n            lenFullWords := add(lenFullWords, 0x1)\n\n            // Test equality word-by-word.\n            // Terminates early if there is a mismatch.\n            for {let i := 0} lt(i, lenFullWords) {i := add(i, 1)} {\n                let lhsWord := mload(add(lhs, mul(i, 0x20)))\n                let rhsWord := mload(add(rhs, mul(i, 0x20)))\n                equal := eq(lhsWord, rhsWord)\n                if eq(equal, 0) {\n                    // Break\n                    i := lenFullWords\n                }\n            }\n       }\n\n       return equal;\n    }\n\n    /// @dev Reads an address from a position in a byte array.\n    /// @param b Byte array containing an address.\n    /// @param index Index in byte array of address.\n    /// @return address from byte array.\n    function readAddress(\n        bytes memory b,\n        uint256 index)\n        internal\n        pure\n        returns (address result)\n    {\n        require(\n            b.length >= index + 20,  // 20 is length of address\n            GTE_20_LENGTH_REQUIRED\n        ); \n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Read address from array memory\n        assembly {\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 20-byte mask to obtain address\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n        return result;\n    }\n\n    /// @dev Writes an address into a specific position in a byte array.\n    /// @param b Byte array to insert address into.\n    /// @param index Index in byte array of address.\n    /// @param input Address to put into byte array.\n    function writeAddress(\n        bytes memory b,\n        uint256 index,\n        address input)\n        internal\n        pure\n    {\n        require(\n            b.length >= index + 20,  // 20 is length of address\n            GTE_20_LENGTH_REQUIRED\n        ); \n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Store address into array memory\n        assembly {\n            // The address occupies 20 bytes and mstore stores 32 bytes.\n            // First fetch the 32-byte word where we'll be storing the address, then\n            // apply a mask so we have only the bytes in the word that the address will not occupy.\n            // Then combine these bytes with the address and store the 32 bytes back to memory with mstore.\n\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 12-byte mask to obtain extra bytes occupying word of memory where we'll store the address\n            let neighbors := and(mload(add(b, index)), 0xffffffffffffffffffffffff0000000000000000000000000000000000000000)\n\n            // Store the neighbors and address into memory\n            mstore(add(b, index), xor(input, neighbors))\n        }\n    }\n\n    /// @dev Reads a bytes32 value from a position in a byte array.\n    /// @param b Byte array containing a bytes32 value.\n    /// @param index Index in byte array of bytes32 value.\n    /// @return bytes32 value from byte array.\n    function readBytes32(\n        bytes memory b,\n        uint256 index)\n        internal\n        pure\n        returns (bytes32 result)\n    {\n        require(\n            b.length >= index + 32,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            result := mload(add(b, index))\n        }\n        return result;\n    }\n\n    /// @dev Writes a bytes32 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input bytes32 to put into byte array.\n    function writeBytes32(\n        bytes memory b,\n        uint256 index,\n        bytes32 input)\n        internal\n        pure\n    {\n        require(\n            b.length >= index + 32,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            mstore(add(b, index), input)\n        }\n    }\n\n    /// @dev Reads a uint256 value from a position in a byte array.\n    /// @param b Byte array containing a uint256 value.\n    /// @param index Index in byte array of uint256 value.\n    /// @return uint256 value from byte array.\n    function readUint256(\n        bytes memory b,\n        uint256 index)\n        internal\n        pure\n        returns (uint256 result)\n    {\n        return uint256(readBytes32(b, index));\n    }\n\n    /// @dev Writes a uint256 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input uint256 to put into byte array.\n    function writeUint256(\n        bytes memory b,\n        uint256 index,\n        uint256 input)\n        internal\n        pure\n    {\n        writeBytes32(b, index, bytes32(input));\n    }\n}\n",
        "current/utils/Ownable/IOwnable.sol":
            "pragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\n/*\n * Ownable\n *\n * Base contract with an owner.\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\n */\n\ncontract IOwnable {\n    function transferOwnership(address newOwner)\n        public;\n}\n",
        "current/utils/Ownable/Ownable.sol":
            "pragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\n/*\n * Ownable\n *\n * Base contract with an owner.\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\n */\n\nimport \"./IOwnable.sol\";\n\ncontract Ownable is IOwnable {\n    address public owner;\n\n    constructor ()\n        public\n    {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(\n            msg.sender == owner,\n            \"Only contract owner is allowed to call this method.\"\n        );\n        _;\n    }\n\n    function transferOwnership(address newOwner)\n        public\n        onlyOwner\n    {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n}\n",
        "current/utils/SafeMath/SafeMath.sol":
            "pragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\ncontract SafeMath {\n    function safeMul(uint a, uint b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function safeDiv(uint a, uint b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint c = a / b;\n        return c;\n    }\n\n    function safeSub(uint a, uint b)\n        internal\n        pure\n        returns (uint256)\n    {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function safeAdd(uint a, uint b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint c = a + b;\n        assert(c >= a);\n        return c;\n    }\n\n    function max64(uint64 a, uint64 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a >= b ? a : b;\n    }\n\n    function min64(uint64 a, uint64 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a < b ? a : b;\n    }\n\n    function max256(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a >= b ? a : b;\n    }\n\n    function min256(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a < b ? a : b;\n    }\n}\n"
    },
    "sourceTreeHashHex": "0x40d6dacacb6504cd0289086e539f6ff8dc4e094db2ab86ea0d048b28817b6bdf",
    "compiler": {
        "name": "solc",
        "version": "0.4.23",
        "settings": {
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            }
        }
    },
    "networks": {}
}
