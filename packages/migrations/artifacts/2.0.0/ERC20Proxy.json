{
	"schemaVersion": "2.0.0",
	"contractName": "ERC20Proxy",
	"compilerOutput": {
		"abi": [
			{
				"constant": false,
				"inputs": [
					{
						"name": "target",
						"type": "address"
					}
				],
				"name": "addAuthorizedAddress",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"name": "authorities",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "assetMetadata",
						"type": "bytes[]"
					},
					{
						"name": "from",
						"type": "address[]"
					},
					{
						"name": "to",
						"type": "address[]"
					},
					{
						"name": "amounts",
						"type": "uint256[]"
					}
				],
				"name": "batchTransferFrom",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "target",
						"type": "address"
					}
				],
				"name": "removeAuthorizedAddress",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "target",
						"type": "address"
					},
					{
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "removeAuthorizedAddressAtIndex",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "assetMetadata",
						"type": "bytes"
					},
					{
						"name": "from",
						"type": "address"
					},
					{
						"name": "to",
						"type": "address"
					},
					{
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getProxyId",
				"outputs": [
					{
						"name": "",
						"type": "uint8"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"name": "authorized",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getAuthorizedAddresses",
				"outputs": [
					{
						"name": "",
						"type": "address[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "target",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "caller",
						"type": "address"
					}
				],
				"name": "AuthorizedAddressAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "target",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "caller",
						"type": "address"
					}
				],
				"name": "AuthorizedAddressRemoved",
				"type": "event"
			}
		],
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x1367 DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x42F1181E DUP2 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0x494503D4 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x563C875D EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x70712939 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x9AD26744 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xA85E59E4 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xAE25532E EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xD39DE6E9 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0xB5 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x218 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0xD7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x367 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0xF1C JUMP JUMPDEST PUSH2 0x38F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x487 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x647 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE2 JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF6 JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x120B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x11DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x95E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x24E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP1 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH32 0x546172676574206D757374206E6F7420616C726561647920626520617574686F SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xD1 PUSH1 0x2 EXP PUSH6 0x3934BD32B217 MUL SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP4 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x3147867C59D17E8FA9D522465651D44AAE0A9E38F902F3475B97E58072F0ED4C SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x375 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xB1 PUSH1 0x2 EXP PUSH10 0x34B99036B2BA3437B217 MUL SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x401 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x480 JUMPI PUSH2 0x478 DUP6 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x421 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x439 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x451 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x469 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x407 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x4B5 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP1 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH32 0x5461726765742061646472657373206D75737420626520617574686F72697A65 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xF1 PUSH1 0x2 EXP PUSH2 0x3217 MUL SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x61F JUMPI DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x582 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x5AF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x5D5 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x611 SWAP1 DUP3 PUSH2 0xC67 JUMP JUMPDEST POP PUSH2 0x61F JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x130E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH32 0x53706563696669656420617272617920696E646578206973206F7574206F6620 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC9 PUSH1 0x2 EXP PUSH7 0x3137BAB7323997 MUL SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 LT PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x6DF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH32 0x4164647265737320666F756E6420617420696E64657820646F6573206E6F7420 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x59 PUSH1 0x2 EXP PUSH21 0x36B0BA31B4103A30B933B2BA1030B2323932B9B997 MUL SWAP1 DUP4 ADD MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND EQ PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x7A3 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x7C9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x805 SWAP1 DUP3 PUSH2 0xC67 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x130E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xB1 PUSH1 0x2 EXP PUSH10 0x34B99036B2BA3437B217 MUL SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP PUSH2 0x480 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP DUP5 DUP5 DUP5 PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x954 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x936 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP1 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x9B6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x9C7 DUP8 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH32 0x50726F787920696420696E206D6574616461746120646F6573206E6F74206D61 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x71 PUSH1 0x2 EXP PUSH18 0x3A31B4103A3434B990383937BC3C9034B217 MUL SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP5 AND PUSH1 0x1 EQ PUSH2 0xA47 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x23B872DD MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xA7B SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xACD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x81 PUSH1 0x2 EXP PUSH16 0x2A3930B739B332B9103330B4B632B217 MUL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 DUP3 ISZERO ISZERO EQ PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x15 EQ PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D65746164617461206D75737420686176652061206C656E677468206F662032 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xF1 PUSH1 0x2 EXP PUSH2 0x1897 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xB9A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xBAA JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP2 POP PUSH2 0xBC8 DUP4 PUSH1 0x1 PUSH2 0xBCF JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x14 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790191817 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xC4A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP POP PUSH1 0x14 DUP2 DUP4 ADD DUP2 ADD MLOAD SWAP2 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0xC8B JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0xC8B SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0xC90 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8E4 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xCAA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC96 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP3 CALLDATALOAD PUSH2 0x1290 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xCD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCE5 PUSH2 0xCE0 DUP3 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x1219 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0xD0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD36 JUMPI DUP2 PUSH2 0xD20 DUP9 DUP3 PUSH2 0xCAE JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD0D JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xD51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD5F PUSH2 0xCE0 DUP3 PUSH2 0x123F JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 POP DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD36 JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0xD87 DUP9 DUP3 PUSH2 0xE61 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xDAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDBC PUSH2 0xCE0 DUP3 PUSH2 0x123F JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD36 JUMPI DUP2 PUSH2 0xDF7 DUP9 DUP3 PUSH2 0xEB0 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xDE4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP3 MLOAD PUSH2 0x129C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xE72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE80 PUSH2 0xCE0 DUP3 PUSH2 0x125F JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0xE9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA7 DUP4 DUP3 DUP5 PUSH2 0x12A7 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP3 CALLDATALOAD PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEDA DUP5 DUP5 PUSH2 0xCAE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF01 DUP6 DUP6 PUSH2 0xCAE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF12 DUP6 DUP3 DUP7 ADD PUSH2 0xEB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0xF48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF54 DUP8 DUP3 DUP9 ADD PUSH2 0xD40 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0xF70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7C DUP8 DUP3 DUP9 ADD PUSH2 0xCC1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA4 DUP8 DUP3 DUP9 ADD PUSH2 0xCC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0xFC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFCC DUP8 DUP3 DUP9 ADD PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEDA DUP5 DUP5 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x100E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x1024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1030 DUP9 DUP3 DUP10 ADD PUSH2 0xE19 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 PUSH2 0x1043 DUP9 DUP3 DUP10 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1054 DUP9 DUP3 DUP10 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1065 DUP9 DUP3 DUP10 ADD PUSH2 0xEB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1084 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEDA DUP5 DUP5 PUSH2 0xEB0 JUMP JUMPDEST PUSH2 0x1099 DUP2 PUSH2 0x1290 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AA DUP3 PUSH2 0x128C JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH2 0x10BC DUP4 PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x10EC JUMPI PUSH2 0x10D2 DUP7 DUP4 MLOAD PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x10DB DUP3 PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x20 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 POP PUSH1 0x1 ADD PUSH2 0x10BF JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1099 DUP2 PUSH2 0x129C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110A DUP3 PUSH2 0x128C JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x111E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x1127 DUP2 PUSH2 0x12E3 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x33 DUP2 MSTORE PUSH32 0x4F6E6C7920636F6E7472616374206F776E657220697320616C6C6F7765642074 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x69 PUSH1 0x2 EXP PUSH19 0x379031B0B636103A3434B99036B2BA3437B217 MUL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1099 DUP2 PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x1099 DUP2 PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC61 DUP3 DUP5 PUSH2 0x1090 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x11B1 DUP3 DUP7 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x11BE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0xEDA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xCBA DUP2 DUP5 PUSH2 0x109F JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC61 DUP3 DUP5 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xCBA DUP2 DUP5 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xC61 DUP2 PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC61 DUP3 DUP5 PUSH2 0x118C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x1255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x1275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12CE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12B6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x12DD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP MSTORE8 PUSH6 0x6E646572206E PUSH16 0x7420617574686F72697A656420746F20 PUSH4 0x616C6C20 PUSH21 0x681F32C1B084E2DE0713B8FB16BD46BB9DF710A3DB 0xea 0xe2 RETURN 0xca SWAP4 0xaf 0x46 0xe0 AND 0xdc 0xc6 0xb0 LOG2 PUSH6 0x627A7A723058 KECCAK256 DUP7 0xdf CODECOPY 0xc SLOAD LT 0x1f MSTORE8 LOG0 0xa9 0xd2 MSTORE8 0xdc DUP6 CALLDATACOPY 0xde 0xba 0xc2 0xf6 0xc9 0xd1 0xa8 REVERT 0xc6 0x21 0xb0 PUSH26 0x652744F8BA6C6578706572696D656E74616CF500370000000000 ",
				"sourceMap": "869:1507:0:-;;;363:5:12;:18;;-1:-1:-1;;;;;;363:18:12;371:10;363:18;;;869:1507:0;;;;;;"
			},
			"deployedBytecode": {
				"linkReferences": {},
				"object": "0x6080604052600436106100955763ffffffff60e060020a60003504166342f1181e811461009a578063494503d4146100bc578063563c875d146100f257806370712939146101125780638da5cb5b146101325780639ad2674414610147578063a85e59e414610167578063ae25532e14610187578063b9181611146101a9578063d39de6e9146101d6578063f2fde38b146101f8575b600080fd5b3480156100a657600080fd5b506100ba6100b5366004610ebc565b610218565b005b3480156100c857600080fd5b506100dc6100d7366004611072565b610367565b6040516100e99190611195565b60405180910390f35b3480156100fe57600080fd5b506100ba61010d366004610f1c565b61038f565b34801561011e57600080fd5b506100ba61012d366004610ebc565b610487565b34801561013e57600080fd5b506100dc610647565b34801561015357600080fd5b506100ba610162366004610ee2565b610656565b34801561017357600080fd5b506100ba610182366004610ff6565b61082e565b34801561019357600080fd5b5061019c6108e1565b6040516100e9919061120b565b3480156101b557600080fd5b506101c96101c4366004610ebc565b6108e7565b6040516100e991906111dc565b3480156101e257600080fd5b506101eb6108fc565b6040516100e991906111cb565b34801561020457600080fd5b506100ba610213366004610ebc565b61095e565b600054600160a060020a0316331461024e5760405160e560020a62461bcd028152600401610245906111fb565b60405180910390fd5b600160a060020a038116600090815260016020908152604091829020548251606081018452602681527f546172676574206d757374206e6f7420616c726561647920626520617574686f9281019290925260d160020a653934bd32b21702928201929092529060ff16156102d85760405160e560020a62461bcd02815260040161024591906111ea565b50600160a060020a0381166000818152600160208190526040808320805460ff19168317905560028054928301815583527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9091018054600160a060020a03191684179055513392917f3147867c59d17e8fa9d522465651d44aae0a9e38f902f3475b97e58072f0ed4c91a350565b600280548290811061037557fe5b600091825260209091200154600160a060020a0316905081565b336000908152600160209081526040808320548151606081018352602a81526000805160206112ee8339815191529381019390935260b160020a6934b99036b2ba3437b217029183019190915260ff1615156104015760405160e560020a62461bcd02815260040161024591906111ea565b50600090505b845181101561048057610478858281518110151561042157fe5b90602001906020020151858381518110151561043957fe5b90602001906020020151858481518110151561045157fe5b90602001906020020151858581518110151561046957fe5b906020019060200201516109b9565b600101610407565b5050505050565b60008054600160a060020a031633146104b55760405160e560020a62461bcd028152600401610245906111fb565b600160a060020a038216600090815260016020908152604091829020548251606081018452602281527f5461726765742061646472657373206d75737420626520617574686f72697a659281019290925260f160020a61321702928201929092529060ff16151561053c5760405160e560020a62461bcd02815260040161024591906111ea565b5050600160a060020a0381166000908152600160205260408120805460ff191690555b60025481101561061f5781600160a060020a031660028281548110151561058257fe5b600091825260209091200154600160a060020a03161415610617576002805460001981019081106105af57fe5b60009182526020909120015460028054600160a060020a0390921691839081106105d557fe5b60009182526020909120018054600160a060020a031916600160a060020a03929092169190911790556002805460001901906106119082610c67565b5061061f565b60010161055f565b6040513390600160a060020a0384169060008051602061130e83398151915290600090a35050565b600054600160a060020a031681565b60025460408051606081018252602781527f53706563696669656420617272617920696e646578206973206f7574206f6620602082015260c960020a663137bab732399702918101919091529082106106c55760405160e560020a62461bcd02815260040161024591906111ea565b5081600160a060020a03166002828154811015156106df57fe5b6000918252602091829020015460408051606081018252603581527f4164647265737320666f756e6420617420696e64657820646f6573206e6f742093810193909352605960020a7436b0ba31b4103a30b933b2ba1030b2323932b9b99702908301529091600160a060020a03909116146107705760405160e560020a62461bcd02815260040161024591906111ea565b50600160a060020a0382166000908152600160205260409020805460ff191690556002805460001981019081106107a357fe5b60009182526020909120015460028054600160a060020a0390921691839081106107c957fe5b60009182526020909120018054600160a060020a031916600160a060020a03929092169190911790556002805460001901906108059082610c67565b506040513390600160a060020a0384169060008051602061130e83398151915290600090a35050565b33600090815260016020908152604091829020548251606081018452602a81526000805160206112ee8339815191529281019290925260b160020a6934b99036b2ba3437b21702928201929092529060ff1615156108a25760405160e560020a62461bcd02815260040161024591906111ea565b5061048085858080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050508484846109b9565b60015b90565b60016020526000908152604090205460ff1681565b6060600280548060200260200160405190810160405280929190818152602001828054801561095457602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610936575b5050505050905090565b600054600160a060020a0316331461098b5760405160e560020a62461bcd028152600401610245906111fb565b600160a060020a038116156109b65760008054600160a060020a031916600160a060020a0383161790555b50565b60008060006109c787610b2a565b60408051606081018252603281527f50726f787920696420696e206d6574616461746120646f6573206e6f74206d616020820152607160020a713a31b4103a3434b990383937bc3c9034b2170291810191909152919450925060ff8416600114610a475760405160e560020a62461bcd02815260040161024591906111ea565b5060405160e060020a6323b872dd028152600160a060020a038316906323b872dd90610a7b908990899089906004016111a3565b602060405180830381600087803b158015610a9557600080fd5b505af1158015610aa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610acd9190810190610fd8565b6040805180820190915260108152608160020a6f2a3930b739b332b9103330b4b632b217026020820152909150600182151514610b205760405160e560020a62461bcd02815260040161024591906111ea565b5050505050505050565b6000808251601514606060405190810160405280602281526020017f4d65746164617461206d75737420686176652061206c656e677468206f662032815260200160f160020a61189702815250901515610b9a5760405160e560020a62461bcd02815260040161024591906111ea565b50826000815181101515610baa57fe5b016020015160f860020a908190048102049150610bc8836001610bcf565b9050915091565b60008160140183511015606060405190810160405280602b81526020017f4c656e677468206d7573742062652067726561746572207468616e206f722065815260200160a960020a6a38bab0b6103a379019181702815250901515610c4a5760405160e560020a62461bcd02815260040161024591906111ea565b50506014818301810151910190600160a060020a03165b92915050565b815481835581811115610c8b57600083815260209020610c8b918101908301610c90565b505050565b6108e491905b80821115610caa5760008155600101610c96565b5090565b6000610cba8235611290565b9392505050565b6000601f82018313610cd257600080fd5b8135610ce5610ce08261123f565b611219565b91508181835260208401935060208101905083856020840282011115610d0a57600080fd5b60005b83811015610d365781610d208882610cae565b8452506020928301929190910190600101610d0d565b5050505092915050565b6000601f82018313610d5157600080fd5b8135610d5f610ce08261123f565b81815260209384019390925082018360005b83811015610d365781358601610d878882610e61565b8452506020928301929190910190600101610d71565b6000601f82018313610dae57600080fd5b8135610dbc610ce08261123f565b91508181835260208401935060208101905083856020840282011115610de157600080fd5b60005b83811015610d365781610df78882610eb0565b8452506020928301929190910190600101610de4565b6000610cba825161129c565b600080601f83018413610e2b57600080fd5b5081356001604060020a03811115610e4257600080fd5b602083019150836001820283011115610e5a57600080fd5b9250929050565b6000601f82018313610e7257600080fd5b8135610e80610ce08261125f565b91508082526020830160208301858383011115610e9c57600080fd5b610ea78382846112a7565b50505092915050565b6000610cba82356108e4565b600060208284031215610ece57600080fd5b6000610eda8484610cae565b949350505050565b60008060408385031215610ef557600080fd5b6000610f018585610cae565b9250506020610f1285828601610eb0565b9150509250929050565b60008060008060808587031215610f3257600080fd5b84356001604060020a03811115610f4857600080fd5b610f5487828801610d40565b94505060208501356001604060020a03811115610f7057600080fd5b610f7c87828801610cc1565b93505060408501356001604060020a03811115610f9857600080fd5b610fa487828801610cc1565b92505060608501356001604060020a03811115610fc057600080fd5b610fcc87828801610d9d565b91505092959194509250565b600060208284031215610fea57600080fd5b6000610eda8484610e0d565b60008060008060006080868803121561100e57600080fd5b85356001604060020a0381111561102457600080fd5b61103088828901610e19565b9550955050602061104388828901610cae565b935050604061105488828901610cae565b925050606061106588828901610eb0565b9150509295509295909350565b60006020828403121561108457600080fd5b6000610eda8484610eb0565b61109981611290565b82525050565b60006110aa8261128c565b8084526020840193506110bc83611286565b60005b828110156110ec576110d2868351611090565b6110db82611286565b6020969096019591506001016110bf565b5093949350505050565b6110998161129c565b600061110a8261128c565b80845261111e8160208601602086016112b3565b611127816112e3565b9093016020019392505050565b603381527f4f6e6c7920636f6e7472616374206f776e657220697320616c6c6f77656420746020820152606960020a72379031b0b636103a3434b99036b2ba3437b21702604082015260600190565b611099816108e4565b611099816112a1565b60208101610c618284611090565b606081016111b18286611090565b6111be6020830185611090565b610eda6040830184611183565b60208082528101610cba818461109f565b60208101610c6182846110f6565b60208082528101610cba81846110ff565b60208082528101610c6181611134565b60208101610c61828461118c565b6040518181016001604060020a038111828210171561123757600080fd5b604052919050565b60006001604060020a0382111561125557600080fd5b5060209081020190565b60006001604060020a0382111561127557600080fd5b506020601f91909101601f19160190565b60200190565b5190565b600160a060020a031690565b151590565b60ff1690565b82818337506000910152565b60005b838110156112ce5781810151838201526020016112b6565b838111156112dd576000848401525b50505050565b601f01601f191690560053656e646572206e6f7420617574686f72697a656420746f2063616c6c2074681f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b0a265627a7a7230582086df390c54101f53a0a9d253dc8537debac2f6c9d1a8fdc621b079652744f8ba6c6578706572696d656e74616cf50037",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x42F1181E DUP2 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0x494503D4 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x563C875D EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x70712939 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x9AD26744 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xA85E59E4 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xAE25532E EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xD39DE6E9 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0xB5 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x218 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0xD7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x367 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0xF1C JUMP JUMPDEST PUSH2 0x38F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x487 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x647 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE2 JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF6 JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x120B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x11DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x95E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x24E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP1 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH32 0x546172676574206D757374206E6F7420616C726561647920626520617574686F SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xD1 PUSH1 0x2 EXP PUSH6 0x3934BD32B217 MUL SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP4 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x3147867C59D17E8FA9D522465651D44AAE0A9E38F902F3475B97E58072F0ED4C SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x375 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xB1 PUSH1 0x2 EXP PUSH10 0x34B99036B2BA3437B217 MUL SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x401 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x480 JUMPI PUSH2 0x478 DUP6 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x421 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x439 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x451 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x469 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x407 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x4B5 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP1 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH32 0x5461726765742061646472657373206D75737420626520617574686F72697A65 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xF1 PUSH1 0x2 EXP PUSH2 0x3217 MUL SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x61F JUMPI DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x582 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x5AF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x5D5 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x611 SWAP1 DUP3 PUSH2 0xC67 JUMP JUMPDEST POP PUSH2 0x61F JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x130E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH32 0x53706563696669656420617272617920696E646578206973206F7574206F6620 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC9 PUSH1 0x2 EXP PUSH7 0x3137BAB7323997 MUL SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 LT PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x6DF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH32 0x4164647265737320666F756E6420617420696E64657820646F6573206E6F7420 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x59 PUSH1 0x2 EXP PUSH21 0x36B0BA31B4103A30B933B2BA1030B2323932B9B997 MUL SWAP1 DUP4 ADD MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND EQ PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x7A3 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x7C9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x805 SWAP1 DUP3 PUSH2 0xC67 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x130E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xB1 PUSH1 0x2 EXP PUSH10 0x34B99036B2BA3437B217 MUL SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP PUSH2 0x480 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP DUP5 DUP5 DUP5 PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x954 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x936 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP1 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x9B6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x9C7 DUP8 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH32 0x50726F787920696420696E206D6574616461746120646F6573206E6F74206D61 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x71 PUSH1 0x2 EXP PUSH18 0x3A31B4103A3434B990383937BC3C9034B217 MUL SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP5 AND PUSH1 0x1 EQ PUSH2 0xA47 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x23B872DD MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xA7B SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xACD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x81 PUSH1 0x2 EXP PUSH16 0x2A3930B739B332B9103330B4B632B217 MUL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 DUP3 ISZERO ISZERO EQ PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x15 EQ PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D65746164617461206D75737420686176652061206C656E677468206F662032 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xF1 PUSH1 0x2 EXP PUSH2 0x1897 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xB9A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xBAA JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP2 POP PUSH2 0xBC8 DUP4 PUSH1 0x1 PUSH2 0xBCF JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x14 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790191817 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xC4A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST POP POP PUSH1 0x14 DUP2 DUP4 ADD DUP2 ADD MLOAD SWAP2 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0xC8B JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0xC8B SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0xC90 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8E4 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xCAA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC96 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP3 CALLDATALOAD PUSH2 0x1290 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xCD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCE5 PUSH2 0xCE0 DUP3 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x1219 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0xD0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD36 JUMPI DUP2 PUSH2 0xD20 DUP9 DUP3 PUSH2 0xCAE JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD0D JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xD51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD5F PUSH2 0xCE0 DUP3 PUSH2 0x123F JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 POP DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD36 JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0xD87 DUP9 DUP3 PUSH2 0xE61 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xDAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDBC PUSH2 0xCE0 DUP3 PUSH2 0x123F JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD36 JUMPI DUP2 PUSH2 0xDF7 DUP9 DUP3 PUSH2 0xEB0 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xDE4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP3 MLOAD PUSH2 0x129C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xE72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE80 PUSH2 0xCE0 DUP3 PUSH2 0x125F JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0xE9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA7 DUP4 DUP3 DUP5 PUSH2 0x12A7 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP3 CALLDATALOAD PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEDA DUP5 DUP5 PUSH2 0xCAE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF01 DUP6 DUP6 PUSH2 0xCAE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF12 DUP6 DUP3 DUP7 ADD PUSH2 0xEB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0xF48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF54 DUP8 DUP3 DUP9 ADD PUSH2 0xD40 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0xF70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7C DUP8 DUP3 DUP9 ADD PUSH2 0xCC1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA4 DUP8 DUP3 DUP9 ADD PUSH2 0xCC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0xFC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFCC DUP8 DUP3 DUP9 ADD PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEDA DUP5 DUP5 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x100E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x1024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1030 DUP9 DUP3 DUP10 ADD PUSH2 0xE19 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 PUSH2 0x1043 DUP9 DUP3 DUP10 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1054 DUP9 DUP3 DUP10 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1065 DUP9 DUP3 DUP10 ADD PUSH2 0xEB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1084 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEDA DUP5 DUP5 PUSH2 0xEB0 JUMP JUMPDEST PUSH2 0x1099 DUP2 PUSH2 0x1290 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AA DUP3 PUSH2 0x128C JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH2 0x10BC DUP4 PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x10EC JUMPI PUSH2 0x10D2 DUP7 DUP4 MLOAD PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x10DB DUP3 PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x20 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 POP PUSH1 0x1 ADD PUSH2 0x10BF JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1099 DUP2 PUSH2 0x129C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110A DUP3 PUSH2 0x128C JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x111E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x1127 DUP2 PUSH2 0x12E3 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x33 DUP2 MSTORE PUSH32 0x4F6E6C7920636F6E7472616374206F776E657220697320616C6C6F7765642074 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x69 PUSH1 0x2 EXP PUSH19 0x379031B0B636103A3434B99036B2BA3437B217 MUL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1099 DUP2 PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x1099 DUP2 PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC61 DUP3 DUP5 PUSH2 0x1090 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x11B1 DUP3 DUP7 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x11BE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0xEDA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xCBA DUP2 DUP5 PUSH2 0x109F JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC61 DUP3 DUP5 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xCBA DUP2 DUP5 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xC61 DUP2 PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC61 DUP3 DUP5 PUSH2 0x118C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x1255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x1275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12CE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12B6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x12DD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP MSTORE8 PUSH6 0x6E646572206E PUSH16 0x7420617574686F72697A656420746F20 PUSH4 0x616C6C20 PUSH21 0x681F32C1B084E2DE0713B8FB16BD46BB9DF710A3DB 0xea 0xe2 RETURN 0xca SWAP4 0xaf 0x46 0xe0 AND 0xdc 0xc6 0xb0 LOG2 PUSH6 0x627A7A723058 KECCAK256 DUP7 0xdf CODECOPY 0xc SLOAD LT 0x1f MSTORE8 LOG0 0xa9 0xd2 MSTORE8 0xdc DUP6 CALLDATACOPY 0xde 0xba 0xc2 0xf6 0xc9 0xd1 0xa8 REVERT 0xc6 0x21 0xb0 PUSH26 0x652744F8BA6C6578706572696D656E74616CF500370000000000 ",
				"sourceMap": "869:1507:0:-;;;;;;;;;-1:-1:-1;;;869:1507:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1650:318:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1650:318:2;;;;;;;;;;;1535:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1535:28:2;;;;;;;;;;;;;;;;;;;;;;;;;1691:438:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1691:438:1;;;;;;;;;2082:542:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2082:542:2;;;;;;;;;292:20:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:20:12;;;;2797:498:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2797:498:2;;;;;;;;;1042:290:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1042:290:1;;;;;;;;;2262:112:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2262:112:0;;;;;;;;;;;;1486:43:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1486:43:2;;;;;;;;;;;;;;;;;3392:138;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3392:138:2;;;;;;;;;;;;566:167:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;566:167:12;;;;;;;;;1650:318:2;460:5:12;;-1:-1:-1;;;;;460:5:12;446:10;:19;425:117;;;;-1:-1:-1;;;;;425:117:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1767:18:2;;;;;;:10;:18;;;;;;;;;;1799:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1799:25:2;;;;;;;;1767:18;;1766:19;1745:89;;;;-1:-1:-1;;;;;1745:89:2;;;;;;;;;;-1:-1:-1;;;;;;1845:18:2;;;;;;1866:4;1845:18;;;;;;;;:25;;-1:-1:-1;;1845:25:2;;;;;1880:11;27:10:-1;;23:18;;;45:23;;1880:24:2;;;;;;;;-1:-1:-1;;;;;;1880:24:2;;;;;1919:42;1950:10;;1845:18;1919:42;;;1650:318;:::o;1535:28::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1535:28:2;;-1:-1:-1;1535:28:2;:::o;1691:438:1:-;1406:10:2;1908:9:1;1395:22:2;;;:10;:22;;;;;;;;;1431:21;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1431:21:2;;;;;;;-1:-1:-1;;;;;1431:21:2;;;;;;;1395:22;;1374:88;;;;;;-1:-1:-1;;;;;1374:88:2;;;;;;;;;;;1920:1:1;1908:13;;1903:220;1927:13;:20;1923:1;:24;1903:220;;;1968:144;2006:13;2020:1;2006:16;;;;;;;;;;;;;;;;;;2040:4;2045:1;2040:7;;;;;;;;;;;;;;;;;;2065:2;2068:1;2065:5;;;;;;;;;;;;;;;;;;2088:7;2096:1;2088:10;;;;;;;;;;;;;;;;;;1968:20;:144::i;:::-;1949:3;;1903:220;;;1691:438;;;;;:::o;2082:542:2:-;2315:6;460:5:12;;-1:-1:-1;;;;;460:5:12;446:10;:19;425:117;;;;-1:-1:-1;;;;;425:117:12;;;;;;;;;-1:-1:-1;;;;;2201:18:2;;;;;;:10;:18;;;;;;;;;;2233:21;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2233:21:2;;;;;;;;2201:18;;2180:84;;;;;;-1:-1:-1;;;;;2180:84:2;;;;;;;;;;-1:-1:-1;;;;;;;2282:18:2;;;;;;:10;:18;;;;;2275:25;;-1:-1:-1;;2275:25:2;;;2310:249;2331:11;:18;2327:22;;2310:249;;;2392:6;-1:-1:-1;;;;;2374:24:2;:11;2386:1;2374:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2374:14:2;:24;2370:179;;;2435:11;2447:18;;-1:-1:-1;;2447:22:2;;;2435:35;;;;;;;;;;;;;;;;2418:11;:14;;-1:-1:-1;;;;;2435:35:2;;;;2430:1;;2418:14;;;;;;;;;;;;;;;:52;;-1:-1:-1;;;;;;2418:52:2;-1:-1:-1;;;;;2418:52:2;;;;;;;;;;2488:11;:23;;-1:-1:-1;;2488:23:2;;;;;;:::i;:::-;;2529:5;;2370:179;2351:3;;2310:249;;;2573:44;;2606:10;;-1:-1:-1;;;;;2573:44:2;;;-1:-1:-1;;;;;;;;;;;2573:44:2;;;;2082:542;;:::o;292:20:12:-;;;-1:-1:-1;;;;;292:20:12;;:::o;2797:498:2:-;2928:11;:18;2960:19;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2960:19:2;;;;;;;;2920:26;;2899:90;;;;-1:-1:-1;;;;;2899:90:2;;;;;;;;;;;3042:6;-1:-1:-1;;;;;3020:28:2;:11;3032:5;3020:18;;;;;;;;;;;;;;;;;;;;;3062:22;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3062:22:2;;;;;;-1:-1:-1;;;;;3020:18:2;;;:28;2999:95;;;;-1:-1:-1;;;;;2999:95:2;;;;;;;;;;-1:-1:-1;;;;;;3112:18:2;;;;;;:10;:18;;;;;3105:25;;-1:-1:-1;;3105:25:2;;;3161:11;3173:18;;-1:-1:-1;;3173:22:2;;;3161:35;;;;;;;;;;;;;;;;3140:11;:18;;-1:-1:-1;;;;;3161:35:2;;;;3152:5;;3140:18;;;;;;;;;;;;;;;:56;;-1:-1:-1;;;;;;3140:56:2;-1:-1:-1;;;;;3140:56:2;;;;;;;;;;3206:11;:23;;-1:-1:-1;;3206:23:2;;;;;;:::i;:::-;-1:-1:-1;3244:44:2;;3277:10;;-1:-1:-1;;;;;3244:44:2;;;-1:-1:-1;;;;;;;;;;;3244:44:2;;;;2797:498;;:::o;1042:290:1:-;1406:10:2;1395:22;;;;:10;:22;;;;;;;;;;1431:21;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1431:21:2;;;;;;;-1:-1:-1;;;;;1431:21:2;;;;;;;;1395:22;;1374:88;;;;;;-1:-1:-1;;;;;1374:88:2;;;;;;;;;;;1214:111:1;1248:13;;1214:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1275:4;1293:2;1309:6;1214:20;:111::i;2262:112:0:-;1033:1;2262:112;;:::o;1486:43:2:-;;;;;;;;;;;;;;;:::o;3392:138::-;3473:9;3512:11;3505:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3505:18:2;;;;;;;;;;;;;;;;;;;;;;;3392:138;:::o;566:167:12:-;460:5;;-1:-1:-1;;;;;460:5:12;446:10;:19;425:117;;;;-1:-1:-1;;;;;425:117:12;;;;;;;;;-1:-1:-1;;;;;662:22:12;;;658:69;;700:5;:16;;-1:-1:-1;;;;;;700:16:12;-1:-1:-1;;;;;700:16:12;;;;;658:69;566:167;:::o;1545:619:0:-;1749:13;1776;2008:12;1802:26;1818:9;1802:15;:26::i;:::-;1942:17;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1942:17:0;;;;;;;1735:93;;-1:-1:-1;1735:93:0;-1:-1:-1;1909:19:0;;;1033:1;1909:19;1888:81;;;;-1:-1:-1;;;;;1888:81:0;;;;;;;;;;-1:-1:-1;2023:49:0;;-1:-1:-1;;;;;2023:49:0;;-1:-1:-1;;;;;2023:31:0;;;;;:49;;2055:4;;2061:2;;2065:6;;2023:49;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2023:49:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2023:49:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2023:49:0;;;;;;;;;2132:15;;;;;;;;;;;;-1:-1:-1;;;;;2132:15:0;;;;2008:64;;-1:-1:-1;2114:4:0;2103:15;;;;2082:75;;;;-1:-1:-1;;;;;2082:75:0;;;;;;;;;;;1545:619;;;;;;;:::o;965:393:8:-;1074:13;1101;1160:9;:16;1180:2;1160:22;1196:29;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1196:29:8;;;1139:96;;;;;;;-1:-1:-1;;;;;1139:96:8;;;;;;;;;;;1261:9;1271:1;1261:12;;;;;;;;;;;;;;-1:-1:-1;;;1261:12:8;;;;;;1255:19;;-1:-1:-1;1292:25:8;1304:9;1315:1;1292:11;:25::i;:::-;1284:33;-1:-1:-1;965:393:8;;;:::o;2204:868:9:-;2325:14;2388:5;2396:2;2388:10;2376:1;:8;:22;;2440;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2440:22:9;;;2355:117;;;;;;;-1:-1:-1;;;;;2355:117:9;;;;;;;;;;-1:-1:-1;;2719:2:9;2974:13;;;;;2968:20;2710:11;;;-1:-1:-1;;;;;2964:69:9;2204:868;;;;;:::o;869:1507:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;5:118:-1;;72:46;110:6;97:20;72:46;;;63:55;57:66;-1:-1;;;57:66;148:707;;258:4;246:17;;242:27;-1:-1;232:2;;283:1;280;273:12;232:2;320:6;307:20;342:80;357:64;414:6;357:64;;;342:80;;;333:89;;439:5;464:6;457:5;450:21;494:4;486:6;482:17;472:27;;516:4;511:3;507:14;500:21;;569:6;616:3;608:4;600:6;596:17;591:3;587:27;584:36;581:2;;;633:1;630;623:12;581:2;658:1;643:206;668:6;665:1;662:13;643:206;;;726:3;748:37;781:3;769:10;748:37;;;736:50;;-1:-1;809:4;800:14;;;;828;;;;;690:1;683:9;643:206;;;647:14;225:630;;;;;;;;879:693;;994:4;982:17;;978:27;-1:-1;968:2;;1019:1;1016;1009:12;968:2;1056:6;1043:20;1078:85;1093:69;1155:6;1093:69;;1078:85;1191:21;;;1235:4;1223:17;;;;1069:94;;-1:-1;1248:14;;1223:17;1343:1;1328:238;1353:6;1350:1;1347:13;1328:238;;;1436:3;1423:17;1415:6;1411:30;1460:42;1498:3;1486:10;1460:42;;;1448:55;;-1:-1;1526:4;1517:14;;;;1545;;;;;1375:1;1368:9;1328:238;;1598:707;;1708:4;1696:17;;1692:27;-1:-1;1682:2;;1733:1;1730;1723:12;1682:2;1770:6;1757:20;1792:80;1807:64;1864:6;1807:64;;1792:80;1783:89;;1889:5;1914:6;1907:5;1900:21;1944:4;1936:6;1932:17;1922:27;;1966:4;1961:3;1957:14;1950:21;;2019:6;2066:3;2058:4;2050:6;2046:17;2041:3;2037:27;2034:36;2031:2;;;2083:1;2080;2073:12;2031:2;2108:1;2093:206;2118:6;2115:1;2112:13;2093:206;;;2176:3;2198:37;2231:3;2219:10;2198:37;;;2186:50;;-1:-1;2259:4;2250:14;;;;2278;;;;;2140:1;2133:9;2093:206;;2313:116;;2388:36;2416:6;2410:13;2388:36;;2450:335;;;2557:4;2545:17;;2541:27;-1:-1;2531:2;;2582:1;2579;2572:12;2531:2;-1:-1;2602:20;;-1:-1;;;;;2631:30;;2628:2;;;2674:1;2671;2664:12;2628:2;2708:4;2700:6;2696:17;2684:29;;2758:3;2751;2743:6;2739:16;2729:8;2725:31;2722:40;2719:2;;;2775:1;2772;2765:12;2719:2;2524:261;;;;;;2794:432;;2884:4;2872:17;;2868:27;-1:-1;2858:2;;2909:1;2906;2899:12;2858:2;2946:6;2933:20;2968:60;2983:44;3020:6;2983:44;;2968:60;2959:69;;3048:6;3041:5;3034:21;3084:4;3076:6;3072:17;3117:4;3110:5;3106:16;3152:3;3143:6;3138:3;3134:16;3131:25;3128:2;;;3169:1;3166;3159:12;3128:2;3179:41;3213:6;3208:3;3203;3179:41;;;2851:375;;;;;;;;3234:118;;3301:46;3339:6;3326:20;3301:46;;3359:241;;3463:2;3451:9;3442:7;3438:23;3434:32;3431:2;;;3479:1;3476;3469:12;3431:2;3514:1;3531:53;3576:7;3556:9;3531:53;;;3521:63;3425:175;-1:-1;;;;3425:175;3607:366;;;3728:2;3716:9;3707:7;3703:23;3699:32;3696:2;;;3744:1;3741;3734:12;3696:2;3779:1;3796:53;3841:7;3821:9;3796:53;;;3786:63;;3758:97;3886:2;3904:53;3949:7;3940:6;3929:9;3925:22;3904:53;;;3894:63;;3865:98;3690:283;;;;;;3980:1171;;;;;4240:3;4228:9;4219:7;4215:23;4211:33;4208:2;;;4257:1;4254;4247:12;4208:2;4292:31;;-1:-1;;;;;4332:30;;4329:2;;;4375:1;4372;4365:12;4329:2;4395:83;4470:7;4461:6;4450:9;4446:22;4395:83;;;4385:93;;4271:213;4543:2;4532:9;4528:18;4515:32;-1:-1;;;;;4559:6;4556:30;4553:2;;;4599:1;4596;4589:12;4553:2;4619:78;4689:7;4680:6;4669:9;4665:22;4619:78;;;4609:88;;4494:209;4762:2;4751:9;4747:18;4734:32;-1:-1;;;;;4778:6;4775:30;4772:2;;;4818:1;4815;4808:12;4772:2;4838:78;4908:7;4899:6;4888:9;4884:22;4838:78;;;4828:88;;4713:209;4981:2;4970:9;4966:18;4953:32;-1:-1;;;;;4997:6;4994:30;4991:2;;;5037:1;5034;5027:12;4991:2;5057:78;5127:7;5118:6;5107:9;5103:22;5057:78;;;5047:88;;4932:209;4202:949;;;;;;;;5158:257;;5270:2;5258:9;5249:7;5245:23;5241:32;5238:2;;;5286:1;5283;5276:12;5238:2;5321:1;5338:61;5391:7;5371:9;5338:61;;5422:741;;;;;;5596:3;5584:9;5575:7;5571:23;5567:33;5564:2;;;5613:1;5610;5603:12;5564:2;5648:31;;-1:-1;;;;;5688:30;;5685:2;;;5731:1;5728;5721:12;5685:2;5759:64;5815:7;5806:6;5795:9;5791:22;5759:64;;;5741:82;;;;5627:202;5860:2;5878:53;5923:7;5914:6;5903:9;5899:22;5878:53;;;5868:63;;5839:98;5968:2;5986:53;6031:7;6022:6;6011:9;6007:22;5986:53;;;5976:63;;5947:98;6076:2;6094:53;6139:7;6130:6;6119:9;6115:22;6094:53;;;6084:63;;6055:98;5558:605;;;;;;;;;6170:241;;6274:2;6262:9;6253:7;6249:23;6245:32;6242:2;;;6290:1;6287;6280:12;6242:2;6325:1;6342:53;6387:7;6367:9;6342:53;;6418:110;6491:31;6516:5;6491:31;;;6486:3;6479:44;6473:55;;;6566:590;;6701:54;6749:5;6701:54;;;6773:6;6768:3;6761:19;6797:4;6792:3;6788:14;6781:21;;6842:56;6892:5;6842:56;;;6919:1;6904:230;6929:6;6926:1;6923:13;6904:230;;;6969:53;7018:3;7009:6;7003:13;6969:53;;;7039:60;7092:6;7039:60;;;7122:4;7113:14;;;;;7029:70;-1:-1;6951:1;6944:9;6904:230;;;-1:-1;7147:3;;6680:476;-1:-1;;;;6680:476;7164:101;7231:28;7253:5;7231:28;;7272:292;;7370:35;7399:5;7370:35;;;7422:6;7417:3;7410:19;7434:63;7490:6;7483:4;7478:3;7474:14;7467:4;7460:5;7456:16;7434:63;;;7529:29;7551:6;7529:29;;;7509:50;;;7522:4;7509:50;;7350:214;-1:-1;;;7350:214;7572:397;7727:2;7715:15;;7764:66;7759:2;7750:12;;7743:88;-1:-1;;;;;7860:2;7851:12;;7844:88;7960:2;7951:12;;7708:261;7977:110;8050:31;8075:5;8050:31;;8094:104;8163:29;8186:5;8163:29;;8205:193;8313:2;8298:18;;8327:61;8302:9;8361:6;8327:61;;8405:395;8569:2;8554:18;;8583:61;8558:9;8617:6;8583:61;;;8655:62;8713:2;8702:9;8698:18;8689:6;8655:62;;;8728;8786:2;8775:9;8771:18;8762:6;8728:62;;8807:341;8965:2;8979:47;;;8950:18;;9040:98;8950:18;9124:6;9040:98;;9155:181;9257:2;9242:18;;9271:55;9246:9;9299:6;9271:55;;9343:273;9467:2;9481:47;;;9452:18;;9542:64;9452:18;9592:6;9542:64;;9623:387;9804:2;9818:47;;;9789:18;;9879:121;9789:18;9879:121;;10017:185;10121:2;10106:18;;10135:57;10110:9;10165:6;10135:57;;10209:256;10271:2;10265:9;10297:17;;;-1:-1;;;;;10357:34;;10393:22;;;10354:62;10351:2;;;10429:1;10426;10419:12;10351:2;10445;10438:22;10249:216;;-1:-1;10249:216;10472:258;;-1:-1;;;;;10623:6;10620:30;10617:2;;;10663:1;10660;10653:12;10617:2;-1:-1;10692:4;10680:17;;;10710:15;;10554:176;11272:254;;-1:-1;;;;;11403:6;11400:30;11397:2;;;11443:1;11440;11433:12;11397:2;-1:-1;11516:4;11487;11464:17;;;;-1:-1;;11460:33;11506:15;;11334:192;11535:121;11644:4;11632:17;;11613:43;11665:107;11755:12;;11739:33;12005:128;-1:-1;;;;;12074:54;;12057:76;12140:92;12213:13;12206:21;;12189:43;12325:88;12403:4;12392:16;;12375:38;12741:145;12822:6;12817:3;12812;12799:30;-1:-1;12878:1;12860:16;;12853:27;12792:94;12895:268;12960:1;12967:101;12981:6;12978:1;12975:13;12967:101;;;13048:11;;;13042:18;13029:11;;;13022:39;13003:2;12996:10;12967:101;;;13083:6;13080:1;13077:13;13074:2;;;13148:1;13139:6;13134:3;13130:16;13123:27;13074:2;12944:219;;;;;13171:97;13259:2;13239:14;-1:-1;;13235:28;;13219:49"
			}
		}
	},
	"sources": {
		"current/protocol/AssetProxy/ERC20Proxy.sol": {
			"id": 0
		},
		"current/protocol/AssetProxy/MixinAssetProxy.sol": {
			"id": 1
		},
		"current/protocol/AssetProxy/MixinAuthorizable.sol": {
			"id": 2
		},
		"current/protocol/AssetProxy/interfaces/IAssetProxy.sol": {
			"id": 3
		},
		"current/protocol/AssetProxy/interfaces/IAuthorizable.sol": {
			"id": 4
		},
		"current/protocol/AssetProxy/mixins/MAssetProxy.sol": {
			"id": 5
		},
		"current/protocol/AssetProxy/mixins/MAuthorizable.sol": {
			"id": 6
		},
		"current/tokens/ERC20Token/IERC20Token.sol": {
			"id": 7
		},
		"current/utils/LibAssetProxyDecoder/LibAssetProxyDecoder.sol": {
			"id": 8
		},
		"current/utils/LibBytes/LibBytes.sol": {
			"id": 9
		},
		"current/utils/LibMem/LibMem.sol": {
			"id": 10
		},
		"current/utils/Ownable/IOwnable.sol": {
			"id": 11
		},
		"current/utils/Ownable/Ownable.sol": {
			"id": 12
		}
	},
	"sourceCodes": {
		"current/protocol/AssetProxy/ERC20Proxy.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../../utils/LibBytes/LibBytes.sol\";\nimport \"../../utils/LibAssetProxyDecoder/LibAssetProxyDecoder.sol\";\nimport \"../../tokens/ERC20Token/IERC20Token.sol\";\nimport \"./MixinAssetProxy.sol\";\nimport \"./MixinAuthorizable.sol\";\n\ncontract ERC20Proxy is\n    LibBytes,\n    LibAssetProxyDecoder,\n    MixinAssetProxy,\n    MixinAuthorizable\n{\n\n    // Id of this proxy.\n    uint8 constant PROXY_ID = 1;\n\n    // Revert reasons\n    string constant INVALID_METADATA_LENGTH = \"Metadata must have a length of 21.\";\n    string constant TRANSFER_FAILED = \"Transfer failed.\";\n    string constant PROXY_ID_MISMATCH = \"Proxy id in metadata does not match this proxy id.\";\n\n    /// @dev Internal version of `transferFrom`.\n    /// @param proxyData Encoded byte array.\n    /// @param from Address to transfer asset from.\n    /// @param to Address to transfer asset to.\n    /// @param amount Amount of asset to transfer.\n    function transferFromInternal(\n        bytes memory proxyData,\n        address from,\n        address to,\n        uint256 amount)\n        internal\n    {\n        // Decode proxy data.\n        (\n            uint8 proxyId,\n            address token\n        ) = decodeERC20Data(proxyData);\n\n        // Data must be intended for this proxy.\n        require(\n            proxyId == PROXY_ID,\n            PROXY_ID_MISMATCH\n        );\n\n        // Transfer tokens.\n        bool success = IERC20Token(token).transferFrom(from, to, amount);\n        require(\n            success == true,\n            TRANSFER_FAILED\n        );\n    }\n\n    /// @dev Gets the proxy id associated with the proxy address.\n    /// @return Proxy id.\n    function getProxyId()\n        external\n        view\n        returns (uint8)\n    {\n        return PROXY_ID;\n    }\n}\n",
		"current/protocol/AssetProxy/MixinAssetProxy.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"./mixins/MAssetProxy.sol\";\nimport \"./mixins/MAuthorizable.sol\";\n\ncontract MixinAssetProxy is \n    MAuthorizable,\n    MAssetProxy\n{\n\n    /// @dev Transfers assets. Either succeeds or throws.\n    /// @param assetMetadata Encoded byte array.\n    /// @param from Address to transfer asset from.\n    /// @param to Address to transfer asset to.\n    /// @param amount Amount of asset to transfer.\n    function transferFrom(\n        bytes assetMetadata,\n        address from,\n        address to,\n        uint256 amount)\n        external\n        onlyAuthorized\n    {\n        transferFromInternal(\n            assetMetadata,\n            from,\n            to,\n            amount\n        );\n    }\n\n    /// @dev Makes multiple transfers of assets. Either succeeds or throws.\n    /// @param assetMetadata Array of byte arrays encoded for the respective asset proxy.\n    /// @param from Array of addresses to transfer assets from.\n    /// @param to Array of addresses to transfer assets to.\n    /// @param amounts Array of amounts of assets to transfer.\n    function batchTransferFrom(\n        bytes[] memory assetMetadata,\n        address[] memory from,\n        address[] memory to,\n        uint256[] memory amounts)\n        public\n        onlyAuthorized\n    {\n        for (uint256 i = 0; i < assetMetadata.length; i++) {\n            transferFromInternal(\n                assetMetadata[i],\n                from[i],\n                to[i],\n                amounts[i]\n            );\n        }\n    }\n}\n",
		"current/protocol/AssetProxy/MixinAuthorizable.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"./mixins/MAuthorizable.sol\";\nimport \"../../utils/Ownable/Ownable.sol\";\n\ncontract MixinAuthorizable is\n    Ownable,\n    MAuthorizable\n{\n\n    // Revert reasons\n    string constant SENDER_NOT_AUTHORIZED = \"Sender not authorized to call this method.\";\n    string constant TARGET_NOT_AUTHORIZED = \"Target address must be authorized.\";\n    string constant TARGET_ALREADY_AUTHORIZED = \"Target must not already be authorized.\";\n    string constant INDEX_OUT_OF_BOUNDS = \"Specified array index is out of bounds.\";\n    string constant INDEX_ADDRESS_MISMATCH = \"Address found at index does not match target address.\";\n\n    /// @dev Only authorized addresses can invoke functions with this modifier.\n    modifier onlyAuthorized {\n        require(\n            authorized[msg.sender],\n            SENDER_NOT_AUTHORIZED\n        );\n        _;\n    }\n\n    mapping (address => bool) public authorized;\n    address[] public authorities;\n\n    /// @dev Authorizes an address.\n    /// @param target Address to authorize.\n    function addAuthorizedAddress(address target)\n        external\n        onlyOwner\n    {\n        require(\n            !authorized[target],\n            TARGET_ALREADY_AUTHORIZED\n        );\n\n        authorized[target] = true;\n        authorities.push(target);\n        emit AuthorizedAddressAdded(target, msg.sender);\n    }\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    function removeAuthorizedAddress(address target)\n        external\n        onlyOwner\n    {\n        require(\n            authorized[target],\n            TARGET_NOT_AUTHORIZED\n        );\n\n        delete authorized[target];\n        for (uint i = 0; i < authorities.length; i++) {\n            if (authorities[i] == target) {\n                authorities[i] = authorities[authorities.length - 1];\n                authorities.length -= 1;\n                break;\n            }\n        }\n        emit AuthorizedAddressRemoved(target, msg.sender);\n    }\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    /// @param index Index of target in authorities array.\n    function removeAuthorizedAddressAtIndex(address target, uint256 index)\n        external\n    {\n        require(\n            index < authorities.length,\n            INDEX_OUT_OF_BOUNDS\n        );\n        require(\n            authorities[index] == target,\n            INDEX_ADDRESS_MISMATCH\n        );\n\n        delete authorized[target];\n        authorities[index] = authorities[authorities.length - 1];\n        authorities.length -= 1;\n        emit AuthorizedAddressRemoved(target, msg.sender);\n    }\n\n    /// @dev Gets all authorized addresses.\n    /// @return Array of authorized addresses.\n    function getAuthorizedAddresses()\n        external\n        view\n        returns (address[] memory)\n    {\n        return authorities;\n    }\n}\n",
		"current/protocol/AssetProxy/interfaces/IAssetProxy.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"./IAuthorizable.sol\";\n\ncontract IAssetProxy is\n    IAuthorizable\n{\n\n    /// @dev Transfers assets. Either succeeds or throws.\n    /// @param assetMetadata Byte array encoded for the respective asset proxy.\n    /// @param from Address to transfer asset from.\n    /// @param to Address to transfer asset to.\n    /// @param amount Amount of asset to transfer.\n    function transferFrom(\n        bytes assetMetadata,\n        address from,\n        address to,\n        uint256 amount)\n        external;\n    \n    /// @dev Makes multiple transfers of assets. Either succeeds or throws.\n    /// @param assetMetadata Array of byte arrays encoded for the respective asset proxy.\n    /// @param from Array of addresses to transfer assets from.\n    /// @param to Array of addresses to transfer assets to.\n    /// @param amounts Array of amounts of assets to transfer.\n    function batchTransferFrom(\n        bytes[] memory assetMetadata,\n        address[] memory from,\n        address[] memory to,\n        uint256[] memory amounts)\n        public;\n\n    /// @dev Gets the proxy id associated with the proxy address.\n    /// @return Proxy id.\n    function getProxyId()\n        external\n        view\n        returns (uint8);\n}\n\n",
		"current/protocol/AssetProxy/interfaces/IAuthorizable.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../../../utils/Ownable/IOwnable.sol\";\n\ncontract IAuthorizable is\n    IOwnable\n{\n\n    /// @dev Gets all authorized addresses.\n    /// @return Array of authorized addresses.\n    function getAuthorizedAddresses()\n        external\n        view\n        returns (address[]);\n\n    /// @dev Authorizes an address.\n    /// @param target Address to authorize.\n    function addAuthorizedAddress(address target)\n        external;\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    function removeAuthorizedAddress(address target)\n        external;\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    /// @param index Index of target in authorities array.\n    function removeAuthorizedAddressAtIndex(address target, uint256 index)\n        external;\n}\n",
		"current/protocol/AssetProxy/mixins/MAssetProxy.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../interfaces/IAssetProxy.sol\";\n\ncontract MAssetProxy is\n    IAssetProxy\n{\n\n    /// @dev Internal version of `transferFrom`.\n    /// @param assetMetadata Encoded byte array.\n    /// @param from Address to transfer asset from.\n    /// @param to Address to transfer asset to.\n    /// @param amount Amount of asset to transfer.\n    function transferFromInternal(\n        bytes memory assetMetadata,\n        address from,\n        address to,\n        uint256 amount)\n        internal;\n}\n",
		"current/protocol/AssetProxy/mixins/MAuthorizable.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../interfaces/IAuthorizable.sol\";\n\ncontract MAuthorizable is\n    IAuthorizable\n{\n\n    // Event logged when a new address is authorized.\n    event AuthorizedAddressAdded(\n        address indexed target,\n        address indexed caller\n    );\n\n    // Event logged when a currently authorized address is unauthorized.\n    event AuthorizedAddressRemoved(\n        address indexed target,\n        address indexed caller\n    );\n\n    /// @dev Only authorized addresses can invoke functions with this modifier.\n    modifier onlyAuthorized { _; }\n}\n",
		"current/tokens/ERC20Token/IERC20Token.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\ncontract IERC20Token {\n\n    /// @notice send `value` token to `to` from `msg.sender`\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    /// @return Whether the transfer was successful or not\n    function transfer(address _to, uint256 _value)\n        public\n        returns (bool);\n\n    /// @notice send `value` token to `to` from `from` on the condition it is approved by `from`\n    /// @param _from The address of the sender\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    /// @return Whether the transfer was successful or not\n    function transferFrom(address _from, address _to, uint256 _value)\n        public\n        returns (bool);\n    \n    /// @notice `msg.sender` approves `_spender` to spend `_value` tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @param _value The amount of wei to be approved for transfer\n    /// @return Whether the approval was successful or not\n    function approve(address _spender, uint256 _value)\n        public\n        returns (bool);\n\n    /// @param _owner The address from which the balance will be retrieved\n    /// @return The balance\n    function balanceOf(address _owner)\n        public view\n        returns (uint256);\n\n    /// @param _owner The address of the account owning tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens allowed to spent\n    function allowance(address _owner, address _spender)\n        public view\n        returns (uint256);\n\n    event Transfer(\n        address indexed _from,\n        address indexed _to,\n        uint256 _value\n    );\n    \n    event Approval(\n        address indexed _owner,\n        address indexed _spender,\n        uint256 _value\n    );\n}\n",
		"current/utils/LibAssetProxyDecoder/LibAssetProxyDecoder.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../LibBytes/LibBytes.sol\";\n\ncontract LibAssetProxyDecoder is\n    LibBytes\n{\n\n    string constant INVALID_ERC20_METADATA_LENGTH = \"Metadata must have a length of 21.\";\n    string constant INVALID_ERC721_METADATA_LENGTH = \"Metadata must have a length of at least 53.\";\n\n    /// @dev Decodes ERC721 Asset Proxy data\n    function decodeERC20Data(bytes memory proxyData)\n        internal\n        pure\n        returns (\n            uint8 proxyId,\n            address token\n        )\n    {\n        require(\n            proxyData.length == 21,\n            INVALID_ERC20_METADATA_LENGTH\n        );\n        proxyId = uint8(proxyData[0]);\n        token = readAddress(proxyData, 1);\n\n        return (proxyId, token);\n    }\n\n    /// @dev Decodes ERC721 Asset Proxy data\n    function decodeERC721Data(bytes memory proxyData)\n        internal\n        pure\n        returns (\n            uint8 proxyId,\n            address token,\n            uint256 tokenId,\n            bytes memory data\n        )\n    {\n        require(\n            proxyData.length >= 53,\n            INVALID_ERC721_METADATA_LENGTH\n        );\n        proxyId = uint8(proxyData[0]);\n        token = readAddress(proxyData, 1);\n        tokenId = readUint256(proxyData, 21);\n        if (proxyData.length > 53) {\n            data = readBytes(proxyData, 53);\n        }\n\n        return (proxyId, token, tokenId, data);\n    }\n}\n",
		"current/utils/LibBytes/LibBytes.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\nimport \"../LibMem/LibMem.sol\";\n\ncontract LibBytes is\n    LibMem\n{\n\n    // Revert reasons\n    string constant GTE_20_LENGTH_REQUIRED = \"Length must be greater than or equal to 20.\";\n    string constant GTE_32_LENGTH_REQUIRED = \"Length must be greater than or equal to 32.\";\n\n    /// @dev Tests equality of two byte arrays.\n    /// @param lhs First byte array to compare.\n    /// @param rhs Second byte array to compare.\n    /// @return True if arrays are the same. False otherwise.\n    function areBytesEqual(bytes memory lhs, bytes memory rhs)\n        internal\n        pure\n        returns (bool equal)\n    {\n        assembly {\n            // Get the number of words occupied by <lhs>\n            let lenFullWords := div(add(mload(lhs), 0x1F), 0x20)\n\n            // Add 1 to the number of words, to account for the length field\n            lenFullWords := add(lenFullWords, 0x1)\n\n            // Test equality word-by-word.\n            // Terminates early if there is a mismatch.\n            for {let i := 0} lt(i, lenFullWords) {i := add(i, 1)} {\n                let lhsWord := mload(add(lhs, mul(i, 0x20)))\n                let rhsWord := mload(add(rhs, mul(i, 0x20)))\n                equal := eq(lhsWord, rhsWord)\n                if eq(equal, 0) {\n                    // Break\n                    i := lenFullWords\n                }\n            }\n       }\n\n       return equal;\n    }\n\n    /// @dev Reads an address from a position in a byte array.\n    /// @param b Byte array containing an address.\n    /// @param index Index in byte array of address.\n    /// @return address from byte array.\n    function readAddress(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (address result)\n    {\n        require(\n            b.length >= index + 20,  // 20 is length of address\n            GTE_20_LENGTH_REQUIRED\n        );\n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Read address from array memory\n        assembly {\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 20-byte mask to obtain address\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n        return result;\n    }\n\n    /// @dev Writes an address into a specific position in a byte array.\n    /// @param b Byte array to insert address into.\n    /// @param index Index in byte array of address.\n    /// @param input Address to put into byte array.\n    function writeAddress(\n        bytes memory b,\n        uint256 index,\n        address input\n    )\n        internal\n        pure\n    {\n        require(\n            b.length >= index + 20,  // 20 is length of address\n            GTE_20_LENGTH_REQUIRED\n        );\n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Store address into array memory\n        assembly {\n            // The address occupies 20 bytes and mstore stores 32 bytes.\n            // First fetch the 32-byte word where we'll be storing the address, then\n            // apply a mask so we have only the bytes in the word that the address will not occupy.\n            // Then combine these bytes with the address and store the 32 bytes back to memory with mstore.\n\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 12-byte mask to obtain extra bytes occupying word of memory where we'll store the address\n            let neighbors := and(mload(add(b, index)), 0xffffffffffffffffffffffff0000000000000000000000000000000000000000)\n\n            // Store the neighbors and address into memory\n            mstore(add(b, index), xor(input, neighbors))\n        }\n    }\n\n    /// @dev Reads a bytes32 value from a position in a byte array.\n    /// @param b Byte array containing a bytes32 value.\n    /// @param index Index in byte array of bytes32 value.\n    /// @return bytes32 value from byte array.\n    function readBytes32(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (bytes32 result)\n    {\n        require(\n            b.length >= index + 32,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            result := mload(add(b, index))\n        }\n        return result;\n    }\n\n    /// @dev Writes a bytes32 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input bytes32 to put into byte array.\n    function writeBytes32(\n        bytes memory b,\n        uint256 index,\n        bytes32 input\n    )\n        internal\n        pure\n    {\n        require(\n            b.length >= index + 32,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            mstore(add(b, index), input)\n        }\n    }\n\n    /// @dev Reads a uint256 value from a position in a byte array.\n    /// @param b Byte array containing a uint256 value.\n    /// @param index Index in byte array of uint256 value.\n    /// @return uint256 value from byte array.\n    function readUint256(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (uint256 result)\n    {\n        return uint256(readBytes32(b, index));\n    }\n\n    /// @dev Writes a uint256 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input uint256 to put into byte array.\n    function writeUint256(\n        bytes memory b,\n        uint256 index,\n        uint256 input\n    )\n        internal\n        pure\n    {\n        writeBytes32(b, index, bytes32(input));\n    }\n\n    /// @dev Reads a uint256 value from a position in a byte array.\n    /// @param b Byte array containing a uint256 value.\n    /// @param index Index in byte array of uint256 value.\n    /// @return uint256 value from byte array.\n    function readBytes(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (bytes memory result)\n    {\n        // Read length of nested bytes\n        uint256 nestedBytesLength = readUint256(b, index);\n        index += 32;\n\n        // Assert length of <b> is valid, given\n        // length of nested bytes\n        require(\n            b.length >= index + nestedBytesLength,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Allocate memory and copy value to result\n        result = new bytes(nestedBytesLength);\n        memcpy(\n            getMemAddress(result) + 32, // +32 skips array length\n            getMemAddress(b) + index + 32,\n            nestedBytesLength\n        );\n\n        return result;\n    }\n\n    /// @dev Writes a uint256 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input uint256 to put into byte array.\n    function writeBytes(\n        bytes memory b,\n        uint256 index,\n        bytes memory input\n    )\n        internal\n        pure\n    {\n        // Read length of nested bytes\n        require(\n            b.length >= index + 32 /* 32 bytes to store length */ + input.length,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Copy <input> into <b>\n        memcpy(\n            getMemAddress(b) + index + 32,  // +32 to skip length of <b>\n            getMemAddress(input),           // include length of byte array\n            input.length + 32               // +32 bytes to store length\n        );\n    }\n}\n",
		"current/utils/LibMem/LibMem.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\ncontract LibMem {\n\n    function getMemAddress(bytes memory input)\n        internal\n        pure\n        returns (uint256 address_)\n    {\n        assembly {\n            address_ := input\n        }\n        return address_;\n    }\n\n    /// @dev Writes a uint256 into a specific position in a byte array.\n    /// @param dest memory adress to copy bytes to\n    function memcpy(\n        uint256 dest,\n        uint256 source,\n        uint256 length\n    )\n        internal\n        pure\n    {\n        // Base cases\n        if(length == 0) return;\n        if(source == dest) return;\n\n        // Copy bytes from source to dest\n        assembly {\n            // Compute number of complete words to copy + remaining bytes\n            let lenFullWords := div(add(length, 0x1F), 0x20)\n            let remainder := mod(length, 0x20)\n            if gt(remainder, 0) {\n                lenFullWords := sub(lenFullWords, 1)\n            }\n\n            // Copy full words from source to dest\n            let offset := 0\n            let maxOffset := mul(0x20, lenFullWords)\n            for {offset := 0} lt(offset, maxOffset) {offset := add(offset, 0x20)} {\n                mstore(add(dest, offset),  mload(add(source, offset)))\n            }\n\n            // Copy remaining bytes\n            if gt(remainder, 0) {\n                // Read a full word from source, containing X bytes to copy to dest.\n                // We only want to keep the X bytes, zeroing out the remaining bytes.\n                // We accomplish this by a right shift followed by a left shift.\n                // Example:\n                //   Suppose a word of 8 bits has all 1's: [11111111]\n                //   Let X = 7 (we want to copy the first 7 bits)\n                //   Apply a right shift of 1: [01111111]\n                //   Apply a left shift of 1: [11111110]\n                let sourceShiftFactor := exp(2, mul(8, sub(0x20, remainder)))\n                let sourceWord := mload(add(source, offset))\n                let sourceBytes := mul(div(sourceWord, sourceShiftFactor), sourceShiftFactor)\n\n                // Read a full word from dest, containing (32-X) bytes to retain.\n                // We need to zero out the remaining bytes to be overwritten by source,\n                // while retaining the (32-X) bytes we don't want to overwrite.\n                // We accomplish this by a left shift followed by a right shift.\n                // Example:\n                //   Suppose a word of 8 bits has all 1's: [11111111]\n                //   Let X = 7 (we want to free the first 7 bits, and retain the last bit)\n                //   Apply a left shift of 1: [11111110]\n                //   Apply a right shift of 1: [01111111]\n                let destShiftFactor := exp(2, mul(8, remainder))\n                let destWord := mload(add(dest, offset))\n                let destBytes := div(mul(destWord, destShiftFactor), destShiftFactor)\n\n                // Combine the source and dest bytes. There should be no overlap:\n                // The source bytes run from [0..X-1] and the dest bytes from [X..31].\n                // Example:\n                //   Following the example from above, we have [11111110]\n                //   from the source word and [01111111] from the dest word.\n                //   Combine these words using <or> to get [11111111].\n                let combinedDestWord := or(sourceBytes, destBytes)\n\n                // Store the combined word into dest\n                mstore(add(dest, offset), combinedDestWord)\n            }\n        }\n    }\n}\n",
		"current/utils/Ownable/IOwnable.sol": "pragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\n/*\n * Ownable\n *\n * Base contract with an owner.\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\n */\n\ncontract IOwnable {\n    function transferOwnership(address newOwner)\n        public;\n}\n",
		"current/utils/Ownable/Ownable.sol": "pragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\n/*\n * Ownable\n *\n * Base contract with an owner.\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\n */\n\nimport \"./IOwnable.sol\";\n\ncontract Ownable is IOwnable {\n    address public owner;\n\n    constructor ()\n        public\n    {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(\n            msg.sender == owner,\n            \"Only contract owner is allowed to call this method.\"\n        );\n        _;\n    }\n\n    function transferOwnership(address newOwner)\n        public\n        onlyOwner\n    {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n}\n"
	},
	"sourceTreeHashHex": "0x92bd86c37f752f9481cc2ec3a9e7c61ca819552c0a6c32cfd009994ead0d686a",
	"compiler": {
		"name": "solc",
		"version": "0.4.24",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 0
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap"
					]
				}
			}
		}
	},
	"networks": {}
}